
KeyPad.elf:     file format elf32-littlenios2
KeyPad.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00080230

Program Header:
    LOAD off    0x00001000 vaddr 0x00080000 paddr 0x00080000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00080020 paddr 0x00080020 align 2**12
         filesz 0x0000fc40 memsz 0x0000fc40 flags r-x
    LOAD off    0x00011000 vaddr 0x00040000 paddr 0x0008fc60 align 2**12
         filesz 0x00001e20 memsz 0x00001f80 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00080000  00080000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00080020  00080020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fa30  00080230  00080230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000330  00040000  0008fc60  00011000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af0  00040330  0008ff90  00011330  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00041e20  00091a80  00012e20  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00041f80  00041f80  00012e20  2**0
                  CONTENTS
  7 .program_memory 00000000  00091a80  00091a80  00012e20  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00012e20  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000ef8  00000000  00000000  00012e48  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   000236ae  00000000  00000000  00013d40  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00009100  00000000  00000000  000373ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b783  00000000  00000000  000404ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000021b4  00000000  00000000  0004bc74  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000039a8  00000000  00000000  0004de28  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001786c  00000000  00000000  000517d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  0006903c  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000018d0  00000000  00000000  00069080  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006db12  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0006db15  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006db21  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006db22  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   0000000b  00000000  00000000  0006db23  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    0000000b  00000000  00000000  0006db2e  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   0000000b  00000000  00000000  0006db39  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 00000009  00000000  00000000  0006db44  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 00000036  00000000  00000000  0006db4d  2**0
                  CONTENTS, READONLY
 27 .jdi          00004f86  00000000  00000000  0006db83  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     0004758c  00000000  00000000  00072b09  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00080000 l    d  .entry	00000000 .entry
00080020 l    d  .exceptions	00000000 .exceptions
00080230 l    d  .text	00000000 .text
00040000 l    d  .rodata	00000000 .rodata
00040330 l    d  .rwdata	00000000 .rwdata
00041e20 l    d  .bss	00000000 .bss
00041f80 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00091a80 l    d  .program_memory	00000000 .program_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../KeyPad_bsp//obj/HAL/src/crt0.o
00080268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00040076 l     O .rodata	00000010 zeroes.4404
000828c8 l     F .text	000000bc __sbprintf
00040086 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00082ad8 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00084630 l     F .text	00000008 __fp_unlock
00084644 l     F .text	0000019c __sinit.part.1
000847e0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00040330 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00040774 l     O .rwdata	00000020 lc_ctype_charset
00040754 l     O .rwdata	00000020 lc_message_charset
00040794 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000400b8 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00087cb4 l     F .text	000000fc __sprint_r.part.0
000401dc l     O .rodata	00000010 zeroes.4349
000892f0 l     F .text	000000bc __sbprintf
000401ec l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0008d338 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0008d44c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0008d478 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0008d56c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0008d654 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0008d740 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0008d91c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00041e10 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0008dbc0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0008dcfc l     F .text	00000034 alt_dev_reg
00040d7c l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0008dfec l     F .text	0000020c altera_avalon_jtag_uart_irq
0008e1f8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0008e830 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0008ebc8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0008f028 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0008f188 l     F .text	0000003c alt_get_errno
0008f1c4 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00041e54 g     O .bss	00000004 alt_instruction_exception_handler
000872f8 g     F .text	00000074 _mprec_log10
000873e4 g     F .text	0000008c __any_on
000898a4 g     F .text	00000054 _isatty_r
000400c4 g     O .rodata	00000028 __mprec_tinytens
0008d858 g     F .text	0000007c alt_main
00080464 g     F .text	000000c0 _puts_r
00041e80 g     O .bss	00000100 alt_irq
000898f8 g     F .text	00000060 _lseek_r
0008ff90 g       *ABS*	00000000 __flash_rwdata_start
0008bd10 g     F .text	00000088 .hidden __eqdf2
00041f80 g       *ABS*	00000000 __alt_heap_start
00080428 g     F .text	0000003c printf
00089b10 g     F .text	0000009c _wcrtomb_r
00087b74 g     F .text	0000005c __sseek
00084990 g     F .text	00000010 __sinit
000899b8 g     F .text	00000140 __swbuf_r
00085464 g     F .text	0000007c _setlocale_r
000847e8 g     F .text	00000078 __sfmoreglue
0008d8f8 g     F .text	00000024 __malloc_unlock
00086134 g     F .text	0000015c memmove
00084978 g     F .text	00000018 _cleanup
000863b8 g     F .text	000000a8 _Balloc
0008bd98 g     F .text	000000dc .hidden __gtdf2
0008f5b0 g     F .text	00000024 altera_nios2_gen2_irq_init
00080000 g     F .entry	0000000c __reset
00080020 g       *ABS*	00000000 __flash_exceptions_start
00089848 g     F .text	0000005c _fstat_r
00041e38 g     O .bss	00000004 errno
00087af0 g     F .text	00000008 __seofread
00041e40 g     O .bss	00000004 alt_argv
00049ddc g       *ABS*	00000000 _gp
0008db90 g     F .text	00000030 usleep
00040bfc g     O .rwdata	00000180 alt_fd_list
0008f5d4 g     F .text	00000090 alt_find_dev
00085fec g     F .text	00000148 memcpy
00084638 g     F .text	0000000c _cleanup_r
0008d150 g     F .text	000000dc .hidden __floatsidf
0008f10c g     F .text	0000007c alt_io_redirect
0008be74 g     F .text	000000f4 .hidden __ltdf2
0008fc60 g       *ABS*	00000000 __DTOR_END__
00080524 g     F .text	00000014 puts
0008f830 g     F .text	0000009c alt_exception_cause_generated_bad_addr
000879d4 g     F .text	00000074 __fpclassifyd
00087254 g     F .text	000000a4 __ratio
000892d4 g     F .text	0000001c __vfiprintf_internal
0008e3f0 g     F .text	0000021c altera_avalon_jtag_uart_read
000803f8 g     F .text	00000030 _printf_r
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0008a9b0 g     F .text	00000064 .hidden __udivsi3
0008d5a8 g     F .text	000000ac isatty
00040114 g     O .rodata	000000c8 __mprec_tens
000854e0 g     F .text	0000000c __locale_charset
00041e34 g     O .bss	00000004 __malloc_top_pad
00041de8 g     O .rwdata	00000004 __mb_cur_max
00085510 g     F .text	0000000c _localeconv_r
000867ec g     F .text	0000003c __i2b
00084e14 g     F .text	000004c8 __sfvwrite_r
00087a48 g     F .text	00000054 _sbrk_r
00089958 g     F .text	00000060 _read_r
00041e08 g     O .rwdata	00000004 alt_max_fd
0008953c g     F .text	000000f0 _fclose_r
00084600 g     F .text	00000030 fflush
00041e30 g     O .bss	00000004 __malloc_max_sbrked_mem
0008aa94 g     F .text	000008ac .hidden __adddf3
00086ffc g     F .text	0000010c __b2d
0008a2f4 g     F .text	000005c4 .hidden __umoddi3
0008d77c g     F .text	000000dc lseek
00041de0 g     O .rwdata	00000004 _global_impure_ptr
00087470 g     F .text	00000564 _realloc_r
00041f80 g       *ABS*	00000000 __bss_end
0008ef38 g     F .text	000000f0 alt_iic_isr_register
0008f4a8 g     F .text	00000108 alt_tick
00089cf8 g     F .text	000005fc .hidden __udivdi3
000897a4 g     F .text	00000024 _fputwc_r
000400ec g     O .rodata	00000028 __mprec_bigtens
000865d0 g     F .text	00000104 __s2b
0008d22c g     F .text	000000a8 .hidden __floatunsidf
00086d3c g     F .text	00000060 __mcmp
000849b0 g     F .text	00000018 __fp_lock_all
0008eeec g     F .text	0000004c alt_ic_irq_enabled
0008f40c g     F .text	0000009c alt_alarm_stop
00041e48 g     O .bss	00000004 alt_irq_active
000800fc g     F .exceptions	000000d4 alt_irq_handler
00040bd4 g     O .rwdata	00000028 alt_dev_null
0008eba8 g     F .text	00000020 alt_dcache_flush_all
000866d4 g     F .text	00000068 __hi0bits
0008d0d0 g     F .text	00000080 .hidden __fixdfsi
00080364 g     F .text	00000030 Keypad_clr
00041e20 g       *ABS*	00000000 __ram_rwdata_end
00041e00 g     O .rwdata	00000008 alt_dev_list
0008dbfc g     F .text	00000100 write
00040330 g       *ABS*	00000000 __ram_rodata_end
0008d4b4 g     F .text	000000b8 fstat
0008be74 g     F .text	000000f4 .hidden __ledf2
00086ab4 g     F .text	00000140 __pow5mult
00087dc8 g     F .text	0000150c ___vfiprintf_internal_r
00041e28 g     O .bss	00000004 __nlocale_changed
0008aa14 g     F .text	00000058 .hidden __umodsi3
00041f80 g       *ABS*	00000000 end
0008df2c g     F .text	000000c0 altera_avalon_jtag_uart_init
000801d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0008fc60 g       *ABS*	00000000 __CTOR_LIST__
00068000 g       *ABS*	00000000 __alt_stack_pointer
0008e8a8 g     F .text	0000007c alt_avalon_timer_sc_init
0008d2d4 g     F .text	00000064 .hidden __clzsi2
0008e60c g     F .text	00000224 altera_avalon_jtag_uart_write
000849a0 g     F .text	00000004 __sfp_lock_acquire
00085f08 g     F .text	000000e4 memchr
000805d0 g     F .text	000022dc ___vfprintf_internal_r
00084b04 g     F .text	00000310 _free_r
000854ec g     F .text	00000010 __locale_mb_cur_max
0008faac g     F .text	00000180 __call_exitprocs
00041e24 g     O .bss	00000004 __mlocale_changed
00041dec g     O .rwdata	00000004 __malloc_sbrk_base
00080230 g     F .text	0000003c _start
00041e4c g     O .bss	00000004 _alt_tick_rate
00086bf4 g     F .text	00000148 __lshift
00041e50 g     O .bss	00000004 _alt_nticks
0008d958 g     F .text	00000104 read
0008dd68 g     F .text	00000060 alt_sys_init
0008f994 g     F .text	00000118 __register_exitproc
00086828 g     F .text	0000028c __multiply
0008e298 g     F .text	00000068 altera_avalon_jtag_uart_close
0008aa6c g     F .text	00000028 .hidden __mulsi3
00040330 g       *ABS*	00000000 __ram_rwdata_start
00040000 g       *ABS*	00000000 __ram_rodata_start
00041e58 g     O .bss	00000028 __malloc_current_mallinfo
00087108 g     F .text	0000014c __d2b
0008ddc8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0008f76c g     F .text	000000c4 alt_get_fd
0008ea50 g     F .text	00000158 alt_busy_sleep
0008940c g     F .text	00000054 _close_r
0008f918 g     F .text	0000007c memcmp
0008de88 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00041f80 g       *ABS*	00000000 __alt_stack_base
0008ded8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00080298 g     F .text	00000058 Keypad_config
00082984 g     F .text	00000154 __swsetup_r
0008b340 g     F .text	000009d0 .hidden __divdf3
00084860 g     F .text	00000118 __sfp
0008736c g     F .text	00000078 __copybits
000407cc g     O .rwdata	00000408 __malloc_av_
000849ac g     F .text	00000004 __sinit_lock_release
0008bf68 g     F .text	0000086c .hidden __muldf3
00087a9c g     F .text	00000054 __sread
00041ddc g     O .rwdata	00000004 p_key
0008f664 g     F .text	00000108 alt_find_file
0008ec04 g     F .text	000000a4 alt_dev_llist_insert
0008d8d4 g     F .text	00000024 __malloc_lock
0008dae0 g     F .text	000000b0 sbrk
000845a4 g     F .text	0000005c _fflush_r
00089460 g     F .text	000000dc _calloc_r
00041e20 g       *ABS*	00000000 __bss_start
00086290 g     F .text	00000128 memset
00080394 g     F .text	00000064 main
00041e44 g     O .bss	00000004 alt_envp
00041e2c g     O .bss	00000004 __malloc_max_total_mem
0008de28 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00089af8 g     F .text	00000018 __swbuf
00087bd0 g     F .text	00000008 __sclose
00068000 g       *ABS*	00000000 __alt_heap_limit
0008962c g     F .text	00000014 fclose
00082d00 g     F .text	00001688 _dtoa_r
000856fc g     F .text	0000080c _malloc_r
00089c6c g     F .text	00000030 __ascii_wctomb
00041e0c g     O .rwdata	00000004 alt_errno
000852dc g     F .text	000000c4 _fwalk
0008a8b8 g     F .text	00000084 .hidden __divsi3
000849e0 g     F .text	00000124 _malloc_trim_r
0008fc60 g       *ABS*	00000000 __CTOR_END__
00087bd8 g     F .text	000000dc strcmp
0008fc60 g       *ABS*	00000000 __flash_rodata_start
0008fc60 g       *ABS*	00000000 __DTOR_LIST__
0008bd10 g     F .text	00000088 .hidden __nedf2
0008dd30 g     F .text	00000038 alt_irq_init
0008da5c g     F .text	00000084 alt_release_fd
0008026c g     F .text	0000002c Keypad_init
000401fc g     O .rodata	00000100 .hidden __clz_tab
00041e20 g     O .bss	00000004 _PathLocale
0008f8cc g     F .text	00000014 atexit
000893ac g     F .text	00000060 _write_r
0008551c g     F .text	00000018 setlocale
00041de4 g     O .rwdata	00000004 _impure_ptr
00041e3c g     O .bss	00000004 alt_argc
00084388 g     F .text	0000021c __sflush_r
0008ed08 g     F .text	00000060 _do_dtors
00085508 g     F .text	00000008 __locale_cjk_lang
00080020 g       .exceptions	00000000 alt_irq_entry
00086f98 g     F .text	00000064 __ulp
000849c8 g     F .text	00000018 __fp_unlock_all
00041df8 g     O .rwdata	00000008 alt_fs_list
00080020 g       *ABS*	00000000 __ram_exceptions_start
00085534 g     F .text	0000000c localeconv
0008ed88 g     F .text	00000050 alt_ic_isr_register
000802f0 g     F .text	0000002c Keypad_halt
00041e20 g       *ABS*	00000000 _edata
00041f80 g       *ABS*	00000000 _end
00089640 g     F .text	00000164 __fputwc
00080230 g       *ABS*	00000000 __ram_exceptions_end
0008e300 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0008ee60 g     F .text	0000008c alt_ic_irq_disable
00087af8 g     F .text	0000007c __swrite
00041df0 g     O .rwdata	00000004 __malloc_trim_threshold
000854fc g     F .text	0000000c __locale_msgcharset
0008f8e0 g     F .text	00000038 exit
000853a0 g     F .text	000000c4 _fwalk_reent
00086d9c g     F .text	000001fc __mdiff
0008a93c g     F .text	00000074 .hidden __modsi3
00068000 g       *ABS*	00000000 __alt_data_end
00080020 g     F .exceptions	00000000 alt_exception
000849a4 g     F .text	00000004 __sfp_lock_release
00080000 g       *ABS*	00000000 __alt_mem_program_memory
0008fc2c g     F .text	00000034 _exit
0008e924 g     F .text	0000012c alt_alarm_start
00085540 g     F .text	000001bc __smakebuf_r
00080538 g     F .text	00000098 strlen
0008f2b0 g     F .text	0000015c open
0008bd98 g     F .text	000000dc .hidden __gedf2
00041df4 g     O .rwdata	00000004 __wctomb
0008031c g     F .text	00000048 Keypad_read_buffer
00087db0 g     F .text	00000018 __sprint_r
0008ed68 g     F .text	00000020 alt_icache_flush_all
00041e14 g     O .rwdata	00000004 alt_priority_mask
0008edd8 g     F .text	00000088 alt_ic_irq_enable
000828ac g     F .text	0000001c __vfprintf_internal
00089c9c g     F .text	0000005c _wctomb_r
0008c7d4 g     F .text	000008fc .hidden __subdf3
0008673c g     F .text	000000b0 __lo0bits
00041e18 g     O .rwdata	00000008 alt_alarm_list
0008eca8 g     F .text	00000060 _do_ctors
00089bac g     F .text	000000c0 wcrtomb
0008d374 g     F .text	000000d8 close
0008d6bc g     F .text	00000084 alt_load
000897c8 g     F .text	00000080 fputwc
000849a8 g     F .text	00000004 __sinit_lock_acquire
00086488 g     F .text	00000148 __multadd
00086460 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00080000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   80000:	00400234 	movhi	at,8
    ori r1, r1, %lo(_start)
   80004:	08408c14 	ori	at,at,560
    jmp r1
   80008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00080020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   80020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   80024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   80028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   8002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   80030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   80034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   80038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   8003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   80040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   80044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   80048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   8004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   80050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   80054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   80058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   8005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   80060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   80064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   80068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   8006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   80070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   80074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   80078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   8007c:	10000326 	beq	r2,zero,8008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   80080:	20000226 	beq	r4,zero,8008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   80084:	00800fc0 	call	800fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   80088:	00000706 	br	800a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   8008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   80090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   80094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   80098:	00801d00 	call	801d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   8009c:	1000021e 	bne	r2,zero,800a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   800a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   800a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   800a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   800ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   800b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   800b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   800b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   800bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   800c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   800c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   800c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   800cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   800d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   800d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   800d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   800dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   800e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   800e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   800e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   800ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   800f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   800f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   800f8:	ef80083a 	eret

000800fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   800fc:	defff904 	addi	sp,sp,-28
   80100:	dfc00615 	stw	ra,24(sp)
   80104:	df000515 	stw	fp,20(sp)
   80108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   8010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   80110:	0005313a 	rdctl	r2,ipending
   80114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   80118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   8011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   80120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   80124:	00800044 	movi	r2,1
   80128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   8012c:	e0fffb17 	ldw	r3,-20(fp)
   80130:	e0bffc17 	ldw	r2,-16(fp)
   80134:	1884703a 	and	r2,r3,r2
   80138:	10001426 	beq	r2,zero,8018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   8013c:	00800134 	movhi	r2,4
   80140:	1087a004 	addi	r2,r2,7808
   80144:	e0fffd17 	ldw	r3,-12(fp)
   80148:	180690fa 	slli	r3,r3,3
   8014c:	10c5883a 	add	r2,r2,r3
   80150:	10c00017 	ldw	r3,0(r2)
   80154:	00800134 	movhi	r2,4
   80158:	1087a004 	addi	r2,r2,7808
   8015c:	e13ffd17 	ldw	r4,-12(fp)
   80160:	200890fa 	slli	r4,r4,3
   80164:	1105883a 	add	r2,r2,r4
   80168:	10800104 	addi	r2,r2,4
   8016c:	10800017 	ldw	r2,0(r2)
   80170:	1009883a 	mov	r4,r2
   80174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   80178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   8017c:	0005313a 	rdctl	r2,ipending
   80180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   80184:	e0bfff17 	ldw	r2,-4(fp)
   80188:	00000706 	br	801a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   8018c:	e0bffc17 	ldw	r2,-16(fp)
   80190:	1085883a 	add	r2,r2,r2
   80194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   80198:	e0bffd17 	ldw	r2,-12(fp)
   8019c:	10800044 	addi	r2,r2,1
   801a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   801a4:	003fe106 	br	8012c <alt_irq_handler+0x30>

    active = alt_irq_pending ();
   801a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   801ac:	e0bffb17 	ldw	r2,-20(fp)
   801b0:	103fdb1e 	bne	r2,zero,80120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   801b4:	0001883a 	nop
}
   801b8:	0001883a 	nop
   801bc:	e037883a 	mov	sp,fp
   801c0:	dfc00117 	ldw	ra,4(sp)
   801c4:	df000017 	ldw	fp,0(sp)
   801c8:	dec00204 	addi	sp,sp,8
   801cc:	f800283a 	ret

000801d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   801d0:	defffb04 	addi	sp,sp,-20
   801d4:	dfc00415 	stw	ra,16(sp)
   801d8:	df000315 	stw	fp,12(sp)
   801dc:	df000304 	addi	fp,sp,12
   801e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
   801e4:	00bfffc4 	movi	r2,-1
   801e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
   801ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   801f0:	d0a01e17 	ldw	r2,-32648(gp)
   801f4:	10000726 	beq	r2,zero,80214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   801f8:	d0a01e17 	ldw	r2,-32648(gp)
   801fc:	e0fffd17 	ldw	r3,-12(fp)
   80200:	e1bffe17 	ldw	r6,-8(fp)
   80204:	e17fff17 	ldw	r5,-4(fp)
   80208:	1809883a 	mov	r4,r3
   8020c:	103ee83a 	callr	r2
   80210:	00000206 	br	8021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   80214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   80218:	0005883a 	mov	r2,zero
}
   8021c:	e037883a 	mov	sp,fp
   80220:	dfc00117 	ldw	ra,4(sp)
   80224:	df000017 	ldw	fp,0(sp)
   80228:	dec00204 	addi	sp,sp,8
   8022c:	f800283a 	ret

Disassembly of section .text:

00080230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   80230:	06c001b4 	movhi	sp,6
    ori sp, sp, %lo(__alt_stack_pointer)
   80234:	dee00014 	ori	sp,sp,32768
    movhi gp, %hi(_gp)
   80238:	06800134 	movhi	gp,4
    ori gp, gp, %lo(_gp)
   8023c:	d6a77714 	ori	gp,gp,40412
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   80240:	00800134 	movhi	r2,4
    ori r2, r2, %lo(__bss_start)
   80244:	10878814 	ori	r2,r2,7712

    movhi r3, %hi(__bss_end)
   80248:	00c00134 	movhi	r3,4
    ori r3, r3, %lo(__bss_end)
   8024c:	18c7e014 	ori	r3,r3,8064

    beq r2, r3, 1f
   80250:	10c00326 	beq	r2,r3,80260 <_start+0x30>

0:
    stw zero, (r2)
   80254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   80258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   8025c:	10fffd36 	bltu	r2,r3,80254 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   80260:	008d6bc0 	call	8d6bc <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   80264:	008d8580 	call	8d858 <alt_main>

00080268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   80268:	003fff06 	br	80268 <alt_after_alt_main>

0008026c <Keypad_init>:
//int Keypad_write_xxxxx();
void Keypad_clr();

uint32_t *p_key = (uint32_t *)KEYPAD_0_BASE;

void Keypad_init(){
   8026c:	deffff04 	addi	sp,sp,-4
   80270:	df000015 	stw	fp,0(sp)
   80274:	d839883a 	mov	fp,sp
	*(p_key+0) = 1<<31|0<<7|0<<0;
   80278:	d0a00017 	ldw	r2,-32768(gp)
   8027c:	00e00034 	movhi	r3,32768
   80280:	10c00015 	stw	r3,0(r2)

}
   80284:	0001883a 	nop
   80288:	e037883a 	mov	sp,fp
   8028c:	df000017 	ldw	fp,0(sp)
   80290:	dec00104 	addi	sp,sp,4
   80294:	f800283a 	ret

00080298 <Keypad_config>:

void Keypad_config(char enable, char clear, char reset){
   80298:	defffc04 	addi	sp,sp,-16
   8029c:	df000315 	stw	fp,12(sp)
   802a0:	df000304 	addi	fp,sp,12
   802a4:	2807883a 	mov	r3,r5
   802a8:	3005883a 	mov	r2,r6
   802ac:	e13ffd05 	stb	r4,-12(fp)
   802b0:	e0fffe05 	stb	r3,-8(fp)
   802b4:	e0bfff05 	stb	r2,-4(fp)
	*(p_key+0) = enable<<31|clear<<7|reset<<0;
   802b8:	d0a00017 	ldw	r2,-32768(gp)
   802bc:	e0fffd07 	ldb	r3,-12(fp)
   802c0:	180897fa 	slli	r4,r3,31
   802c4:	e0fffe07 	ldb	r3,-8(fp)
   802c8:	180691fa 	slli	r3,r3,7
   802cc:	20c8b03a 	or	r4,r4,r3
   802d0:	e0ffff07 	ldb	r3,-4(fp)
   802d4:	20c6b03a 	or	r3,r4,r3
   802d8:	10c00015 	stw	r3,0(r2)
}
   802dc:	0001883a 	nop
   802e0:	e037883a 	mov	sp,fp
   802e4:	df000017 	ldw	fp,0(sp)
   802e8:	dec00104 	addi	sp,sp,4
   802ec:	f800283a 	ret

000802f0 <Keypad_halt>:

void Keypad_halt(){
   802f0:	deffff04 	addi	sp,sp,-4
   802f4:	df000015 	stw	fp,0(sp)
   802f8:	d839883a 	mov	fp,sp
	*(p_key+0) = 0<<31|1<<7|0<<0;
   802fc:	d0a00017 	ldw	r2,-32768(gp)
   80300:	00c02004 	movi	r3,128
   80304:	10c00015 	stw	r3,0(r2)
}
   80308:	0001883a 	nop
   8030c:	e037883a 	mov	sp,fp
   80310:	df000017 	ldw	fp,0(sp)
   80314:	dec00104 	addi	sp,sp,4
   80318:	f800283a 	ret

0008031c <Keypad_read_buffer>:

void Keypad_read_buffer(int ADDRESS, int *buffer){
   8031c:	defffc04 	addi	sp,sp,-16
   80320:	df000315 	stw	fp,12(sp)
   80324:	df000304 	addi	fp,sp,12
   80328:	e13ffe15 	stw	r4,-8(fp)
   8032c:	e17fff15 	stw	r5,-4(fp)
	uint32_t *p_key = (uint32_t *)ADDRESS;
   80330:	e0bffe17 	ldw	r2,-8(fp)
   80334:	e0bffd15 	stw	r2,-12(fp)
	*buffer = *(p_key+1);
   80338:	e0bffd17 	ldw	r2,-12(fp)
   8033c:	10800104 	addi	r2,r2,4
   80340:	10800017 	ldw	r2,0(r2)
   80344:	1007883a 	mov	r3,r2
   80348:	e0bfff17 	ldw	r2,-4(fp)
   8034c:	10c00015 	stw	r3,0(r2)
}
   80350:	0001883a 	nop
   80354:	e037883a 	mov	sp,fp
   80358:	df000017 	ldw	fp,0(sp)
   8035c:	dec00104 	addi	sp,sp,4
   80360:	f800283a 	ret

00080364 <Keypad_clr>:

void Keypad_clr(){
   80364:	deffff04 	addi	sp,sp,-4
   80368:	df000015 	stw	fp,0(sp)
   8036c:	d839883a 	mov	fp,sp
	*(p_key+0) = 1<<31|1<<7|0<<0;
   80370:	d0e00017 	ldw	r3,-32768(gp)
   80374:	00a00034 	movhi	r2,32768
   80378:	10802004 	addi	r2,r2,128
   8037c:	18800015 	stw	r2,0(r3)

}
   80380:	0001883a 	nop
   80384:	e037883a 	mov	sp,fp
   80388:	df000017 	ldw	fp,0(sp)
   8038c:	dec00104 	addi	sp,sp,4
   80390:	f800283a 	ret

00080394 <main>:

int main(){
   80394:	defffd04 	addi	sp,sp,-12
   80398:	dfc00215 	stw	ra,8(sp)
   8039c:	df000115 	stw	fp,4(sp)
   803a0:	df000104 	addi	fp,sp,4

  printf("Hello from Nios II!\n");
   803a4:	01000134 	movhi	r4,4
   803a8:	21000004 	addi	r4,r4,0
   803ac:	00805240 	call	80524 <puts>

  Keypad_init();
   803b0:	008026c0 	call	8026c <Keypad_init>

  printf("Keypad INIT\n");
   803b4:	01000134 	movhi	r4,4
   803b8:	21000504 	addi	r4,r4,20
   803bc:	00805240 	call	80524 <puts>
  int key;
  while(1){

	  Keypad_read_buffer(KEYPAD_0_BASE, &key);
   803c0:	e17fff04 	addi	r5,fp,-4
   803c4:	01000334 	movhi	r4,12
   803c8:	21040004 	addi	r4,r4,4096
   803cc:	008031c0 	call	8031c <Keypad_read_buffer>

	  printf("Read: %04x \n", key);
   803d0:	e0bfff17 	ldw	r2,-4(fp)
   803d4:	100b883a 	mov	r5,r2
   803d8:	01000134 	movhi	r4,4
   803dc:	21000804 	addi	r4,r4,32
   803e0:	00804280 	call	80428 <printf>
	  Keypad_clr();
   803e4:	00803640 	call	80364 <Keypad_clr>
	  usleep(100000);
   803e8:	010000b4 	movhi	r4,2
   803ec:	2121a804 	addi	r4,r4,-31072
   803f0:	008db900 	call	8db90 <usleep>

  }
   803f4:	003ff206 	br	803c0 <main+0x2c>

000803f8 <_printf_r>:
   803f8:	defffd04 	addi	sp,sp,-12
   803fc:	2805883a 	mov	r2,r5
   80400:	dfc00015 	stw	ra,0(sp)
   80404:	d9800115 	stw	r6,4(sp)
   80408:	d9c00215 	stw	r7,8(sp)
   8040c:	21400217 	ldw	r5,8(r4)
   80410:	d9c00104 	addi	r7,sp,4
   80414:	100d883a 	mov	r6,r2
   80418:	00805d00 	call	805d0 <___vfprintf_internal_r>
   8041c:	dfc00017 	ldw	ra,0(sp)
   80420:	dec00304 	addi	sp,sp,12
   80424:	f800283a 	ret

00080428 <printf>:
   80428:	defffc04 	addi	sp,sp,-16
   8042c:	dfc00015 	stw	ra,0(sp)
   80430:	d9400115 	stw	r5,4(sp)
   80434:	d9800215 	stw	r6,8(sp)
   80438:	d9c00315 	stw	r7,12(sp)
   8043c:	00800134 	movhi	r2,4
   80440:	10877904 	addi	r2,r2,7652
   80444:	10800017 	ldw	r2,0(r2)
   80448:	200b883a 	mov	r5,r4
   8044c:	d9800104 	addi	r6,sp,4
   80450:	11000217 	ldw	r4,8(r2)
   80454:	00828ac0 	call	828ac <__vfprintf_internal>
   80458:	dfc00017 	ldw	ra,0(sp)
   8045c:	dec00404 	addi	sp,sp,16
   80460:	f800283a 	ret

00080464 <_puts_r>:
   80464:	defff604 	addi	sp,sp,-40
   80468:	dc000715 	stw	r16,28(sp)
   8046c:	2021883a 	mov	r16,r4
   80470:	2809883a 	mov	r4,r5
   80474:	dc400815 	stw	r17,32(sp)
   80478:	dfc00915 	stw	ra,36(sp)
   8047c:	2823883a 	mov	r17,r5
   80480:	00805380 	call	80538 <strlen>
   80484:	10c00044 	addi	r3,r2,1
   80488:	d8800115 	stw	r2,4(sp)
   8048c:	00800134 	movhi	r2,4
   80490:	10800c04 	addi	r2,r2,48
   80494:	d8800215 	stw	r2,8(sp)
   80498:	00800044 	movi	r2,1
   8049c:	d8800315 	stw	r2,12(sp)
   804a0:	00800084 	movi	r2,2
   804a4:	dc400015 	stw	r17,0(sp)
   804a8:	d8c00615 	stw	r3,24(sp)
   804ac:	dec00415 	stw	sp,16(sp)
   804b0:	d8800515 	stw	r2,20(sp)
   804b4:	80000226 	beq	r16,zero,804c0 <_puts_r+0x5c>
   804b8:	80800e17 	ldw	r2,56(r16)
   804bc:	10001426 	beq	r2,zero,80510 <_puts_r+0xac>
   804c0:	81400217 	ldw	r5,8(r16)
   804c4:	2880030b 	ldhu	r2,12(r5)
   804c8:	10c8000c 	andi	r3,r2,8192
   804cc:	1800061e 	bne	r3,zero,804e8 <_puts_r+0x84>
   804d0:	29001917 	ldw	r4,100(r5)
   804d4:	00f7ffc4 	movi	r3,-8193
   804d8:	10880014 	ori	r2,r2,8192
   804dc:	20c6703a 	and	r3,r4,r3
   804e0:	2880030d 	sth	r2,12(r5)
   804e4:	28c01915 	stw	r3,100(r5)
   804e8:	d9800404 	addi	r6,sp,16
   804ec:	8009883a 	mov	r4,r16
   804f0:	0084e140 	call	84e14 <__sfvwrite_r>
   804f4:	1000091e 	bne	r2,zero,8051c <_puts_r+0xb8>
   804f8:	00800284 	movi	r2,10
   804fc:	dfc00917 	ldw	ra,36(sp)
   80500:	dc400817 	ldw	r17,32(sp)
   80504:	dc000717 	ldw	r16,28(sp)
   80508:	dec00a04 	addi	sp,sp,40
   8050c:	f800283a 	ret
   80510:	8009883a 	mov	r4,r16
   80514:	00849900 	call	84990 <__sinit>
   80518:	003fe906 	br	804c0 <_puts_r+0x5c>
   8051c:	00bfffc4 	movi	r2,-1
   80520:	003ff606 	br	804fc <_puts_r+0x98>

00080524 <puts>:
   80524:	00800134 	movhi	r2,4
   80528:	10877904 	addi	r2,r2,7652
   8052c:	200b883a 	mov	r5,r4
   80530:	11000017 	ldw	r4,0(r2)
   80534:	00804641 	jmpi	80464 <_puts_r>

00080538 <strlen>:
   80538:	208000cc 	andi	r2,r4,3
   8053c:	10002026 	beq	r2,zero,805c0 <strlen+0x88>
   80540:	20800007 	ldb	r2,0(r4)
   80544:	10002026 	beq	r2,zero,805c8 <strlen+0x90>
   80548:	2005883a 	mov	r2,r4
   8054c:	00000206 	br	80558 <strlen+0x20>
   80550:	10c00007 	ldb	r3,0(r2)
   80554:	18001826 	beq	r3,zero,805b8 <strlen+0x80>
   80558:	10800044 	addi	r2,r2,1
   8055c:	10c000cc 	andi	r3,r2,3
   80560:	183ffb1e 	bne	r3,zero,80550 <strlen+0x18>
   80564:	10c00017 	ldw	r3,0(r2)
   80568:	01ffbff4 	movhi	r7,65279
   8056c:	39ffbfc4 	addi	r7,r7,-257
   80570:	00ca303a 	nor	r5,zero,r3
   80574:	01a02074 	movhi	r6,32897
   80578:	19c7883a 	add	r3,r3,r7
   8057c:	31a02004 	addi	r6,r6,-32640
   80580:	1946703a 	and	r3,r3,r5
   80584:	1986703a 	and	r3,r3,r6
   80588:	1800091e 	bne	r3,zero,805b0 <strlen+0x78>
   8058c:	10800104 	addi	r2,r2,4
   80590:	10c00017 	ldw	r3,0(r2)
   80594:	19cb883a 	add	r5,r3,r7
   80598:	00c6303a 	nor	r3,zero,r3
   8059c:	28c6703a 	and	r3,r5,r3
   805a0:	1986703a 	and	r3,r3,r6
   805a4:	183ff926 	beq	r3,zero,8058c <strlen+0x54>
   805a8:	00000106 	br	805b0 <strlen+0x78>
   805ac:	10800044 	addi	r2,r2,1
   805b0:	10c00007 	ldb	r3,0(r2)
   805b4:	183ffd1e 	bne	r3,zero,805ac <strlen+0x74>
   805b8:	1105c83a 	sub	r2,r2,r4
   805bc:	f800283a 	ret
   805c0:	2005883a 	mov	r2,r4
   805c4:	003fe706 	br	80564 <strlen+0x2c>
   805c8:	0005883a 	mov	r2,zero
   805cc:	f800283a 	ret

000805d0 <___vfprintf_internal_r>:
   805d0:	deffb804 	addi	sp,sp,-288
   805d4:	dfc04715 	stw	ra,284(sp)
   805d8:	ddc04515 	stw	r23,276(sp)
   805dc:	dd404315 	stw	r21,268(sp)
   805e0:	d9002d15 	stw	r4,180(sp)
   805e4:	282f883a 	mov	r23,r5
   805e8:	302b883a 	mov	r21,r6
   805ec:	d9c02e15 	stw	r7,184(sp)
   805f0:	df004615 	stw	fp,280(sp)
   805f4:	dd804415 	stw	r22,272(sp)
   805f8:	dd004215 	stw	r20,264(sp)
   805fc:	dcc04115 	stw	r19,260(sp)
   80600:	dc804015 	stw	r18,256(sp)
   80604:	dc403f15 	stw	r17,252(sp)
   80608:	dc003e15 	stw	r16,248(sp)
   8060c:	00855100 	call	85510 <_localeconv_r>
   80610:	10800017 	ldw	r2,0(r2)
   80614:	1009883a 	mov	r4,r2
   80618:	d8803415 	stw	r2,208(sp)
   8061c:	00805380 	call	80538 <strlen>
   80620:	d8803715 	stw	r2,220(sp)
   80624:	d8802d17 	ldw	r2,180(sp)
   80628:	10000226 	beq	r2,zero,80634 <___vfprintf_internal_r+0x64>
   8062c:	10800e17 	ldw	r2,56(r2)
   80630:	1000fb26 	beq	r2,zero,80a20 <___vfprintf_internal_r+0x450>
   80634:	b880030b 	ldhu	r2,12(r23)
   80638:	10c8000c 	andi	r3,r2,8192
   8063c:	1800061e 	bne	r3,zero,80658 <___vfprintf_internal_r+0x88>
   80640:	b9001917 	ldw	r4,100(r23)
   80644:	00f7ffc4 	movi	r3,-8193
   80648:	10880014 	ori	r2,r2,8192
   8064c:	20c6703a 	and	r3,r4,r3
   80650:	b880030d 	sth	r2,12(r23)
   80654:	b8c01915 	stw	r3,100(r23)
   80658:	10c0020c 	andi	r3,r2,8
   8065c:	1800c326 	beq	r3,zero,8096c <___vfprintf_internal_r+0x39c>
   80660:	b8c00417 	ldw	r3,16(r23)
   80664:	1800c126 	beq	r3,zero,8096c <___vfprintf_internal_r+0x39c>
   80668:	1080068c 	andi	r2,r2,26
   8066c:	00c00284 	movi	r3,10
   80670:	10c0c626 	beq	r2,r3,8098c <___vfprintf_internal_r+0x3bc>
   80674:	d8c00404 	addi	r3,sp,16
   80678:	05000134 	movhi	r20,4
   8067c:	d9001e04 	addi	r4,sp,120
   80680:	a5001d84 	addi	r20,r20,118
   80684:	d8c01e15 	stw	r3,120(sp)
   80688:	d8002015 	stw	zero,128(sp)
   8068c:	d8001f15 	stw	zero,124(sp)
   80690:	d8003315 	stw	zero,204(sp)
   80694:	d8003615 	stw	zero,216(sp)
   80698:	d8003815 	stw	zero,224(sp)
   8069c:	1811883a 	mov	r8,r3
   806a0:	d8003915 	stw	zero,228(sp)
   806a4:	d8003a15 	stw	zero,232(sp)
   806a8:	d8002f15 	stw	zero,188(sp)
   806ac:	d9002815 	stw	r4,160(sp)
   806b0:	a8800007 	ldb	r2,0(r21)
   806b4:	10028b26 	beq	r2,zero,810e4 <___vfprintf_internal_r+0xb14>
   806b8:	00c00944 	movi	r3,37
   806bc:	a823883a 	mov	r17,r21
   806c0:	10c0021e 	bne	r2,r3,806cc <___vfprintf_internal_r+0xfc>
   806c4:	00001406 	br	80718 <___vfprintf_internal_r+0x148>
   806c8:	10c00326 	beq	r2,r3,806d8 <___vfprintf_internal_r+0x108>
   806cc:	8c400044 	addi	r17,r17,1
   806d0:	88800007 	ldb	r2,0(r17)
   806d4:	103ffc1e 	bne	r2,zero,806c8 <___vfprintf_internal_r+0xf8>
   806d8:	8d61c83a 	sub	r16,r17,r21
   806dc:	80000e26 	beq	r16,zero,80718 <___vfprintf_internal_r+0x148>
   806e0:	d8c02017 	ldw	r3,128(sp)
   806e4:	d8801f17 	ldw	r2,124(sp)
   806e8:	45400015 	stw	r21,0(r8)
   806ec:	1c07883a 	add	r3,r3,r16
   806f0:	10800044 	addi	r2,r2,1
   806f4:	d8c02015 	stw	r3,128(sp)
   806f8:	44000115 	stw	r16,4(r8)
   806fc:	d8801f15 	stw	r2,124(sp)
   80700:	00c001c4 	movi	r3,7
   80704:	1880a916 	blt	r3,r2,809ac <___vfprintf_internal_r+0x3dc>
   80708:	42000204 	addi	r8,r8,8
   8070c:	d9402f17 	ldw	r5,188(sp)
   80710:	2c0b883a 	add	r5,r5,r16
   80714:	d9402f15 	stw	r5,188(sp)
   80718:	88800007 	ldb	r2,0(r17)
   8071c:	1000aa26 	beq	r2,zero,809c8 <___vfprintf_internal_r+0x3f8>
   80720:	8d400044 	addi	r21,r17,1
   80724:	8c400047 	ldb	r17,1(r17)
   80728:	0021883a 	mov	r16,zero
   8072c:	00bfffc4 	movi	r2,-1
   80730:	0025883a 	mov	r18,zero
   80734:	dc002905 	stb	r16,164(sp)
   80738:	d8002785 	stb	zero,158(sp)
   8073c:	d8002b05 	stb	zero,172(sp)
   80740:	d8802a15 	stw	r2,168(sp)
   80744:	d8003115 	stw	zero,196(sp)
   80748:	04c01604 	movi	r19,88
   8074c:	05800244 	movi	r22,9
   80750:	9021883a 	mov	r16,r18
   80754:	4039883a 	mov	fp,r8
   80758:	ad400044 	addi	r21,r21,1
   8075c:	88bff804 	addi	r2,r17,-32
   80760:	98833236 	bltu	r19,r2,8142c <___vfprintf_internal_r+0xe5c>
   80764:	100490ba 	slli	r2,r2,2
   80768:	00c00234 	movhi	r3,8
   8076c:	18c1df04 	addi	r3,r3,1916
   80770:	10c5883a 	add	r2,r2,r3
   80774:	10800017 	ldw	r2,0(r2)
   80778:	1000683a 	jmp	r2
   8077c:	00081324 	muli	zero,zero,8268
   80780:	0008142c 	andhi	zero,zero,8272
   80784:	0008142c 	andhi	zero,zero,8272
   80788:	00081344 	movi	zero,8269
   8078c:	0008142c 	andhi	zero,zero,8272
   80790:	0008142c 	andhi	zero,zero,8272
   80794:	0008142c 	andhi	zero,zero,8272
   80798:	0008142c 	andhi	zero,zero,8272
   8079c:	0008142c 	andhi	zero,zero,8272
   807a0:	0008142c 	andhi	zero,zero,8272
   807a4:	00080a2c 	andhi	zero,zero,8232
   807a8:	00081234 	movhi	zero,8264
   807ac:	0008142c 	andhi	zero,zero,8272
   807b0:	000808f0 	cmpltui	zero,zero,8227
   807b4:	00080a50 	cmplti	zero,zero,8233
   807b8:	0008142c 	andhi	zero,zero,8272
   807bc:	00080aa0 	cmpeqi	zero,zero,8234
   807c0:	00080aac 	andhi	zero,zero,8234
   807c4:	00080aac 	andhi	zero,zero,8234
   807c8:	00080aac 	andhi	zero,zero,8234
   807cc:	00080aac 	andhi	zero,zero,8234
   807d0:	00080aac 	andhi	zero,zero,8234
   807d4:	00080aac 	andhi	zero,zero,8234
   807d8:	00080aac 	andhi	zero,zero,8234
   807dc:	00080aac 	andhi	zero,zero,8234
   807e0:	00080aac 	andhi	zero,zero,8234
   807e4:	0008142c 	andhi	zero,zero,8272
   807e8:	0008142c 	andhi	zero,zero,8272
   807ec:	0008142c 	andhi	zero,zero,8272
   807f0:	0008142c 	andhi	zero,zero,8272
   807f4:	0008142c 	andhi	zero,zero,8272
   807f8:	0008142c 	andhi	zero,zero,8272
   807fc:	0008142c 	andhi	zero,zero,8272
   80800:	0008142c 	andhi	zero,zero,8272
   80804:	0008142c 	andhi	zero,zero,8272
   80808:	0008142c 	andhi	zero,zero,8272
   8080c:	00080ae8 	cmpgeui	zero,zero,8235
   80810:	00080bb0 	cmpltui	zero,zero,8238
   80814:	0008142c 	andhi	zero,zero,8272
   80818:	00080bb0 	cmpltui	zero,zero,8238
   8081c:	0008142c 	andhi	zero,zero,8272
   80820:	0008142c 	andhi	zero,zero,8272
   80824:	0008142c 	andhi	zero,zero,8272
   80828:	0008142c 	andhi	zero,zero,8272
   8082c:	00080c5c 	xori	zero,zero,8241
   80830:	0008142c 	andhi	zero,zero,8272
   80834:	0008142c 	andhi	zero,zero,8272
   80838:	00080c68 	cmpgeui	zero,zero,8241
   8083c:	0008142c 	andhi	zero,zero,8272
   80840:	0008142c 	andhi	zero,zero,8272
   80844:	0008142c 	andhi	zero,zero,8272
   80848:	0008142c 	andhi	zero,zero,8272
   8084c:	0008142c 	andhi	zero,zero,8272
   80850:	000810ec 	andhi	zero,zero,8259
   80854:	0008142c 	andhi	zero,zero,8272
   80858:	0008142c 	andhi	zero,zero,8272
   8085c:	00081158 	cmpnei	zero,zero,8261
   80860:	0008142c 	andhi	zero,zero,8272
   80864:	0008142c 	andhi	zero,zero,8272
   80868:	0008142c 	andhi	zero,zero,8272
   8086c:	0008142c 	andhi	zero,zero,8272
   80870:	0008142c 	andhi	zero,zero,8272
   80874:	0008142c 	andhi	zero,zero,8272
   80878:	0008142c 	andhi	zero,zero,8272
   8087c:	0008142c 	andhi	zero,zero,8272
   80880:	0008142c 	andhi	zero,zero,8272
   80884:	0008142c 	andhi	zero,zero,8272
   80888:	000813d0 	cmplti	zero,zero,8271
   8088c:	00081350 	cmplti	zero,zero,8269
   80890:	00080bb0 	cmpltui	zero,zero,8238
   80894:	00080bb0 	cmpltui	zero,zero,8238
   80898:	00080bb0 	cmpltui	zero,zero,8238
   8089c:	00081370 	cmpltui	zero,zero,8269
   808a0:	00081350 	cmplti	zero,zero,8269
   808a4:	0008142c 	andhi	zero,zero,8272
   808a8:	0008142c 	andhi	zero,zero,8272
   808ac:	0008137c 	xorhi	zero,zero,8269
   808b0:	0008142c 	andhi	zero,zero,8272
   808b4:	00081390 	cmplti	zero,zero,8270
   808b8:	00081214 	movui	zero,8264
   808bc:	000808fc 	xorhi	zero,zero,8227
   808c0:	0008124c 	andi	zero,zero,8265
   808c4:	0008142c 	andhi	zero,zero,8272
   808c8:	00081258 	cmpnei	zero,zero,8265
   808cc:	0008142c 	andhi	zero,zero,8272
   808d0:	000812bc 	xorhi	zero,zero,8266
   808d4:	0008142c 	andhi	zero,zero,8272
   808d8:	0008142c 	andhi	zero,zero,8272
   808dc:	000812dc 	xori	zero,zero,8267
   808e0:	d8c03117 	ldw	r3,196(sp)
   808e4:	d8802e15 	stw	r2,184(sp)
   808e8:	00c7c83a 	sub	r3,zero,r3
   808ec:	d8c03115 	stw	r3,196(sp)
   808f0:	84000114 	ori	r16,r16,4
   808f4:	ac400007 	ldb	r17,0(r21)
   808f8:	003f9706 	br	80758 <___vfprintf_internal_r+0x188>
   808fc:	00800c04 	movi	r2,48
   80900:	d8802705 	stb	r2,156(sp)
   80904:	00801e04 	movi	r2,120
   80908:	d8802745 	stb	r2,157(sp)
   8090c:	d9002a17 	ldw	r4,168(sp)
   80910:	d8802e17 	ldw	r2,184(sp)
   80914:	d8002785 	stb	zero,158(sp)
   80918:	e011883a 	mov	r8,fp
   8091c:	10c00104 	addi	r3,r2,4
   80920:	14c00017 	ldw	r19,0(r2)
   80924:	002d883a 	mov	r22,zero
   80928:	80800094 	ori	r2,r16,2
   8092c:	2002ca16 	blt	r4,zero,81458 <___vfprintf_internal_r+0xe88>
   80930:	00bfdfc4 	movi	r2,-129
   80934:	80a4703a 	and	r18,r16,r2
   80938:	d8c02e15 	stw	r3,184(sp)
   8093c:	94800094 	ori	r18,r18,2
   80940:	9802b41e 	bne	r19,zero,81414 <___vfprintf_internal_r+0xe44>
   80944:	01400134 	movhi	r5,4
   80948:	29401604 	addi	r5,r5,88
   8094c:	d9403915 	stw	r5,228(sp)
   80950:	04401e04 	movi	r17,120
   80954:	d8802a17 	ldw	r2,168(sp)
   80958:	0039883a 	mov	fp,zero
   8095c:	1001fa26 	beq	r2,zero,81148 <___vfprintf_internal_r+0xb78>
   80960:	0027883a 	mov	r19,zero
   80964:	002d883a 	mov	r22,zero
   80968:	00021906 	br	811d0 <___vfprintf_internal_r+0xc00>
   8096c:	d9002d17 	ldw	r4,180(sp)
   80970:	b80b883a 	mov	r5,r23
   80974:	00829840 	call	82984 <__swsetup_r>
   80978:	1005dc1e 	bne	r2,zero,820ec <___vfprintf_internal_r+0x1b1c>
   8097c:	b880030b 	ldhu	r2,12(r23)
   80980:	00c00284 	movi	r3,10
   80984:	1080068c 	andi	r2,r2,26
   80988:	10ff3a1e 	bne	r2,r3,80674 <___vfprintf_internal_r+0xa4>
   8098c:	b880038f 	ldh	r2,14(r23)
   80990:	103f3816 	blt	r2,zero,80674 <___vfprintf_internal_r+0xa4>
   80994:	d9c02e17 	ldw	r7,184(sp)
   80998:	d9002d17 	ldw	r4,180(sp)
   8099c:	a80d883a 	mov	r6,r21
   809a0:	b80b883a 	mov	r5,r23
   809a4:	00828c80 	call	828c8 <__sbprintf>
   809a8:	00001106 	br	809f0 <___vfprintf_internal_r+0x420>
   809ac:	d9002d17 	ldw	r4,180(sp)
   809b0:	d9801e04 	addi	r6,sp,120
   809b4:	b80b883a 	mov	r5,r23
   809b8:	0087db00 	call	87db0 <__sprint_r>
   809bc:	1000081e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   809c0:	da000404 	addi	r8,sp,16
   809c4:	003f5106 	br	8070c <___vfprintf_internal_r+0x13c>
   809c8:	d8802017 	ldw	r2,128(sp)
   809cc:	10000426 	beq	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   809d0:	d9002d17 	ldw	r4,180(sp)
   809d4:	d9801e04 	addi	r6,sp,120
   809d8:	b80b883a 	mov	r5,r23
   809dc:	0087db00 	call	87db0 <__sprint_r>
   809e0:	b880030b 	ldhu	r2,12(r23)
   809e4:	1080100c 	andi	r2,r2,64
   809e8:	1005c01e 	bne	r2,zero,820ec <___vfprintf_internal_r+0x1b1c>
   809ec:	d8802f17 	ldw	r2,188(sp)
   809f0:	dfc04717 	ldw	ra,284(sp)
   809f4:	df004617 	ldw	fp,280(sp)
   809f8:	ddc04517 	ldw	r23,276(sp)
   809fc:	dd804417 	ldw	r22,272(sp)
   80a00:	dd404317 	ldw	r21,268(sp)
   80a04:	dd004217 	ldw	r20,264(sp)
   80a08:	dcc04117 	ldw	r19,260(sp)
   80a0c:	dc804017 	ldw	r18,256(sp)
   80a10:	dc403f17 	ldw	r17,252(sp)
   80a14:	dc003e17 	ldw	r16,248(sp)
   80a18:	dec04804 	addi	sp,sp,288
   80a1c:	f800283a 	ret
   80a20:	d9002d17 	ldw	r4,180(sp)
   80a24:	00849900 	call	84990 <__sinit>
   80a28:	003f0206 	br	80634 <___vfprintf_internal_r+0x64>
   80a2c:	d9002e17 	ldw	r4,184(sp)
   80a30:	d9402e17 	ldw	r5,184(sp)
   80a34:	21000017 	ldw	r4,0(r4)
   80a38:	28800104 	addi	r2,r5,4
   80a3c:	d9003115 	stw	r4,196(sp)
   80a40:	203fa716 	blt	r4,zero,808e0 <___vfprintf_internal_r+0x310>
   80a44:	d8802e15 	stw	r2,184(sp)
   80a48:	ac400007 	ldb	r17,0(r21)
   80a4c:	003f4206 	br	80758 <___vfprintf_internal_r+0x188>
   80a50:	ac400007 	ldb	r17,0(r21)
   80a54:	01000a84 	movi	r4,42
   80a58:	a8c00044 	addi	r3,r21,1
   80a5c:	89075826 	beq	r17,r4,827c0 <___vfprintf_internal_r+0x21f0>
   80a60:	8cbff404 	addi	r18,r17,-48
   80a64:	b486ae36 	bltu	r22,r18,82520 <___vfprintf_internal_r+0x1f50>
   80a68:	0009883a 	mov	r4,zero
   80a6c:	1823883a 	mov	r17,r3
   80a70:	01400284 	movi	r5,10
   80a74:	008aa6c0 	call	8aa6c <__mulsi3>
   80a78:	88c00007 	ldb	r3,0(r17)
   80a7c:	1489883a 	add	r4,r2,r18
   80a80:	8d400044 	addi	r21,r17,1
   80a84:	1cbff404 	addi	r18,r3,-48
   80a88:	a823883a 	mov	r17,r21
   80a8c:	b4bff82e 	bgeu	r22,r18,80a70 <___vfprintf_internal_r+0x4a0>
   80a90:	1823883a 	mov	r17,r3
   80a94:	2005f616 	blt	r4,zero,82270 <___vfprintf_internal_r+0x1ca0>
   80a98:	d9002a15 	stw	r4,168(sp)
   80a9c:	003f2f06 	br	8075c <___vfprintf_internal_r+0x18c>
   80aa0:	84002014 	ori	r16,r16,128
   80aa4:	ac400007 	ldb	r17,0(r21)
   80aa8:	003f2b06 	br	80758 <___vfprintf_internal_r+0x188>
   80aac:	8cbff404 	addi	r18,r17,-48
   80ab0:	d8003115 	stw	zero,196(sp)
   80ab4:	0009883a 	mov	r4,zero
   80ab8:	a823883a 	mov	r17,r21
   80abc:	01400284 	movi	r5,10
   80ac0:	008aa6c0 	call	8aa6c <__mulsi3>
   80ac4:	88c00007 	ldb	r3,0(r17)
   80ac8:	9089883a 	add	r4,r18,r2
   80acc:	ad400044 	addi	r21,r21,1
   80ad0:	1cbff404 	addi	r18,r3,-48
   80ad4:	a823883a 	mov	r17,r21
   80ad8:	b4bff82e 	bgeu	r22,r18,80abc <___vfprintf_internal_r+0x4ec>
   80adc:	1823883a 	mov	r17,r3
   80ae0:	d9003115 	stw	r4,196(sp)
   80ae4:	003f1d06 	br	8075c <___vfprintf_internal_r+0x18c>
   80ae8:	8025883a 	mov	r18,r16
   80aec:	dc002903 	ldbu	r16,164(sp)
   80af0:	e011883a 	mov	r8,fp
   80af4:	84003fcc 	andi	r16,r16,255
   80af8:	8007531e 	bne	r16,zero,82848 <___vfprintf_internal_r+0x2278>
   80afc:	94800414 	ori	r18,r18,16
   80b00:	9080080c 	andi	r2,r18,32
   80b04:	1003a326 	beq	r2,zero,81994 <___vfprintf_internal_r+0x13c4>
   80b08:	d9002e17 	ldw	r4,184(sp)
   80b0c:	20800117 	ldw	r2,4(r4)
   80b10:	24c00017 	ldw	r19,0(r4)
   80b14:	21000204 	addi	r4,r4,8
   80b18:	d9002e15 	stw	r4,184(sp)
   80b1c:	102d883a 	mov	r22,r2
   80b20:	10047316 	blt	r2,zero,81cf0 <___vfprintf_internal_r+0x1720>
   80b24:	d9002a17 	ldw	r4,168(sp)
   80b28:	df002783 	ldbu	fp,158(sp)
   80b2c:	2003e416 	blt	r4,zero,81ac0 <___vfprintf_internal_r+0x14f0>
   80b30:	00ffdfc4 	movi	r3,-129
   80b34:	9d84b03a 	or	r2,r19,r22
   80b38:	90e4703a 	and	r18,r18,r3
   80b3c:	10018026 	beq	r2,zero,81140 <___vfprintf_internal_r+0xb70>
   80b40:	b003ab26 	beq	r22,zero,819f0 <___vfprintf_internal_r+0x1420>
   80b44:	dc402915 	stw	r17,164(sp)
   80b48:	dc001e04 	addi	r16,sp,120
   80b4c:	b023883a 	mov	r17,r22
   80b50:	402d883a 	mov	r22,r8
   80b54:	9809883a 	mov	r4,r19
   80b58:	880b883a 	mov	r5,r17
   80b5c:	01800284 	movi	r6,10
   80b60:	000f883a 	mov	r7,zero
   80b64:	008a2f40 	call	8a2f4 <__umoddi3>
   80b68:	10800c04 	addi	r2,r2,48
   80b6c:	843fffc4 	addi	r16,r16,-1
   80b70:	9809883a 	mov	r4,r19
   80b74:	880b883a 	mov	r5,r17
   80b78:	80800005 	stb	r2,0(r16)
   80b7c:	01800284 	movi	r6,10
   80b80:	000f883a 	mov	r7,zero
   80b84:	0089cf80 	call	89cf8 <__udivdi3>
   80b88:	1027883a 	mov	r19,r2
   80b8c:	10c4b03a 	or	r2,r2,r3
   80b90:	1823883a 	mov	r17,r3
   80b94:	103fef1e 	bne	r2,zero,80b54 <___vfprintf_internal_r+0x584>
   80b98:	d8c02817 	ldw	r3,160(sp)
   80b9c:	dc402917 	ldw	r17,164(sp)
   80ba0:	b011883a 	mov	r8,r22
   80ba4:	1c07c83a 	sub	r3,r3,r16
   80ba8:	d8c02b15 	stw	r3,172(sp)
   80bac:	00005f06 	br	80d2c <___vfprintf_internal_r+0x75c>
   80bb0:	8025883a 	mov	r18,r16
   80bb4:	dc002903 	ldbu	r16,164(sp)
   80bb8:	e011883a 	mov	r8,fp
   80bbc:	84003fcc 	andi	r16,r16,255
   80bc0:	80071e1e 	bne	r16,zero,8283c <___vfprintf_internal_r+0x226c>
   80bc4:	9080020c 	andi	r2,r18,8
   80bc8:	1004af26 	beq	r2,zero,81e88 <___vfprintf_internal_r+0x18b8>
   80bcc:	d9002e17 	ldw	r4,184(sp)
   80bd0:	d9402e17 	ldw	r5,184(sp)
   80bd4:	d8802e17 	ldw	r2,184(sp)
   80bd8:	21000017 	ldw	r4,0(r4)
   80bdc:	29400117 	ldw	r5,4(r5)
   80be0:	10800204 	addi	r2,r2,8
   80be4:	d9003615 	stw	r4,216(sp)
   80be8:	d9403815 	stw	r5,224(sp)
   80bec:	d8802e15 	stw	r2,184(sp)
   80bf0:	d9003617 	ldw	r4,216(sp)
   80bf4:	d9403817 	ldw	r5,224(sp)
   80bf8:	da003d15 	stw	r8,244(sp)
   80bfc:	04000044 	movi	r16,1
   80c00:	00879d40 	call	879d4 <__fpclassifyd>
   80c04:	da003d17 	ldw	r8,244(sp)
   80c08:	1404441e 	bne	r2,r16,81d1c <___vfprintf_internal_r+0x174c>
   80c0c:	d9003617 	ldw	r4,216(sp)
   80c10:	d9403817 	ldw	r5,224(sp)
   80c14:	000d883a 	mov	r6,zero
   80c18:	000f883a 	mov	r7,zero
   80c1c:	008be740 	call	8be74 <__ledf2>
   80c20:	da003d17 	ldw	r8,244(sp)
   80c24:	1005e316 	blt	r2,zero,823b4 <___vfprintf_internal_r+0x1de4>
   80c28:	df002783 	ldbu	fp,158(sp)
   80c2c:	008011c4 	movi	r2,71
   80c30:	1445580e 	bge	r2,r17,82194 <___vfprintf_internal_r+0x1bc4>
   80c34:	04000134 	movhi	r16,4
   80c38:	84000e04 	addi	r16,r16,56
   80c3c:	00c000c4 	movi	r3,3
   80c40:	00bfdfc4 	movi	r2,-129
   80c44:	d8c02915 	stw	r3,164(sp)
   80c48:	90a4703a 	and	r18,r18,r2
   80c4c:	d8c02b15 	stw	r3,172(sp)
   80c50:	d8002a15 	stw	zero,168(sp)
   80c54:	d8003215 	stw	zero,200(sp)
   80c58:	00003a06 	br	80d44 <___vfprintf_internal_r+0x774>
   80c5c:	84000214 	ori	r16,r16,8
   80c60:	ac400007 	ldb	r17,0(r21)
   80c64:	003ebc06 	br	80758 <___vfprintf_internal_r+0x188>
   80c68:	8025883a 	mov	r18,r16
   80c6c:	dc002903 	ldbu	r16,164(sp)
   80c70:	e011883a 	mov	r8,fp
   80c74:	84003fcc 	andi	r16,r16,255
   80c78:	8007001e 	bne	r16,zero,8287c <___vfprintf_internal_r+0x22ac>
   80c7c:	94800414 	ori	r18,r18,16
   80c80:	9080080c 	andi	r2,r18,32
   80c84:	1002fa26 	beq	r2,zero,81870 <___vfprintf_internal_r+0x12a0>
   80c88:	d9002e17 	ldw	r4,184(sp)
   80c8c:	d9402a17 	ldw	r5,168(sp)
   80c90:	d8002785 	stb	zero,158(sp)
   80c94:	20800204 	addi	r2,r4,8
   80c98:	24c00017 	ldw	r19,0(r4)
   80c9c:	25800117 	ldw	r22,4(r4)
   80ca0:	2804b116 	blt	r5,zero,81f68 <___vfprintf_internal_r+0x1998>
   80ca4:	013fdfc4 	movi	r4,-129
   80ca8:	9d86b03a 	or	r3,r19,r22
   80cac:	d8802e15 	stw	r2,184(sp)
   80cb0:	9124703a 	and	r18,r18,r4
   80cb4:	1802fb1e 	bne	r3,zero,818a4 <___vfprintf_internal_r+0x12d4>
   80cb8:	d8c02a17 	ldw	r3,168(sp)
   80cbc:	0039883a 	mov	fp,zero
   80cc0:	1805e526 	beq	r3,zero,82458 <___vfprintf_internal_r+0x1e88>
   80cc4:	0027883a 	mov	r19,zero
   80cc8:	002d883a 	mov	r22,zero
   80ccc:	dc001e04 	addi	r16,sp,120
   80cd0:	9806d0fa 	srli	r3,r19,3
   80cd4:	b008977a 	slli	r4,r22,29
   80cd8:	b02cd0fa 	srli	r22,r22,3
   80cdc:	9cc001cc 	andi	r19,r19,7
   80ce0:	98800c04 	addi	r2,r19,48
   80ce4:	843fffc4 	addi	r16,r16,-1
   80ce8:	20e6b03a 	or	r19,r4,r3
   80cec:	80800005 	stb	r2,0(r16)
   80cf0:	9d86b03a 	or	r3,r19,r22
   80cf4:	183ff61e 	bne	r3,zero,80cd0 <___vfprintf_internal_r+0x700>
   80cf8:	90c0004c 	andi	r3,r18,1
   80cfc:	18014126 	beq	r3,zero,81204 <___vfprintf_internal_r+0xc34>
   80d00:	10803fcc 	andi	r2,r2,255
   80d04:	1080201c 	xori	r2,r2,128
   80d08:	10bfe004 	addi	r2,r2,-128
   80d0c:	00c00c04 	movi	r3,48
   80d10:	10c13c26 	beq	r2,r3,81204 <___vfprintf_internal_r+0xc34>
   80d14:	80ffffc5 	stb	r3,-1(r16)
   80d18:	d8c02817 	ldw	r3,160(sp)
   80d1c:	80bfffc4 	addi	r2,r16,-1
   80d20:	1021883a 	mov	r16,r2
   80d24:	1887c83a 	sub	r3,r3,r2
   80d28:	d8c02b15 	stw	r3,172(sp)
   80d2c:	d8802b17 	ldw	r2,172(sp)
   80d30:	d9002a17 	ldw	r4,168(sp)
   80d34:	1100010e 	bge	r2,r4,80d3c <___vfprintf_internal_r+0x76c>
   80d38:	2005883a 	mov	r2,r4
   80d3c:	d8802915 	stw	r2,164(sp)
   80d40:	d8003215 	stw	zero,200(sp)
   80d44:	e7003fcc 	andi	fp,fp,255
   80d48:	e700201c 	xori	fp,fp,128
   80d4c:	e73fe004 	addi	fp,fp,-128
   80d50:	e0000326 	beq	fp,zero,80d60 <___vfprintf_internal_r+0x790>
   80d54:	d8c02917 	ldw	r3,164(sp)
   80d58:	18c00044 	addi	r3,r3,1
   80d5c:	d8c02915 	stw	r3,164(sp)
   80d60:	90c0008c 	andi	r3,r18,2
   80d64:	d8c02c15 	stw	r3,176(sp)
   80d68:	18000326 	beq	r3,zero,80d78 <___vfprintf_internal_r+0x7a8>
   80d6c:	d8c02917 	ldw	r3,164(sp)
   80d70:	18c00084 	addi	r3,r3,2
   80d74:	d8c02915 	stw	r3,164(sp)
   80d78:	90c0210c 	andi	r3,r18,132
   80d7c:	d8c03015 	stw	r3,192(sp)
   80d80:	1801c51e 	bne	r3,zero,81498 <___vfprintf_internal_r+0xec8>
   80d84:	d9003117 	ldw	r4,196(sp)
   80d88:	d8c02917 	ldw	r3,164(sp)
   80d8c:	20e7c83a 	sub	r19,r4,r3
   80d90:	04c1c10e 	bge	zero,r19,81498 <___vfprintf_internal_r+0xec8>
   80d94:	02400404 	movi	r9,16
   80d98:	d8c02017 	ldw	r3,128(sp)
   80d9c:	d8801f17 	ldw	r2,124(sp)
   80da0:	4cc52f0e 	bge	r9,r19,82260 <___vfprintf_internal_r+0x1c90>
   80da4:	01400134 	movhi	r5,4
   80da8:	29402184 	addi	r5,r5,134
   80dac:	dc403b15 	stw	r17,236(sp)
   80db0:	d9403515 	stw	r5,212(sp)
   80db4:	9823883a 	mov	r17,r19
   80db8:	482d883a 	mov	r22,r9
   80dbc:	9027883a 	mov	r19,r18
   80dc0:	070001c4 	movi	fp,7
   80dc4:	8025883a 	mov	r18,r16
   80dc8:	dc002d17 	ldw	r16,180(sp)
   80dcc:	00000306 	br	80ddc <___vfprintf_internal_r+0x80c>
   80dd0:	8c7ffc04 	addi	r17,r17,-16
   80dd4:	42000204 	addi	r8,r8,8
   80dd8:	b440130e 	bge	r22,r17,80e28 <___vfprintf_internal_r+0x858>
   80ddc:	01000134 	movhi	r4,4
   80de0:	18c00404 	addi	r3,r3,16
   80de4:	10800044 	addi	r2,r2,1
   80de8:	21002184 	addi	r4,r4,134
   80dec:	41000015 	stw	r4,0(r8)
   80df0:	45800115 	stw	r22,4(r8)
   80df4:	d8c02015 	stw	r3,128(sp)
   80df8:	d8801f15 	stw	r2,124(sp)
   80dfc:	e0bff40e 	bge	fp,r2,80dd0 <___vfprintf_internal_r+0x800>
   80e00:	d9801e04 	addi	r6,sp,120
   80e04:	b80b883a 	mov	r5,r23
   80e08:	8009883a 	mov	r4,r16
   80e0c:	0087db00 	call	87db0 <__sprint_r>
   80e10:	103ef31e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   80e14:	8c7ffc04 	addi	r17,r17,-16
   80e18:	d8c02017 	ldw	r3,128(sp)
   80e1c:	d8801f17 	ldw	r2,124(sp)
   80e20:	da000404 	addi	r8,sp,16
   80e24:	b47fed16 	blt	r22,r17,80ddc <___vfprintf_internal_r+0x80c>
   80e28:	9021883a 	mov	r16,r18
   80e2c:	9825883a 	mov	r18,r19
   80e30:	8827883a 	mov	r19,r17
   80e34:	dc403b17 	ldw	r17,236(sp)
   80e38:	d9403517 	ldw	r5,212(sp)
   80e3c:	98c7883a 	add	r3,r19,r3
   80e40:	10800044 	addi	r2,r2,1
   80e44:	41400015 	stw	r5,0(r8)
   80e48:	44c00115 	stw	r19,4(r8)
   80e4c:	d8c02015 	stw	r3,128(sp)
   80e50:	d8801f15 	stw	r2,124(sp)
   80e54:	010001c4 	movi	r4,7
   80e58:	2082c516 	blt	r4,r2,81970 <___vfprintf_internal_r+0x13a0>
   80e5c:	df002787 	ldb	fp,158(sp)
   80e60:	42000204 	addi	r8,r8,8
   80e64:	e0000c26 	beq	fp,zero,80e98 <___vfprintf_internal_r+0x8c8>
   80e68:	d8801f17 	ldw	r2,124(sp)
   80e6c:	d9002784 	addi	r4,sp,158
   80e70:	18c00044 	addi	r3,r3,1
   80e74:	10800044 	addi	r2,r2,1
   80e78:	41000015 	stw	r4,0(r8)
   80e7c:	01000044 	movi	r4,1
   80e80:	41000115 	stw	r4,4(r8)
   80e84:	d8c02015 	stw	r3,128(sp)
   80e88:	d8801f15 	stw	r2,124(sp)
   80e8c:	010001c4 	movi	r4,7
   80e90:	20825e16 	blt	r4,r2,8180c <___vfprintf_internal_r+0x123c>
   80e94:	42000204 	addi	r8,r8,8
   80e98:	d8802c17 	ldw	r2,176(sp)
   80e9c:	10000c26 	beq	r2,zero,80ed0 <___vfprintf_internal_r+0x900>
   80ea0:	d8801f17 	ldw	r2,124(sp)
   80ea4:	d9002704 	addi	r4,sp,156
   80ea8:	18c00084 	addi	r3,r3,2
   80eac:	10800044 	addi	r2,r2,1
   80eb0:	41000015 	stw	r4,0(r8)
   80eb4:	01000084 	movi	r4,2
   80eb8:	41000115 	stw	r4,4(r8)
   80ebc:	d8c02015 	stw	r3,128(sp)
   80ec0:	d8801f15 	stw	r2,124(sp)
   80ec4:	010001c4 	movi	r4,7
   80ec8:	20825816 	blt	r4,r2,8182c <___vfprintf_internal_r+0x125c>
   80ecc:	42000204 	addi	r8,r8,8
   80ed0:	d9003017 	ldw	r4,192(sp)
   80ed4:	00802004 	movi	r2,128
   80ed8:	2081bb26 	beq	r4,r2,815c8 <___vfprintf_internal_r+0xff8>
   80edc:	d9402a17 	ldw	r5,168(sp)
   80ee0:	d8802b17 	ldw	r2,172(sp)
   80ee4:	28adc83a 	sub	r22,r5,r2
   80ee8:	0580310e 	bge	zero,r22,80fb0 <___vfprintf_internal_r+0x9e0>
   80eec:	07000404 	movi	fp,16
   80ef0:	d8801f17 	ldw	r2,124(sp)
   80ef4:	e584360e 	bge	fp,r22,81fd0 <___vfprintf_internal_r+0x1a00>
   80ef8:	01400134 	movhi	r5,4
   80efc:	29401d84 	addi	r5,r5,118
   80f00:	dc402a15 	stw	r17,168(sp)
   80f04:	d9402c15 	stw	r5,176(sp)
   80f08:	b023883a 	mov	r17,r22
   80f0c:	04c001c4 	movi	r19,7
   80f10:	a82d883a 	mov	r22,r21
   80f14:	902b883a 	mov	r21,r18
   80f18:	8025883a 	mov	r18,r16
   80f1c:	dc002d17 	ldw	r16,180(sp)
   80f20:	00000306 	br	80f30 <___vfprintf_internal_r+0x960>
   80f24:	8c7ffc04 	addi	r17,r17,-16
   80f28:	42000204 	addi	r8,r8,8
   80f2c:	e440110e 	bge	fp,r17,80f74 <___vfprintf_internal_r+0x9a4>
   80f30:	18c00404 	addi	r3,r3,16
   80f34:	10800044 	addi	r2,r2,1
   80f38:	45000015 	stw	r20,0(r8)
   80f3c:	47000115 	stw	fp,4(r8)
   80f40:	d8c02015 	stw	r3,128(sp)
   80f44:	d8801f15 	stw	r2,124(sp)
   80f48:	98bff60e 	bge	r19,r2,80f24 <___vfprintf_internal_r+0x954>
   80f4c:	d9801e04 	addi	r6,sp,120
   80f50:	b80b883a 	mov	r5,r23
   80f54:	8009883a 	mov	r4,r16
   80f58:	0087db00 	call	87db0 <__sprint_r>
   80f5c:	103ea01e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   80f60:	8c7ffc04 	addi	r17,r17,-16
   80f64:	d8c02017 	ldw	r3,128(sp)
   80f68:	d8801f17 	ldw	r2,124(sp)
   80f6c:	da000404 	addi	r8,sp,16
   80f70:	e47fef16 	blt	fp,r17,80f30 <___vfprintf_internal_r+0x960>
   80f74:	9021883a 	mov	r16,r18
   80f78:	a825883a 	mov	r18,r21
   80f7c:	b02b883a 	mov	r21,r22
   80f80:	882d883a 	mov	r22,r17
   80f84:	dc402a17 	ldw	r17,168(sp)
   80f88:	d9002c17 	ldw	r4,176(sp)
   80f8c:	1d87883a 	add	r3,r3,r22
   80f90:	10800044 	addi	r2,r2,1
   80f94:	41000015 	stw	r4,0(r8)
   80f98:	45800115 	stw	r22,4(r8)
   80f9c:	d8c02015 	stw	r3,128(sp)
   80fa0:	d8801f15 	stw	r2,124(sp)
   80fa4:	010001c4 	movi	r4,7
   80fa8:	20821016 	blt	r4,r2,817ec <___vfprintf_internal_r+0x121c>
   80fac:	42000204 	addi	r8,r8,8
   80fb0:	9080400c 	andi	r2,r18,256
   80fb4:	10013a1e 	bne	r2,zero,814a0 <___vfprintf_internal_r+0xed0>
   80fb8:	d9402b17 	ldw	r5,172(sp)
   80fbc:	d8801f17 	ldw	r2,124(sp)
   80fc0:	44000015 	stw	r16,0(r8)
   80fc4:	1947883a 	add	r3,r3,r5
   80fc8:	10800044 	addi	r2,r2,1
   80fcc:	41400115 	stw	r5,4(r8)
   80fd0:	d8c02015 	stw	r3,128(sp)
   80fd4:	d8801f15 	stw	r2,124(sp)
   80fd8:	010001c4 	movi	r4,7
   80fdc:	2081f516 	blt	r4,r2,817b4 <___vfprintf_internal_r+0x11e4>
   80fe0:	42000204 	addi	r8,r8,8
   80fe4:	9480010c 	andi	r18,r18,4
   80fe8:	90003226 	beq	r18,zero,810b4 <___vfprintf_internal_r+0xae4>
   80fec:	d9403117 	ldw	r5,196(sp)
   80ff0:	d8802917 	ldw	r2,164(sp)
   80ff4:	28a1c83a 	sub	r16,r5,r2
   80ff8:	04002e0e 	bge	zero,r16,810b4 <___vfprintf_internal_r+0xae4>
   80ffc:	04400404 	movi	r17,16
   81000:	d8801f17 	ldw	r2,124(sp)
   81004:	8c04c40e 	bge	r17,r16,82318 <___vfprintf_internal_r+0x1d48>
   81008:	01400134 	movhi	r5,4
   8100c:	29402184 	addi	r5,r5,134
   81010:	d9403515 	stw	r5,212(sp)
   81014:	048001c4 	movi	r18,7
   81018:	dcc02d17 	ldw	r19,180(sp)
   8101c:	00000306 	br	8102c <___vfprintf_internal_r+0xa5c>
   81020:	843ffc04 	addi	r16,r16,-16
   81024:	42000204 	addi	r8,r8,8
   81028:	8c00130e 	bge	r17,r16,81078 <___vfprintf_internal_r+0xaa8>
   8102c:	01000134 	movhi	r4,4
   81030:	18c00404 	addi	r3,r3,16
   81034:	10800044 	addi	r2,r2,1
   81038:	21002184 	addi	r4,r4,134
   8103c:	41000015 	stw	r4,0(r8)
   81040:	44400115 	stw	r17,4(r8)
   81044:	d8c02015 	stw	r3,128(sp)
   81048:	d8801f15 	stw	r2,124(sp)
   8104c:	90bff40e 	bge	r18,r2,81020 <___vfprintf_internal_r+0xa50>
   81050:	d9801e04 	addi	r6,sp,120
   81054:	b80b883a 	mov	r5,r23
   81058:	9809883a 	mov	r4,r19
   8105c:	0087db00 	call	87db0 <__sprint_r>
   81060:	103e5f1e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   81064:	843ffc04 	addi	r16,r16,-16
   81068:	d8c02017 	ldw	r3,128(sp)
   8106c:	d8801f17 	ldw	r2,124(sp)
   81070:	da000404 	addi	r8,sp,16
   81074:	8c3fed16 	blt	r17,r16,8102c <___vfprintf_internal_r+0xa5c>
   81078:	d9403517 	ldw	r5,212(sp)
   8107c:	1c07883a 	add	r3,r3,r16
   81080:	10800044 	addi	r2,r2,1
   81084:	41400015 	stw	r5,0(r8)
   81088:	44000115 	stw	r16,4(r8)
   8108c:	d8c02015 	stw	r3,128(sp)
   81090:	d8801f15 	stw	r2,124(sp)
   81094:	010001c4 	movi	r4,7
   81098:	2080060e 	bge	r4,r2,810b4 <___vfprintf_internal_r+0xae4>
   8109c:	d9002d17 	ldw	r4,180(sp)
   810a0:	d9801e04 	addi	r6,sp,120
   810a4:	b80b883a 	mov	r5,r23
   810a8:	0087db00 	call	87db0 <__sprint_r>
   810ac:	103e4c1e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   810b0:	d8c02017 	ldw	r3,128(sp)
   810b4:	d8803117 	ldw	r2,196(sp)
   810b8:	d9002917 	ldw	r4,164(sp)
   810bc:	1100010e 	bge	r2,r4,810c4 <___vfprintf_internal_r+0xaf4>
   810c0:	2005883a 	mov	r2,r4
   810c4:	d9402f17 	ldw	r5,188(sp)
   810c8:	288b883a 	add	r5,r5,r2
   810cc:	d9402f15 	stw	r5,188(sp)
   810d0:	1801c01e 	bne	r3,zero,817d4 <___vfprintf_internal_r+0x1204>
   810d4:	a8800007 	ldb	r2,0(r21)
   810d8:	d8001f15 	stw	zero,124(sp)
   810dc:	da000404 	addi	r8,sp,16
   810e0:	103d751e 	bne	r2,zero,806b8 <___vfprintf_internal_r+0xe8>
   810e4:	a823883a 	mov	r17,r21
   810e8:	003d8b06 	br	80718 <___vfprintf_internal_r+0x148>
   810ec:	8025883a 	mov	r18,r16
   810f0:	dc002903 	ldbu	r16,164(sp)
   810f4:	e011883a 	mov	r8,fp
   810f8:	84003fcc 	andi	r16,r16,255
   810fc:	8005e51e 	bne	r16,zero,82894 <___vfprintf_internal_r+0x22c4>
   81100:	94800414 	ori	r18,r18,16
   81104:	9080080c 	andi	r2,r18,32
   81108:	10022b26 	beq	r2,zero,819b8 <___vfprintf_internal_r+0x13e8>
   8110c:	d9002e17 	ldw	r4,184(sp)
   81110:	d9402a17 	ldw	r5,168(sp)
   81114:	d8002785 	stb	zero,158(sp)
   81118:	20c00204 	addi	r3,r4,8
   8111c:	24c00017 	ldw	r19,0(r4)
   81120:	25800117 	ldw	r22,4(r4)
   81124:	28042e16 	blt	r5,zero,821e0 <___vfprintf_internal_r+0x1c10>
   81128:	013fdfc4 	movi	r4,-129
   8112c:	9d84b03a 	or	r2,r19,r22
   81130:	d8c02e15 	stw	r3,184(sp)
   81134:	9124703a 	and	r18,r18,r4
   81138:	0039883a 	mov	fp,zero
   8113c:	103e801e 	bne	r2,zero,80b40 <___vfprintf_internal_r+0x570>
   81140:	d9002a17 	ldw	r4,168(sp)
   81144:	2002e01e 	bne	r4,zero,81cc8 <___vfprintf_internal_r+0x16f8>
   81148:	d8002a15 	stw	zero,168(sp)
   8114c:	d8002b15 	stw	zero,172(sp)
   81150:	dc001e04 	addi	r16,sp,120
   81154:	003ef506 	br	80d2c <___vfprintf_internal_r+0x75c>
   81158:	8025883a 	mov	r18,r16
   8115c:	dc002903 	ldbu	r16,164(sp)
   81160:	e011883a 	mov	r8,fp
   81164:	84003fcc 	andi	r16,r16,255
   81168:	8005ba1e 	bne	r16,zero,82854 <___vfprintf_internal_r+0x2284>
   8116c:	01000134 	movhi	r4,4
   81170:	21001104 	addi	r4,r4,68
   81174:	d9003915 	stw	r4,228(sp)
   81178:	9080080c 	andi	r2,r18,32
   8117c:	10006126 	beq	r2,zero,81304 <___vfprintf_internal_r+0xd34>
   81180:	d9402e17 	ldw	r5,184(sp)
   81184:	2cc00017 	ldw	r19,0(r5)
   81188:	2d800117 	ldw	r22,4(r5)
   8118c:	29400204 	addi	r5,r5,8
   81190:	d9402e15 	stw	r5,184(sp)
   81194:	9080004c 	andi	r2,r18,1
   81198:	1001ac26 	beq	r2,zero,8184c <___vfprintf_internal_r+0x127c>
   8119c:	9d84b03a 	or	r2,r19,r22
   811a0:	10038526 	beq	r2,zero,81fb8 <___vfprintf_internal_r+0x19e8>
   811a4:	d8c02a17 	ldw	r3,168(sp)
   811a8:	00800c04 	movi	r2,48
   811ac:	d8802705 	stb	r2,156(sp)
   811b0:	dc402745 	stb	r17,157(sp)
   811b4:	d8002785 	stb	zero,158(sp)
   811b8:	90800094 	ori	r2,r18,2
   811bc:	18047916 	blt	r3,zero,823a4 <___vfprintf_internal_r+0x1dd4>
   811c0:	00bfdfc4 	movi	r2,-129
   811c4:	90a4703a 	and	r18,r18,r2
   811c8:	94800094 	ori	r18,r18,2
   811cc:	0039883a 	mov	fp,zero
   811d0:	d9003917 	ldw	r4,228(sp)
   811d4:	dc001e04 	addi	r16,sp,120
   811d8:	988003cc 	andi	r2,r19,15
   811dc:	b006973a 	slli	r3,r22,28
   811e0:	2085883a 	add	r2,r4,r2
   811e4:	9826d13a 	srli	r19,r19,4
   811e8:	10800003 	ldbu	r2,0(r2)
   811ec:	b02cd13a 	srli	r22,r22,4
   811f0:	843fffc4 	addi	r16,r16,-1
   811f4:	1ce6b03a 	or	r19,r3,r19
   811f8:	80800005 	stb	r2,0(r16)
   811fc:	9d84b03a 	or	r2,r19,r22
   81200:	103ff51e 	bne	r2,zero,811d8 <___vfprintf_internal_r+0xc08>
   81204:	d8c02817 	ldw	r3,160(sp)
   81208:	1c07c83a 	sub	r3,r3,r16
   8120c:	d8c02b15 	stw	r3,172(sp)
   81210:	003ec606 	br	80d2c <___vfprintf_internal_r+0x75c>
   81214:	8025883a 	mov	r18,r16
   81218:	dc002903 	ldbu	r16,164(sp)
   8121c:	e011883a 	mov	r8,fp
   81220:	84003fcc 	andi	r16,r16,255
   81224:	803e9626 	beq	r16,zero,80c80 <___vfprintf_internal_r+0x6b0>
   81228:	d8c02b03 	ldbu	r3,172(sp)
   8122c:	d8c02785 	stb	r3,158(sp)
   81230:	003e9306 	br	80c80 <___vfprintf_internal_r+0x6b0>
   81234:	00c00044 	movi	r3,1
   81238:	d8c02905 	stb	r3,164(sp)
   8123c:	00c00ac4 	movi	r3,43
   81240:	d8c02b05 	stb	r3,172(sp)
   81244:	ac400007 	ldb	r17,0(r21)
   81248:	003d4306 	br	80758 <___vfprintf_internal_r+0x188>
   8124c:	84000814 	ori	r16,r16,32
   81250:	ac400007 	ldb	r17,0(r21)
   81254:	003d4006 	br	80758 <___vfprintf_internal_r+0x188>
   81258:	d8802e17 	ldw	r2,184(sp)
   8125c:	8025883a 	mov	r18,r16
   81260:	d8002785 	stb	zero,158(sp)
   81264:	14000017 	ldw	r16,0(r2)
   81268:	e011883a 	mov	r8,fp
   8126c:	14c00104 	addi	r19,r2,4
   81270:	80042d26 	beq	r16,zero,82328 <___vfprintf_internal_r+0x1d58>
   81274:	d8c02a17 	ldw	r3,168(sp)
   81278:	1803e416 	blt	r3,zero,8220c <___vfprintf_internal_r+0x1c3c>
   8127c:	180d883a 	mov	r6,r3
   81280:	000b883a 	mov	r5,zero
   81284:	8009883a 	mov	r4,r16
   81288:	df003d15 	stw	fp,244(sp)
   8128c:	0085f080 	call	85f08 <memchr>
   81290:	da003d17 	ldw	r8,244(sp)
   81294:	10046826 	beq	r2,zero,82438 <___vfprintf_internal_r+0x1e68>
   81298:	1405c83a 	sub	r2,r2,r16
   8129c:	d8802b15 	stw	r2,172(sp)
   812a0:	1003e016 	blt	r2,zero,82224 <___vfprintf_internal_r+0x1c54>
   812a4:	df002783 	ldbu	fp,158(sp)
   812a8:	d8802915 	stw	r2,164(sp)
   812ac:	dcc02e15 	stw	r19,184(sp)
   812b0:	d8002a15 	stw	zero,168(sp)
   812b4:	d8003215 	stw	zero,200(sp)
   812b8:	003ea206 	br	80d44 <___vfprintf_internal_r+0x774>
   812bc:	8025883a 	mov	r18,r16
   812c0:	dc002903 	ldbu	r16,164(sp)
   812c4:	e011883a 	mov	r8,fp
   812c8:	84003fcc 	andi	r16,r16,255
   812cc:	803f8d26 	beq	r16,zero,81104 <___vfprintf_internal_r+0xb34>
   812d0:	d8c02b03 	ldbu	r3,172(sp)
   812d4:	d8c02785 	stb	r3,158(sp)
   812d8:	003f8a06 	br	81104 <___vfprintf_internal_r+0xb34>
   812dc:	8025883a 	mov	r18,r16
   812e0:	dc002903 	ldbu	r16,164(sp)
   812e4:	e011883a 	mov	r8,fp
   812e8:	84003fcc 	andi	r16,r16,255
   812ec:	8005661e 	bne	r16,zero,82888 <___vfprintf_internal_r+0x22b8>
   812f0:	01000134 	movhi	r4,4
   812f4:	21001604 	addi	r4,r4,88
   812f8:	d9003915 	stw	r4,228(sp)
   812fc:	9080080c 	andi	r2,r18,32
   81300:	103f9f1e 	bne	r2,zero,81180 <___vfprintf_internal_r+0xbb0>
   81304:	9080040c 	andi	r2,r18,16
   81308:	1002eb26 	beq	r2,zero,81eb8 <___vfprintf_internal_r+0x18e8>
   8130c:	d8802e17 	ldw	r2,184(sp)
   81310:	002d883a 	mov	r22,zero
   81314:	14c00017 	ldw	r19,0(r2)
   81318:	10800104 	addi	r2,r2,4
   8131c:	d8802e15 	stw	r2,184(sp)
   81320:	003f9c06 	br	81194 <___vfprintf_internal_r+0xbc4>
   81324:	d8802b07 	ldb	r2,172(sp)
   81328:	1002e11e 	bne	r2,zero,81eb0 <___vfprintf_internal_r+0x18e0>
   8132c:	00c00044 	movi	r3,1
   81330:	d8c02905 	stb	r3,164(sp)
   81334:	00c00804 	movi	r3,32
   81338:	d8c02b05 	stb	r3,172(sp)
   8133c:	ac400007 	ldb	r17,0(r21)
   81340:	003d0506 	br	80758 <___vfprintf_internal_r+0x188>
   81344:	84000054 	ori	r16,r16,1
   81348:	ac400007 	ldb	r17,0(r21)
   8134c:	003d0206 	br	80758 <___vfprintf_internal_r+0x188>
   81350:	8025883a 	mov	r18,r16
   81354:	dc002903 	ldbu	r16,164(sp)
   81358:	e011883a 	mov	r8,fp
   8135c:	84003fcc 	andi	r16,r16,255
   81360:	803de726 	beq	r16,zero,80b00 <___vfprintf_internal_r+0x530>
   81364:	d8c02b03 	ldbu	r3,172(sp)
   81368:	d8c02785 	stb	r3,158(sp)
   8136c:	003de406 	br	80b00 <___vfprintf_internal_r+0x530>
   81370:	84001014 	ori	r16,r16,64
   81374:	ac400007 	ldb	r17,0(r21)
   81378:	003cf706 	br	80758 <___vfprintf_internal_r+0x188>
   8137c:	ac400007 	ldb	r17,0(r21)
   81380:	00801b04 	movi	r2,108
   81384:	88838f26 	beq	r17,r2,821c4 <___vfprintf_internal_r+0x1bf4>
   81388:	84000414 	ori	r16,r16,16
   8138c:	003cf206 	br	80758 <___vfprintf_internal_r+0x188>
   81390:	8025883a 	mov	r18,r16
   81394:	dc002903 	ldbu	r16,164(sp)
   81398:	e011883a 	mov	r8,fp
   8139c:	84003fcc 	andi	r16,r16,255
   813a0:	80053f1e 	bne	r16,zero,828a0 <___vfprintf_internal_r+0x22d0>
   813a4:	9080080c 	andi	r2,r18,32
   813a8:	1002d226 	beq	r2,zero,81ef4 <___vfprintf_internal_r+0x1924>
   813ac:	d9002e17 	ldw	r4,184(sp)
   813b0:	d9402f17 	ldw	r5,188(sp)
   813b4:	20800017 	ldw	r2,0(r4)
   813b8:	2807d7fa 	srai	r3,r5,31
   813bc:	21000104 	addi	r4,r4,4
   813c0:	d9002e15 	stw	r4,184(sp)
   813c4:	11400015 	stw	r5,0(r2)
   813c8:	10c00115 	stw	r3,4(r2)
   813cc:	003cb806 	br	806b0 <___vfprintf_internal_r+0xe0>
   813d0:	d8c02e17 	ldw	r3,184(sp)
   813d4:	d9002e17 	ldw	r4,184(sp)
   813d8:	8025883a 	mov	r18,r16
   813dc:	18800017 	ldw	r2,0(r3)
   813e0:	21000104 	addi	r4,r4,4
   813e4:	00c00044 	movi	r3,1
   813e8:	e011883a 	mov	r8,fp
   813ec:	d8c02915 	stw	r3,164(sp)
   813f0:	d8002785 	stb	zero,158(sp)
   813f4:	d8801405 	stb	r2,80(sp)
   813f8:	d9002e15 	stw	r4,184(sp)
   813fc:	d8c02b15 	stw	r3,172(sp)
   81400:	d8002a15 	stw	zero,168(sp)
   81404:	d8003215 	stw	zero,200(sp)
   81408:	dc001404 	addi	r16,sp,80
   8140c:	0039883a 	mov	fp,zero
   81410:	003e5306 	br	80d60 <___vfprintf_internal_r+0x790>
   81414:	01000134 	movhi	r4,4
   81418:	21001604 	addi	r4,r4,88
   8141c:	0039883a 	mov	fp,zero
   81420:	d9003915 	stw	r4,228(sp)
   81424:	04401e04 	movi	r17,120
   81428:	003f6906 	br	811d0 <___vfprintf_internal_r+0xc00>
   8142c:	8025883a 	mov	r18,r16
   81430:	dc002903 	ldbu	r16,164(sp)
   81434:	e011883a 	mov	r8,fp
   81438:	84003fcc 	andi	r16,r16,255
   8143c:	8005081e 	bne	r16,zero,82860 <___vfprintf_internal_r+0x2290>
   81440:	883d6126 	beq	r17,zero,809c8 <___vfprintf_internal_r+0x3f8>
   81444:	00c00044 	movi	r3,1
   81448:	d8c02915 	stw	r3,164(sp)
   8144c:	dc401405 	stb	r17,80(sp)
   81450:	d8002785 	stb	zero,158(sp)
   81454:	003fe906 	br	813fc <___vfprintf_internal_r+0xe2c>
   81458:	01400134 	movhi	r5,4
   8145c:	29401604 	addi	r5,r5,88
   81460:	d9403915 	stw	r5,228(sp)
   81464:	d8c02e15 	stw	r3,184(sp)
   81468:	1025883a 	mov	r18,r2
   8146c:	04401e04 	movi	r17,120
   81470:	9d84b03a 	or	r2,r19,r22
   81474:	1000fc1e 	bne	r2,zero,81868 <___vfprintf_internal_r+0x1298>
   81478:	0039883a 	mov	fp,zero
   8147c:	00800084 	movi	r2,2
   81480:	10803fcc 	andi	r2,r2,255
   81484:	00c00044 	movi	r3,1
   81488:	10c20f26 	beq	r2,r3,81cc8 <___vfprintf_internal_r+0x16f8>
   8148c:	00c00084 	movi	r3,2
   81490:	10fd3326 	beq	r2,r3,80960 <___vfprintf_internal_r+0x390>
   81494:	003e0b06 	br	80cc4 <___vfprintf_internal_r+0x6f4>
   81498:	d8c02017 	ldw	r3,128(sp)
   8149c:	003e7106 	br	80e64 <___vfprintf_internal_r+0x894>
   814a0:	00801944 	movi	r2,101
   814a4:	14407e0e 	bge	r2,r17,816a0 <___vfprintf_internal_r+0x10d0>
   814a8:	d9003617 	ldw	r4,216(sp)
   814ac:	d9403817 	ldw	r5,224(sp)
   814b0:	000d883a 	mov	r6,zero
   814b4:	000f883a 	mov	r7,zero
   814b8:	d8c03c15 	stw	r3,240(sp)
   814bc:	da003d15 	stw	r8,244(sp)
   814c0:	008bd100 	call	8bd10 <__eqdf2>
   814c4:	d8c03c17 	ldw	r3,240(sp)
   814c8:	da003d17 	ldw	r8,244(sp)
   814cc:	1000f71e 	bne	r2,zero,818ac <___vfprintf_internal_r+0x12dc>
   814d0:	d8801f17 	ldw	r2,124(sp)
   814d4:	01000134 	movhi	r4,4
   814d8:	21001d04 	addi	r4,r4,116
   814dc:	18c00044 	addi	r3,r3,1
   814e0:	10800044 	addi	r2,r2,1
   814e4:	41000015 	stw	r4,0(r8)
   814e8:	01000044 	movi	r4,1
   814ec:	41000115 	stw	r4,4(r8)
   814f0:	d8c02015 	stw	r3,128(sp)
   814f4:	d8801f15 	stw	r2,124(sp)
   814f8:	010001c4 	movi	r4,7
   814fc:	2082b816 	blt	r4,r2,81fe0 <___vfprintf_internal_r+0x1a10>
   81500:	42000204 	addi	r8,r8,8
   81504:	d8802617 	ldw	r2,152(sp)
   81508:	d9403317 	ldw	r5,204(sp)
   8150c:	11400216 	blt	r2,r5,81518 <___vfprintf_internal_r+0xf48>
   81510:	9080004c 	andi	r2,r18,1
   81514:	103eb326 	beq	r2,zero,80fe4 <___vfprintf_internal_r+0xa14>
   81518:	d8803717 	ldw	r2,220(sp)
   8151c:	d9003417 	ldw	r4,208(sp)
   81520:	d9403717 	ldw	r5,220(sp)
   81524:	1887883a 	add	r3,r3,r2
   81528:	d8801f17 	ldw	r2,124(sp)
   8152c:	41000015 	stw	r4,0(r8)
   81530:	41400115 	stw	r5,4(r8)
   81534:	10800044 	addi	r2,r2,1
   81538:	d8c02015 	stw	r3,128(sp)
   8153c:	d8801f15 	stw	r2,124(sp)
   81540:	010001c4 	movi	r4,7
   81544:	20832916 	blt	r4,r2,821ec <___vfprintf_internal_r+0x1c1c>
   81548:	42000204 	addi	r8,r8,8
   8154c:	d8803317 	ldw	r2,204(sp)
   81550:	143fffc4 	addi	r16,r2,-1
   81554:	043ea30e 	bge	zero,r16,80fe4 <___vfprintf_internal_r+0xa14>
   81558:	04400404 	movi	r17,16
   8155c:	d8801f17 	ldw	r2,124(sp)
   81560:	8c00880e 	bge	r17,r16,81784 <___vfprintf_internal_r+0x11b4>
   81564:	01400134 	movhi	r5,4
   81568:	29401d84 	addi	r5,r5,118
   8156c:	d9402c15 	stw	r5,176(sp)
   81570:	058001c4 	movi	r22,7
   81574:	dcc02d17 	ldw	r19,180(sp)
   81578:	00000306 	br	81588 <___vfprintf_internal_r+0xfb8>
   8157c:	42000204 	addi	r8,r8,8
   81580:	843ffc04 	addi	r16,r16,-16
   81584:	8c00820e 	bge	r17,r16,81790 <___vfprintf_internal_r+0x11c0>
   81588:	18c00404 	addi	r3,r3,16
   8158c:	10800044 	addi	r2,r2,1
   81590:	45000015 	stw	r20,0(r8)
   81594:	44400115 	stw	r17,4(r8)
   81598:	d8c02015 	stw	r3,128(sp)
   8159c:	d8801f15 	stw	r2,124(sp)
   815a0:	b0bff60e 	bge	r22,r2,8157c <___vfprintf_internal_r+0xfac>
   815a4:	d9801e04 	addi	r6,sp,120
   815a8:	b80b883a 	mov	r5,r23
   815ac:	9809883a 	mov	r4,r19
   815b0:	0087db00 	call	87db0 <__sprint_r>
   815b4:	103d0a1e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   815b8:	d8c02017 	ldw	r3,128(sp)
   815bc:	d8801f17 	ldw	r2,124(sp)
   815c0:	da000404 	addi	r8,sp,16
   815c4:	003fee06 	br	81580 <___vfprintf_internal_r+0xfb0>
   815c8:	d9403117 	ldw	r5,196(sp)
   815cc:	d8802917 	ldw	r2,164(sp)
   815d0:	28adc83a 	sub	r22,r5,r2
   815d4:	05be410e 	bge	zero,r22,80edc <___vfprintf_internal_r+0x90c>
   815d8:	07000404 	movi	fp,16
   815dc:	d8801f17 	ldw	r2,124(sp)
   815e0:	e5838f0e 	bge	fp,r22,82420 <___vfprintf_internal_r+0x1e50>
   815e4:	01400134 	movhi	r5,4
   815e8:	29401d84 	addi	r5,r5,118
   815ec:	dc403015 	stw	r17,192(sp)
   815f0:	d9402c15 	stw	r5,176(sp)
   815f4:	b023883a 	mov	r17,r22
   815f8:	04c001c4 	movi	r19,7
   815fc:	a82d883a 	mov	r22,r21
   81600:	902b883a 	mov	r21,r18
   81604:	8025883a 	mov	r18,r16
   81608:	dc002d17 	ldw	r16,180(sp)
   8160c:	00000306 	br	8161c <___vfprintf_internal_r+0x104c>
   81610:	8c7ffc04 	addi	r17,r17,-16
   81614:	42000204 	addi	r8,r8,8
   81618:	e440110e 	bge	fp,r17,81660 <___vfprintf_internal_r+0x1090>
   8161c:	18c00404 	addi	r3,r3,16
   81620:	10800044 	addi	r2,r2,1
   81624:	45000015 	stw	r20,0(r8)
   81628:	47000115 	stw	fp,4(r8)
   8162c:	d8c02015 	stw	r3,128(sp)
   81630:	d8801f15 	stw	r2,124(sp)
   81634:	98bff60e 	bge	r19,r2,81610 <___vfprintf_internal_r+0x1040>
   81638:	d9801e04 	addi	r6,sp,120
   8163c:	b80b883a 	mov	r5,r23
   81640:	8009883a 	mov	r4,r16
   81644:	0087db00 	call	87db0 <__sprint_r>
   81648:	103ce51e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   8164c:	8c7ffc04 	addi	r17,r17,-16
   81650:	d8c02017 	ldw	r3,128(sp)
   81654:	d8801f17 	ldw	r2,124(sp)
   81658:	da000404 	addi	r8,sp,16
   8165c:	e47fef16 	blt	fp,r17,8161c <___vfprintf_internal_r+0x104c>
   81660:	9021883a 	mov	r16,r18
   81664:	a825883a 	mov	r18,r21
   81668:	b02b883a 	mov	r21,r22
   8166c:	882d883a 	mov	r22,r17
   81670:	dc403017 	ldw	r17,192(sp)
   81674:	d9002c17 	ldw	r4,176(sp)
   81678:	1d87883a 	add	r3,r3,r22
   8167c:	10800044 	addi	r2,r2,1
   81680:	41000015 	stw	r4,0(r8)
   81684:	45800115 	stw	r22,4(r8)
   81688:	d8c02015 	stw	r3,128(sp)
   8168c:	d8801f15 	stw	r2,124(sp)
   81690:	010001c4 	movi	r4,7
   81694:	20818e16 	blt	r4,r2,81cd0 <___vfprintf_internal_r+0x1700>
   81698:	42000204 	addi	r8,r8,8
   8169c:	003e0f06 	br	80edc <___vfprintf_internal_r+0x90c>
   816a0:	d9403317 	ldw	r5,204(sp)
   816a4:	00800044 	movi	r2,1
   816a8:	18c00044 	addi	r3,r3,1
   816ac:	1141530e 	bge	r2,r5,81bfc <___vfprintf_internal_r+0x162c>
   816b0:	dc401f17 	ldw	r17,124(sp)
   816b4:	00800044 	movi	r2,1
   816b8:	40800115 	stw	r2,4(r8)
   816bc:	8c400044 	addi	r17,r17,1
   816c0:	44000015 	stw	r16,0(r8)
   816c4:	d8c02015 	stw	r3,128(sp)
   816c8:	dc401f15 	stw	r17,124(sp)
   816cc:	008001c4 	movi	r2,7
   816d0:	14416b16 	blt	r2,r17,81c80 <___vfprintf_internal_r+0x16b0>
   816d4:	42000204 	addi	r8,r8,8
   816d8:	d8803717 	ldw	r2,220(sp)
   816dc:	d9003417 	ldw	r4,208(sp)
   816e0:	8c400044 	addi	r17,r17,1
   816e4:	10c7883a 	add	r3,r2,r3
   816e8:	40800115 	stw	r2,4(r8)
   816ec:	41000015 	stw	r4,0(r8)
   816f0:	d8c02015 	stw	r3,128(sp)
   816f4:	dc401f15 	stw	r17,124(sp)
   816f8:	008001c4 	movi	r2,7
   816fc:	14416916 	blt	r2,r17,81ca4 <___vfprintf_internal_r+0x16d4>
   81700:	45800204 	addi	r22,r8,8
   81704:	d9003617 	ldw	r4,216(sp)
   81708:	d9403817 	ldw	r5,224(sp)
   8170c:	000d883a 	mov	r6,zero
   81710:	000f883a 	mov	r7,zero
   81714:	d8c03c15 	stw	r3,240(sp)
   81718:	008bd100 	call	8bd10 <__eqdf2>
   8171c:	d8c03c17 	ldw	r3,240(sp)
   81720:	1000bc26 	beq	r2,zero,81a14 <___vfprintf_internal_r+0x1444>
   81724:	d9403317 	ldw	r5,204(sp)
   81728:	84000044 	addi	r16,r16,1
   8172c:	8c400044 	addi	r17,r17,1
   81730:	28bfffc4 	addi	r2,r5,-1
   81734:	1887883a 	add	r3,r3,r2
   81738:	b0800115 	stw	r2,4(r22)
   8173c:	b4000015 	stw	r16,0(r22)
   81740:	d8c02015 	stw	r3,128(sp)
   81744:	dc401f15 	stw	r17,124(sp)
   81748:	008001c4 	movi	r2,7
   8174c:	14414316 	blt	r2,r17,81c5c <___vfprintf_internal_r+0x168c>
   81750:	b5800204 	addi	r22,r22,8
   81754:	d9003a17 	ldw	r4,232(sp)
   81758:	df0022c4 	addi	fp,sp,139
   8175c:	8c400044 	addi	r17,r17,1
   81760:	20c7883a 	add	r3,r4,r3
   81764:	b7000015 	stw	fp,0(r22)
   81768:	b1000115 	stw	r4,4(r22)
   8176c:	d8c02015 	stw	r3,128(sp)
   81770:	dc401f15 	stw	r17,124(sp)
   81774:	008001c4 	movi	r2,7
   81778:	14400e16 	blt	r2,r17,817b4 <___vfprintf_internal_r+0x11e4>
   8177c:	b2000204 	addi	r8,r22,8
   81780:	003e1806 	br	80fe4 <___vfprintf_internal_r+0xa14>
   81784:	01000134 	movhi	r4,4
   81788:	21001d84 	addi	r4,r4,118
   8178c:	d9002c15 	stw	r4,176(sp)
   81790:	d9002c17 	ldw	r4,176(sp)
   81794:	1c07883a 	add	r3,r3,r16
   81798:	44000115 	stw	r16,4(r8)
   8179c:	41000015 	stw	r4,0(r8)
   817a0:	10800044 	addi	r2,r2,1
   817a4:	d8c02015 	stw	r3,128(sp)
   817a8:	d8801f15 	stw	r2,124(sp)
   817ac:	010001c4 	movi	r4,7
   817b0:	20be0b0e 	bge	r4,r2,80fe0 <___vfprintf_internal_r+0xa10>
   817b4:	d9002d17 	ldw	r4,180(sp)
   817b8:	d9801e04 	addi	r6,sp,120
   817bc:	b80b883a 	mov	r5,r23
   817c0:	0087db00 	call	87db0 <__sprint_r>
   817c4:	103c861e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   817c8:	d8c02017 	ldw	r3,128(sp)
   817cc:	da000404 	addi	r8,sp,16
   817d0:	003e0406 	br	80fe4 <___vfprintf_internal_r+0xa14>
   817d4:	d9002d17 	ldw	r4,180(sp)
   817d8:	d9801e04 	addi	r6,sp,120
   817dc:	b80b883a 	mov	r5,r23
   817e0:	0087db00 	call	87db0 <__sprint_r>
   817e4:	103e3b26 	beq	r2,zero,810d4 <___vfprintf_internal_r+0xb04>
   817e8:	003c7d06 	br	809e0 <___vfprintf_internal_r+0x410>
   817ec:	d9002d17 	ldw	r4,180(sp)
   817f0:	d9801e04 	addi	r6,sp,120
   817f4:	b80b883a 	mov	r5,r23
   817f8:	0087db00 	call	87db0 <__sprint_r>
   817fc:	103c781e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   81800:	d8c02017 	ldw	r3,128(sp)
   81804:	da000404 	addi	r8,sp,16
   81808:	003de906 	br	80fb0 <___vfprintf_internal_r+0x9e0>
   8180c:	d9002d17 	ldw	r4,180(sp)
   81810:	d9801e04 	addi	r6,sp,120
   81814:	b80b883a 	mov	r5,r23
   81818:	0087db00 	call	87db0 <__sprint_r>
   8181c:	103c701e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   81820:	d8c02017 	ldw	r3,128(sp)
   81824:	da000404 	addi	r8,sp,16
   81828:	003d9b06 	br	80e98 <___vfprintf_internal_r+0x8c8>
   8182c:	d9002d17 	ldw	r4,180(sp)
   81830:	d9801e04 	addi	r6,sp,120
   81834:	b80b883a 	mov	r5,r23
   81838:	0087db00 	call	87db0 <__sprint_r>
   8183c:	103c681e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   81840:	d8c02017 	ldw	r3,128(sp)
   81844:	da000404 	addi	r8,sp,16
   81848:	003da106 	br	80ed0 <___vfprintf_internal_r+0x900>
   8184c:	d9402a17 	ldw	r5,168(sp)
   81850:	d8002785 	stb	zero,158(sp)
   81854:	283f0616 	blt	r5,zero,81470 <___vfprintf_internal_r+0xea0>
   81858:	00ffdfc4 	movi	r3,-129
   8185c:	9d84b03a 	or	r2,r19,r22
   81860:	90e4703a 	and	r18,r18,r3
   81864:	103c3b26 	beq	r2,zero,80954 <___vfprintf_internal_r+0x384>
   81868:	0039883a 	mov	fp,zero
   8186c:	003e5806 	br	811d0 <___vfprintf_internal_r+0xc00>
   81870:	9080040c 	andi	r2,r18,16
   81874:	1001b326 	beq	r2,zero,81f44 <___vfprintf_internal_r+0x1974>
   81878:	d8c02e17 	ldw	r3,184(sp)
   8187c:	d9002a17 	ldw	r4,168(sp)
   81880:	d8002785 	stb	zero,158(sp)
   81884:	18800104 	addi	r2,r3,4
   81888:	1cc00017 	ldw	r19,0(r3)
   8188c:	002d883a 	mov	r22,zero
   81890:	2001b516 	blt	r4,zero,81f68 <___vfprintf_internal_r+0x1998>
   81894:	00ffdfc4 	movi	r3,-129
   81898:	d8802e15 	stw	r2,184(sp)
   8189c:	90e4703a 	and	r18,r18,r3
   818a0:	983d0526 	beq	r19,zero,80cb8 <___vfprintf_internal_r+0x6e8>
   818a4:	0039883a 	mov	fp,zero
   818a8:	003d0806 	br	80ccc <___vfprintf_internal_r+0x6fc>
   818ac:	dc402617 	ldw	r17,152(sp)
   818b0:	0441d30e 	bge	zero,r17,82000 <___vfprintf_internal_r+0x1a30>
   818b4:	dc403217 	ldw	r17,200(sp)
   818b8:	d8803317 	ldw	r2,204(sp)
   818bc:	1440010e 	bge	r2,r17,818c4 <___vfprintf_internal_r+0x12f4>
   818c0:	1023883a 	mov	r17,r2
   818c4:	04400a0e 	bge	zero,r17,818f0 <___vfprintf_internal_r+0x1320>
   818c8:	d8801f17 	ldw	r2,124(sp)
   818cc:	1c47883a 	add	r3,r3,r17
   818d0:	44000015 	stw	r16,0(r8)
   818d4:	10800044 	addi	r2,r2,1
   818d8:	44400115 	stw	r17,4(r8)
   818dc:	d8c02015 	stw	r3,128(sp)
   818e0:	d8801f15 	stw	r2,124(sp)
   818e4:	010001c4 	movi	r4,7
   818e8:	20826516 	blt	r4,r2,82280 <___vfprintf_internal_r+0x1cb0>
   818ec:	42000204 	addi	r8,r8,8
   818f0:	88026116 	blt	r17,zero,82278 <___vfprintf_internal_r+0x1ca8>
   818f4:	d9003217 	ldw	r4,200(sp)
   818f8:	2463c83a 	sub	r17,r4,r17
   818fc:	04407b0e 	bge	zero,r17,81aec <___vfprintf_internal_r+0x151c>
   81900:	05800404 	movi	r22,16
   81904:	d8801f17 	ldw	r2,124(sp)
   81908:	b4419d0e 	bge	r22,r17,81f80 <___vfprintf_internal_r+0x19b0>
   8190c:	01000134 	movhi	r4,4
   81910:	21001d84 	addi	r4,r4,118
   81914:	d9002c15 	stw	r4,176(sp)
   81918:	070001c4 	movi	fp,7
   8191c:	dcc02d17 	ldw	r19,180(sp)
   81920:	00000306 	br	81930 <___vfprintf_internal_r+0x1360>
   81924:	42000204 	addi	r8,r8,8
   81928:	8c7ffc04 	addi	r17,r17,-16
   8192c:	b441970e 	bge	r22,r17,81f8c <___vfprintf_internal_r+0x19bc>
   81930:	18c00404 	addi	r3,r3,16
   81934:	10800044 	addi	r2,r2,1
   81938:	45000015 	stw	r20,0(r8)
   8193c:	45800115 	stw	r22,4(r8)
   81940:	d8c02015 	stw	r3,128(sp)
   81944:	d8801f15 	stw	r2,124(sp)
   81948:	e0bff60e 	bge	fp,r2,81924 <___vfprintf_internal_r+0x1354>
   8194c:	d9801e04 	addi	r6,sp,120
   81950:	b80b883a 	mov	r5,r23
   81954:	9809883a 	mov	r4,r19
   81958:	0087db00 	call	87db0 <__sprint_r>
   8195c:	103c201e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   81960:	d8c02017 	ldw	r3,128(sp)
   81964:	d8801f17 	ldw	r2,124(sp)
   81968:	da000404 	addi	r8,sp,16
   8196c:	003fee06 	br	81928 <___vfprintf_internal_r+0x1358>
   81970:	d9002d17 	ldw	r4,180(sp)
   81974:	d9801e04 	addi	r6,sp,120
   81978:	b80b883a 	mov	r5,r23
   8197c:	0087db00 	call	87db0 <__sprint_r>
   81980:	103c171e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   81984:	d8c02017 	ldw	r3,128(sp)
   81988:	df002787 	ldb	fp,158(sp)
   8198c:	da000404 	addi	r8,sp,16
   81990:	003d3406 	br	80e64 <___vfprintf_internal_r+0x894>
   81994:	9080040c 	andi	r2,r18,16
   81998:	10016126 	beq	r2,zero,81f20 <___vfprintf_internal_r+0x1950>
   8199c:	d9402e17 	ldw	r5,184(sp)
   819a0:	2cc00017 	ldw	r19,0(r5)
   819a4:	29400104 	addi	r5,r5,4
   819a8:	d9402e15 	stw	r5,184(sp)
   819ac:	982dd7fa 	srai	r22,r19,31
   819b0:	b005883a 	mov	r2,r22
   819b4:	003c5a06 	br	80b20 <___vfprintf_internal_r+0x550>
   819b8:	9080040c 	andi	r2,r18,16
   819bc:	10003526 	beq	r2,zero,81a94 <___vfprintf_internal_r+0x14c4>
   819c0:	d8c02e17 	ldw	r3,184(sp)
   819c4:	d9002a17 	ldw	r4,168(sp)
   819c8:	d8002785 	stb	zero,158(sp)
   819cc:	18800104 	addi	r2,r3,4
   819d0:	1cc00017 	ldw	r19,0(r3)
   819d4:	002d883a 	mov	r22,zero
   819d8:	20003716 	blt	r4,zero,81ab8 <___vfprintf_internal_r+0x14e8>
   819dc:	00ffdfc4 	movi	r3,-129
   819e0:	d8802e15 	stw	r2,184(sp)
   819e4:	90e4703a 	and	r18,r18,r3
   819e8:	0039883a 	mov	fp,zero
   819ec:	983dd426 	beq	r19,zero,81140 <___vfprintf_internal_r+0xb70>
   819f0:	00800244 	movi	r2,9
   819f4:	14fc5336 	bltu	r2,r19,80b44 <___vfprintf_internal_r+0x574>
   819f8:	d8c02817 	ldw	r3,160(sp)
   819fc:	dc001dc4 	addi	r16,sp,119
   81a00:	9cc00c04 	addi	r19,r19,48
   81a04:	1c07c83a 	sub	r3,r3,r16
   81a08:	dcc01dc5 	stb	r19,119(sp)
   81a0c:	d8c02b15 	stw	r3,172(sp)
   81a10:	003cc606 	br	80d2c <___vfprintf_internal_r+0x75c>
   81a14:	d8803317 	ldw	r2,204(sp)
   81a18:	143fffc4 	addi	r16,r2,-1
   81a1c:	043f4d0e 	bge	zero,r16,81754 <___vfprintf_internal_r+0x1184>
   81a20:	07000404 	movi	fp,16
   81a24:	e400810e 	bge	fp,r16,81c2c <___vfprintf_internal_r+0x165c>
   81a28:	01400134 	movhi	r5,4
   81a2c:	29401d84 	addi	r5,r5,118
   81a30:	d9402c15 	stw	r5,176(sp)
   81a34:	01c001c4 	movi	r7,7
   81a38:	dcc02d17 	ldw	r19,180(sp)
   81a3c:	00000306 	br	81a4c <___vfprintf_internal_r+0x147c>
   81a40:	b5800204 	addi	r22,r22,8
   81a44:	843ffc04 	addi	r16,r16,-16
   81a48:	e4007b0e 	bge	fp,r16,81c38 <___vfprintf_internal_r+0x1668>
   81a4c:	18c00404 	addi	r3,r3,16
   81a50:	8c400044 	addi	r17,r17,1
   81a54:	b5000015 	stw	r20,0(r22)
   81a58:	b7000115 	stw	fp,4(r22)
   81a5c:	d8c02015 	stw	r3,128(sp)
   81a60:	dc401f15 	stw	r17,124(sp)
   81a64:	3c7ff60e 	bge	r7,r17,81a40 <___vfprintf_internal_r+0x1470>
   81a68:	d9801e04 	addi	r6,sp,120
   81a6c:	b80b883a 	mov	r5,r23
   81a70:	9809883a 	mov	r4,r19
   81a74:	d9c03c15 	stw	r7,240(sp)
   81a78:	0087db00 	call	87db0 <__sprint_r>
   81a7c:	d9c03c17 	ldw	r7,240(sp)
   81a80:	103bd71e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   81a84:	d8c02017 	ldw	r3,128(sp)
   81a88:	dc401f17 	ldw	r17,124(sp)
   81a8c:	dd800404 	addi	r22,sp,16
   81a90:	003fec06 	br	81a44 <___vfprintf_internal_r+0x1474>
   81a94:	9080100c 	andi	r2,r18,64
   81a98:	d8002785 	stb	zero,158(sp)
   81a9c:	10010e26 	beq	r2,zero,81ed8 <___vfprintf_internal_r+0x1908>
   81aa0:	d9402e17 	ldw	r5,184(sp)
   81aa4:	d8c02a17 	ldw	r3,168(sp)
   81aa8:	002d883a 	mov	r22,zero
   81aac:	28800104 	addi	r2,r5,4
   81ab0:	2cc0000b 	ldhu	r19,0(r5)
   81ab4:	183fc90e 	bge	r3,zero,819dc <___vfprintf_internal_r+0x140c>
   81ab8:	d8802e15 	stw	r2,184(sp)
   81abc:	0039883a 	mov	fp,zero
   81ac0:	9d84b03a 	or	r2,r19,r22
   81ac4:	103c1e1e 	bne	r2,zero,80b40 <___vfprintf_internal_r+0x570>
   81ac8:	00800044 	movi	r2,1
   81acc:	003e6c06 	br	81480 <___vfprintf_internal_r+0xeb0>
   81ad0:	d9002d17 	ldw	r4,180(sp)
   81ad4:	d9801e04 	addi	r6,sp,120
   81ad8:	b80b883a 	mov	r5,r23
   81adc:	0087db00 	call	87db0 <__sprint_r>
   81ae0:	103bbf1e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   81ae4:	d8c02017 	ldw	r3,128(sp)
   81ae8:	da000404 	addi	r8,sp,16
   81aec:	d9003217 	ldw	r4,200(sp)
   81af0:	d8802617 	ldw	r2,152(sp)
   81af4:	d9403317 	ldw	r5,204(sp)
   81af8:	8123883a 	add	r17,r16,r4
   81afc:	11400216 	blt	r2,r5,81b08 <___vfprintf_internal_r+0x1538>
   81b00:	9100004c 	andi	r4,r18,1
   81b04:	20000d26 	beq	r4,zero,81b3c <___vfprintf_internal_r+0x156c>
   81b08:	d9003717 	ldw	r4,220(sp)
   81b0c:	d9403417 	ldw	r5,208(sp)
   81b10:	1907883a 	add	r3,r3,r4
   81b14:	d9001f17 	ldw	r4,124(sp)
   81b18:	41400015 	stw	r5,0(r8)
   81b1c:	d9403717 	ldw	r5,220(sp)
   81b20:	21000044 	addi	r4,r4,1
   81b24:	d8c02015 	stw	r3,128(sp)
   81b28:	41400115 	stw	r5,4(r8)
   81b2c:	d9001f15 	stw	r4,124(sp)
   81b30:	014001c4 	movi	r5,7
   81b34:	2901e816 	blt	r5,r4,822d8 <___vfprintf_internal_r+0x1d08>
   81b38:	42000204 	addi	r8,r8,8
   81b3c:	d9003317 	ldw	r4,204(sp)
   81b40:	8121883a 	add	r16,r16,r4
   81b44:	2085c83a 	sub	r2,r4,r2
   81b48:	8461c83a 	sub	r16,r16,r17
   81b4c:	1400010e 	bge	r2,r16,81b54 <___vfprintf_internal_r+0x1584>
   81b50:	1021883a 	mov	r16,r2
   81b54:	04000a0e 	bge	zero,r16,81b80 <___vfprintf_internal_r+0x15b0>
   81b58:	d9001f17 	ldw	r4,124(sp)
   81b5c:	1c07883a 	add	r3,r3,r16
   81b60:	44400015 	stw	r17,0(r8)
   81b64:	21000044 	addi	r4,r4,1
   81b68:	44000115 	stw	r16,4(r8)
   81b6c:	d8c02015 	stw	r3,128(sp)
   81b70:	d9001f15 	stw	r4,124(sp)
   81b74:	014001c4 	movi	r5,7
   81b78:	2901fb16 	blt	r5,r4,82368 <___vfprintf_internal_r+0x1d98>
   81b7c:	42000204 	addi	r8,r8,8
   81b80:	8001f716 	blt	r16,zero,82360 <___vfprintf_internal_r+0x1d90>
   81b84:	1421c83a 	sub	r16,r2,r16
   81b88:	043d160e 	bge	zero,r16,80fe4 <___vfprintf_internal_r+0xa14>
   81b8c:	04400404 	movi	r17,16
   81b90:	d8801f17 	ldw	r2,124(sp)
   81b94:	8c3efb0e 	bge	r17,r16,81784 <___vfprintf_internal_r+0x11b4>
   81b98:	01400134 	movhi	r5,4
   81b9c:	29401d84 	addi	r5,r5,118
   81ba0:	d9402c15 	stw	r5,176(sp)
   81ba4:	058001c4 	movi	r22,7
   81ba8:	dcc02d17 	ldw	r19,180(sp)
   81bac:	00000306 	br	81bbc <___vfprintf_internal_r+0x15ec>
   81bb0:	42000204 	addi	r8,r8,8
   81bb4:	843ffc04 	addi	r16,r16,-16
   81bb8:	8c3ef50e 	bge	r17,r16,81790 <___vfprintf_internal_r+0x11c0>
   81bbc:	18c00404 	addi	r3,r3,16
   81bc0:	10800044 	addi	r2,r2,1
   81bc4:	45000015 	stw	r20,0(r8)
   81bc8:	44400115 	stw	r17,4(r8)
   81bcc:	d8c02015 	stw	r3,128(sp)
   81bd0:	d8801f15 	stw	r2,124(sp)
   81bd4:	b0bff60e 	bge	r22,r2,81bb0 <___vfprintf_internal_r+0x15e0>
   81bd8:	d9801e04 	addi	r6,sp,120
   81bdc:	b80b883a 	mov	r5,r23
   81be0:	9809883a 	mov	r4,r19
   81be4:	0087db00 	call	87db0 <__sprint_r>
   81be8:	103b7d1e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   81bec:	d8c02017 	ldw	r3,128(sp)
   81bf0:	d8801f17 	ldw	r2,124(sp)
   81bf4:	da000404 	addi	r8,sp,16
   81bf8:	003fee06 	br	81bb4 <___vfprintf_internal_r+0x15e4>
   81bfc:	9088703a 	and	r4,r18,r2
   81c00:	203eab1e 	bne	r4,zero,816b0 <___vfprintf_internal_r+0x10e0>
   81c04:	dc401f17 	ldw	r17,124(sp)
   81c08:	40800115 	stw	r2,4(r8)
   81c0c:	44000015 	stw	r16,0(r8)
   81c10:	8c400044 	addi	r17,r17,1
   81c14:	d8c02015 	stw	r3,128(sp)
   81c18:	dc401f15 	stw	r17,124(sp)
   81c1c:	008001c4 	movi	r2,7
   81c20:	14400e16 	blt	r2,r17,81c5c <___vfprintf_internal_r+0x168c>
   81c24:	45800204 	addi	r22,r8,8
   81c28:	003eca06 	br	81754 <___vfprintf_internal_r+0x1184>
   81c2c:	01000134 	movhi	r4,4
   81c30:	21001d84 	addi	r4,r4,118
   81c34:	d9002c15 	stw	r4,176(sp)
   81c38:	d8802c17 	ldw	r2,176(sp)
   81c3c:	1c07883a 	add	r3,r3,r16
   81c40:	8c400044 	addi	r17,r17,1
   81c44:	b0800015 	stw	r2,0(r22)
   81c48:	b4000115 	stw	r16,4(r22)
   81c4c:	d8c02015 	stw	r3,128(sp)
   81c50:	dc401f15 	stw	r17,124(sp)
   81c54:	008001c4 	movi	r2,7
   81c58:	147ebd0e 	bge	r2,r17,81750 <___vfprintf_internal_r+0x1180>
   81c5c:	d9002d17 	ldw	r4,180(sp)
   81c60:	d9801e04 	addi	r6,sp,120
   81c64:	b80b883a 	mov	r5,r23
   81c68:	0087db00 	call	87db0 <__sprint_r>
   81c6c:	103b5c1e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   81c70:	d8c02017 	ldw	r3,128(sp)
   81c74:	dc401f17 	ldw	r17,124(sp)
   81c78:	dd800404 	addi	r22,sp,16
   81c7c:	003eb506 	br	81754 <___vfprintf_internal_r+0x1184>
   81c80:	d9002d17 	ldw	r4,180(sp)
   81c84:	d9801e04 	addi	r6,sp,120
   81c88:	b80b883a 	mov	r5,r23
   81c8c:	0087db00 	call	87db0 <__sprint_r>
   81c90:	103b531e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   81c94:	d8c02017 	ldw	r3,128(sp)
   81c98:	dc401f17 	ldw	r17,124(sp)
   81c9c:	da000404 	addi	r8,sp,16
   81ca0:	003e8d06 	br	816d8 <___vfprintf_internal_r+0x1108>
   81ca4:	d9002d17 	ldw	r4,180(sp)
   81ca8:	d9801e04 	addi	r6,sp,120
   81cac:	b80b883a 	mov	r5,r23
   81cb0:	0087db00 	call	87db0 <__sprint_r>
   81cb4:	103b4a1e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   81cb8:	d8c02017 	ldw	r3,128(sp)
   81cbc:	dc401f17 	ldw	r17,124(sp)
   81cc0:	dd800404 	addi	r22,sp,16
   81cc4:	003e8f06 	br	81704 <___vfprintf_internal_r+0x1134>
   81cc8:	0027883a 	mov	r19,zero
   81ccc:	003f4a06 	br	819f8 <___vfprintf_internal_r+0x1428>
   81cd0:	d9002d17 	ldw	r4,180(sp)
   81cd4:	d9801e04 	addi	r6,sp,120
   81cd8:	b80b883a 	mov	r5,r23
   81cdc:	0087db00 	call	87db0 <__sprint_r>
   81ce0:	103b3f1e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   81ce4:	d8c02017 	ldw	r3,128(sp)
   81ce8:	da000404 	addi	r8,sp,16
   81cec:	003c7b06 	br	80edc <___vfprintf_internal_r+0x90c>
   81cf0:	d9402a17 	ldw	r5,168(sp)
   81cf4:	04e7c83a 	sub	r19,zero,r19
   81cf8:	07000b44 	movi	fp,45
   81cfc:	9804c03a 	cmpne	r2,r19,zero
   81d00:	05adc83a 	sub	r22,zero,r22
   81d04:	df002785 	stb	fp,158(sp)
   81d08:	b0adc83a 	sub	r22,r22,r2
   81d0c:	28017b16 	blt	r5,zero,822fc <___vfprintf_internal_r+0x1d2c>
   81d10:	00bfdfc4 	movi	r2,-129
   81d14:	90a4703a 	and	r18,r18,r2
   81d18:	003b8906 	br	80b40 <___vfprintf_internal_r+0x570>
   81d1c:	d9003617 	ldw	r4,216(sp)
   81d20:	d9403817 	ldw	r5,224(sp)
   81d24:	da003d15 	stw	r8,244(sp)
   81d28:	00879d40 	call	879d4 <__fpclassifyd>
   81d2c:	da003d17 	ldw	r8,244(sp)
   81d30:	1000f026 	beq	r2,zero,820f4 <___vfprintf_internal_r+0x1b24>
   81d34:	d9002a17 	ldw	r4,168(sp)
   81d38:	05bff7c4 	movi	r22,-33
   81d3c:	00bfffc4 	movi	r2,-1
   81d40:	8dac703a 	and	r22,r17,r22
   81d44:	20820026 	beq	r4,r2,82548 <___vfprintf_internal_r+0x1f78>
   81d48:	008011c4 	movi	r2,71
   81d4c:	b081f726 	beq	r22,r2,8252c <___vfprintf_internal_r+0x1f5c>
   81d50:	d9003817 	ldw	r4,224(sp)
   81d54:	90c04014 	ori	r3,r18,256
   81d58:	d8c02c15 	stw	r3,176(sp)
   81d5c:	20021516 	blt	r4,zero,825b4 <___vfprintf_internal_r+0x1fe4>
   81d60:	dcc03817 	ldw	r19,224(sp)
   81d64:	d8002905 	stb	zero,164(sp)
   81d68:	00801984 	movi	r2,102
   81d6c:	8881f926 	beq	r17,r2,82554 <___vfprintf_internal_r+0x1f84>
   81d70:	00801184 	movi	r2,70
   81d74:	88821c26 	beq	r17,r2,825e8 <___vfprintf_internal_r+0x2018>
   81d78:	00801144 	movi	r2,69
   81d7c:	b081ef26 	beq	r22,r2,8253c <___vfprintf_internal_r+0x1f6c>
   81d80:	d8c02a17 	ldw	r3,168(sp)
   81d84:	d8802104 	addi	r2,sp,132
   81d88:	d8800315 	stw	r2,12(sp)
   81d8c:	d9403617 	ldw	r5,216(sp)
   81d90:	d8802504 	addi	r2,sp,148
   81d94:	d9002d17 	ldw	r4,180(sp)
   81d98:	d8800215 	stw	r2,8(sp)
   81d9c:	d8802604 	addi	r2,sp,152
   81da0:	d8c00015 	stw	r3,0(sp)
   81da4:	d8800115 	stw	r2,4(sp)
   81da8:	01c00084 	movi	r7,2
   81dac:	980d883a 	mov	r6,r19
   81db0:	d8c03c15 	stw	r3,240(sp)
   81db4:	da003d15 	stw	r8,244(sp)
   81db8:	0082d000 	call	82d00 <_dtoa_r>
   81dbc:	1021883a 	mov	r16,r2
   81dc0:	008019c4 	movi	r2,103
   81dc4:	d8c03c17 	ldw	r3,240(sp)
   81dc8:	da003d17 	ldw	r8,244(sp)
   81dcc:	88817126 	beq	r17,r2,82394 <___vfprintf_internal_r+0x1dc4>
   81dd0:	008011c4 	movi	r2,71
   81dd4:	88829126 	beq	r17,r2,8281c <___vfprintf_internal_r+0x224c>
   81dd8:	80f9883a 	add	fp,r16,r3
   81ddc:	d9003617 	ldw	r4,216(sp)
   81de0:	000d883a 	mov	r6,zero
   81de4:	000f883a 	mov	r7,zero
   81de8:	980b883a 	mov	r5,r19
   81dec:	da003d15 	stw	r8,244(sp)
   81df0:	008bd100 	call	8bd10 <__eqdf2>
   81df4:	da003d17 	ldw	r8,244(sp)
   81df8:	10018d26 	beq	r2,zero,82430 <___vfprintf_internal_r+0x1e60>
   81dfc:	d8802117 	ldw	r2,132(sp)
   81e00:	1700062e 	bgeu	r2,fp,81e1c <___vfprintf_internal_r+0x184c>
   81e04:	01000c04 	movi	r4,48
   81e08:	10c00044 	addi	r3,r2,1
   81e0c:	d8c02115 	stw	r3,132(sp)
   81e10:	11000005 	stb	r4,0(r2)
   81e14:	d8802117 	ldw	r2,132(sp)
   81e18:	173ffb36 	bltu	r2,fp,81e08 <___vfprintf_internal_r+0x1838>
   81e1c:	1405c83a 	sub	r2,r2,r16
   81e20:	d8803315 	stw	r2,204(sp)
   81e24:	008011c4 	movi	r2,71
   81e28:	b0817626 	beq	r22,r2,82404 <___vfprintf_internal_r+0x1e34>
   81e2c:	00801944 	movi	r2,101
   81e30:	1442800e 	bge	r2,r17,82834 <___vfprintf_internal_r+0x2264>
   81e34:	d8c02617 	ldw	r3,152(sp)
   81e38:	00801984 	movi	r2,102
   81e3c:	d8c03215 	stw	r3,200(sp)
   81e40:	8881fe26 	beq	r17,r2,8263c <___vfprintf_internal_r+0x206c>
   81e44:	d8c03217 	ldw	r3,200(sp)
   81e48:	d9003317 	ldw	r4,204(sp)
   81e4c:	1901dd16 	blt	r3,r4,825c4 <___vfprintf_internal_r+0x1ff4>
   81e50:	9480004c 	andi	r18,r18,1
   81e54:	90022b1e 	bne	r18,zero,82704 <___vfprintf_internal_r+0x2134>
   81e58:	1805883a 	mov	r2,r3
   81e5c:	18028316 	blt	r3,zero,8286c <___vfprintf_internal_r+0x229c>
   81e60:	d8c03217 	ldw	r3,200(sp)
   81e64:	044019c4 	movi	r17,103
   81e68:	d8c02b15 	stw	r3,172(sp)
   81e6c:	df002907 	ldb	fp,164(sp)
   81e70:	e001531e 	bne	fp,zero,823c0 <___vfprintf_internal_r+0x1df0>
   81e74:	df002783 	ldbu	fp,158(sp)
   81e78:	d8802915 	stw	r2,164(sp)
   81e7c:	dc802c17 	ldw	r18,176(sp)
   81e80:	d8002a15 	stw	zero,168(sp)
   81e84:	003baf06 	br	80d44 <___vfprintf_internal_r+0x774>
   81e88:	d8c02e17 	ldw	r3,184(sp)
   81e8c:	d9002e17 	ldw	r4,184(sp)
   81e90:	d9402e17 	ldw	r5,184(sp)
   81e94:	18c00017 	ldw	r3,0(r3)
   81e98:	21000117 	ldw	r4,4(r4)
   81e9c:	29400204 	addi	r5,r5,8
   81ea0:	d8c03615 	stw	r3,216(sp)
   81ea4:	d9003815 	stw	r4,224(sp)
   81ea8:	d9402e15 	stw	r5,184(sp)
   81eac:	003b5006 	br	80bf0 <___vfprintf_internal_r+0x620>
   81eb0:	ac400007 	ldb	r17,0(r21)
   81eb4:	003a2806 	br	80758 <___vfprintf_internal_r+0x188>
   81eb8:	9080100c 	andi	r2,r18,64
   81ebc:	1000a826 	beq	r2,zero,82160 <___vfprintf_internal_r+0x1b90>
   81ec0:	d8c02e17 	ldw	r3,184(sp)
   81ec4:	002d883a 	mov	r22,zero
   81ec8:	1cc0000b 	ldhu	r19,0(r3)
   81ecc:	18c00104 	addi	r3,r3,4
   81ed0:	d8c02e15 	stw	r3,184(sp)
   81ed4:	003caf06 	br	81194 <___vfprintf_internal_r+0xbc4>
   81ed8:	d9002e17 	ldw	r4,184(sp)
   81edc:	d9402a17 	ldw	r5,168(sp)
   81ee0:	002d883a 	mov	r22,zero
   81ee4:	20800104 	addi	r2,r4,4
   81ee8:	24c00017 	ldw	r19,0(r4)
   81eec:	283ebb0e 	bge	r5,zero,819dc <___vfprintf_internal_r+0x140c>
   81ef0:	003ef106 	br	81ab8 <___vfprintf_internal_r+0x14e8>
   81ef4:	9080040c 	andi	r2,r18,16
   81ef8:	1000921e 	bne	r2,zero,82144 <___vfprintf_internal_r+0x1b74>
   81efc:	9480100c 	andi	r18,r18,64
   81f00:	90013926 	beq	r18,zero,823e8 <___vfprintf_internal_r+0x1e18>
   81f04:	d9402e17 	ldw	r5,184(sp)
   81f08:	d8c02f17 	ldw	r3,188(sp)
   81f0c:	28800017 	ldw	r2,0(r5)
   81f10:	29400104 	addi	r5,r5,4
   81f14:	d9402e15 	stw	r5,184(sp)
   81f18:	10c0000d 	sth	r3,0(r2)
   81f1c:	0039e406 	br	806b0 <___vfprintf_internal_r+0xe0>
   81f20:	9080100c 	andi	r2,r18,64
   81f24:	10008026 	beq	r2,zero,82128 <___vfprintf_internal_r+0x1b58>
   81f28:	d8802e17 	ldw	r2,184(sp)
   81f2c:	14c0000f 	ldh	r19,0(r2)
   81f30:	10800104 	addi	r2,r2,4
   81f34:	d8802e15 	stw	r2,184(sp)
   81f38:	982dd7fa 	srai	r22,r19,31
   81f3c:	b005883a 	mov	r2,r22
   81f40:	003af706 	br	80b20 <___vfprintf_internal_r+0x550>
   81f44:	9080100c 	andi	r2,r18,64
   81f48:	d8002785 	stb	zero,158(sp)
   81f4c:	10008a1e 	bne	r2,zero,82178 <___vfprintf_internal_r+0x1ba8>
   81f50:	d9002e17 	ldw	r4,184(sp)
   81f54:	d9402a17 	ldw	r5,168(sp)
   81f58:	002d883a 	mov	r22,zero
   81f5c:	20800104 	addi	r2,r4,4
   81f60:	24c00017 	ldw	r19,0(r4)
   81f64:	283e4b0e 	bge	r5,zero,81894 <___vfprintf_internal_r+0x12c4>
   81f68:	9d86b03a 	or	r3,r19,r22
   81f6c:	d8802e15 	stw	r2,184(sp)
   81f70:	183e4c1e 	bne	r3,zero,818a4 <___vfprintf_internal_r+0x12d4>
   81f74:	0039883a 	mov	fp,zero
   81f78:	0005883a 	mov	r2,zero
   81f7c:	003d4006 	br	81480 <___vfprintf_internal_r+0xeb0>
   81f80:	01400134 	movhi	r5,4
   81f84:	29401d84 	addi	r5,r5,118
   81f88:	d9402c15 	stw	r5,176(sp)
   81f8c:	d9402c17 	ldw	r5,176(sp)
   81f90:	1c47883a 	add	r3,r3,r17
   81f94:	10800044 	addi	r2,r2,1
   81f98:	41400015 	stw	r5,0(r8)
   81f9c:	44400115 	stw	r17,4(r8)
   81fa0:	d8c02015 	stw	r3,128(sp)
   81fa4:	d8801f15 	stw	r2,124(sp)
   81fa8:	010001c4 	movi	r4,7
   81fac:	20bec816 	blt	r4,r2,81ad0 <___vfprintf_internal_r+0x1500>
   81fb0:	42000204 	addi	r8,r8,8
   81fb4:	003ecd06 	br	81aec <___vfprintf_internal_r+0x151c>
   81fb8:	d9002a17 	ldw	r4,168(sp)
   81fbc:	d8002785 	stb	zero,158(sp)
   81fc0:	203d2d16 	blt	r4,zero,81478 <___vfprintf_internal_r+0xea8>
   81fc4:	00bfdfc4 	movi	r2,-129
   81fc8:	90a4703a 	and	r18,r18,r2
   81fcc:	003a6106 	br	80954 <___vfprintf_internal_r+0x384>
   81fd0:	01000134 	movhi	r4,4
   81fd4:	21001d84 	addi	r4,r4,118
   81fd8:	d9002c15 	stw	r4,176(sp)
   81fdc:	003bea06 	br	80f88 <___vfprintf_internal_r+0x9b8>
   81fe0:	d9002d17 	ldw	r4,180(sp)
   81fe4:	d9801e04 	addi	r6,sp,120
   81fe8:	b80b883a 	mov	r5,r23
   81fec:	0087db00 	call	87db0 <__sprint_r>
   81ff0:	103a7b1e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   81ff4:	d8c02017 	ldw	r3,128(sp)
   81ff8:	da000404 	addi	r8,sp,16
   81ffc:	003d4106 	br	81504 <___vfprintf_internal_r+0xf34>
   82000:	d8801f17 	ldw	r2,124(sp)
   82004:	01400134 	movhi	r5,4
   82008:	01000044 	movi	r4,1
   8200c:	18c00044 	addi	r3,r3,1
   82010:	10800044 	addi	r2,r2,1
   82014:	29401d04 	addi	r5,r5,116
   82018:	41000115 	stw	r4,4(r8)
   8201c:	41400015 	stw	r5,0(r8)
   82020:	d8c02015 	stw	r3,128(sp)
   82024:	d8801f15 	stw	r2,124(sp)
   82028:	010001c4 	movi	r4,7
   8202c:	20805c16 	blt	r4,r2,821a0 <___vfprintf_internal_r+0x1bd0>
   82030:	42000204 	addi	r8,r8,8
   82034:	8800041e 	bne	r17,zero,82048 <___vfprintf_internal_r+0x1a78>
   82038:	d8803317 	ldw	r2,204(sp)
   8203c:	1000021e 	bne	r2,zero,82048 <___vfprintf_internal_r+0x1a78>
   82040:	9080004c 	andi	r2,r18,1
   82044:	103be726 	beq	r2,zero,80fe4 <___vfprintf_internal_r+0xa14>
   82048:	d9003717 	ldw	r4,220(sp)
   8204c:	d8801f17 	ldw	r2,124(sp)
   82050:	d9403417 	ldw	r5,208(sp)
   82054:	20c7883a 	add	r3,r4,r3
   82058:	10800044 	addi	r2,r2,1
   8205c:	41000115 	stw	r4,4(r8)
   82060:	41400015 	stw	r5,0(r8)
   82064:	d8c02015 	stw	r3,128(sp)
   82068:	d8801f15 	stw	r2,124(sp)
   8206c:	010001c4 	movi	r4,7
   82070:	20812116 	blt	r4,r2,824f8 <___vfprintf_internal_r+0x1f28>
   82074:	42000204 	addi	r8,r8,8
   82078:	0463c83a 	sub	r17,zero,r17
   8207c:	0440730e 	bge	zero,r17,8224c <___vfprintf_internal_r+0x1c7c>
   82080:	05800404 	movi	r22,16
   82084:	b440860e 	bge	r22,r17,822a0 <___vfprintf_internal_r+0x1cd0>
   82088:	01400134 	movhi	r5,4
   8208c:	29401d84 	addi	r5,r5,118
   82090:	d9402c15 	stw	r5,176(sp)
   82094:	070001c4 	movi	fp,7
   82098:	dcc02d17 	ldw	r19,180(sp)
   8209c:	00000306 	br	820ac <___vfprintf_internal_r+0x1adc>
   820a0:	42000204 	addi	r8,r8,8
   820a4:	8c7ffc04 	addi	r17,r17,-16
   820a8:	b440800e 	bge	r22,r17,822ac <___vfprintf_internal_r+0x1cdc>
   820ac:	18c00404 	addi	r3,r3,16
   820b0:	10800044 	addi	r2,r2,1
   820b4:	45000015 	stw	r20,0(r8)
   820b8:	45800115 	stw	r22,4(r8)
   820bc:	d8c02015 	stw	r3,128(sp)
   820c0:	d8801f15 	stw	r2,124(sp)
   820c4:	e0bff60e 	bge	fp,r2,820a0 <___vfprintf_internal_r+0x1ad0>
   820c8:	d9801e04 	addi	r6,sp,120
   820cc:	b80b883a 	mov	r5,r23
   820d0:	9809883a 	mov	r4,r19
   820d4:	0087db00 	call	87db0 <__sprint_r>
   820d8:	103a411e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   820dc:	d8c02017 	ldw	r3,128(sp)
   820e0:	d8801f17 	ldw	r2,124(sp)
   820e4:	da000404 	addi	r8,sp,16
   820e8:	003fee06 	br	820a4 <___vfprintf_internal_r+0x1ad4>
   820ec:	00bfffc4 	movi	r2,-1
   820f0:	003a3f06 	br	809f0 <___vfprintf_internal_r+0x420>
   820f4:	008011c4 	movi	r2,71
   820f8:	1440b816 	blt	r2,r17,823dc <___vfprintf_internal_r+0x1e0c>
   820fc:	04000134 	movhi	r16,4
   82100:	84000f04 	addi	r16,r16,60
   82104:	00c000c4 	movi	r3,3
   82108:	00bfdfc4 	movi	r2,-129
   8210c:	d8c02915 	stw	r3,164(sp)
   82110:	90a4703a 	and	r18,r18,r2
   82114:	df002783 	ldbu	fp,158(sp)
   82118:	d8c02b15 	stw	r3,172(sp)
   8211c:	d8002a15 	stw	zero,168(sp)
   82120:	d8003215 	stw	zero,200(sp)
   82124:	003b0706 	br	80d44 <___vfprintf_internal_r+0x774>
   82128:	d8c02e17 	ldw	r3,184(sp)
   8212c:	1cc00017 	ldw	r19,0(r3)
   82130:	18c00104 	addi	r3,r3,4
   82134:	d8c02e15 	stw	r3,184(sp)
   82138:	982dd7fa 	srai	r22,r19,31
   8213c:	b005883a 	mov	r2,r22
   82140:	003a7706 	br	80b20 <___vfprintf_internal_r+0x550>
   82144:	d8c02e17 	ldw	r3,184(sp)
   82148:	d9002f17 	ldw	r4,188(sp)
   8214c:	18800017 	ldw	r2,0(r3)
   82150:	18c00104 	addi	r3,r3,4
   82154:	d8c02e15 	stw	r3,184(sp)
   82158:	11000015 	stw	r4,0(r2)
   8215c:	00395406 	br	806b0 <___vfprintf_internal_r+0xe0>
   82160:	d9002e17 	ldw	r4,184(sp)
   82164:	002d883a 	mov	r22,zero
   82168:	24c00017 	ldw	r19,0(r4)
   8216c:	21000104 	addi	r4,r4,4
   82170:	d9002e15 	stw	r4,184(sp)
   82174:	003c0706 	br	81194 <___vfprintf_internal_r+0xbc4>
   82178:	d9402e17 	ldw	r5,184(sp)
   8217c:	d8c02a17 	ldw	r3,168(sp)
   82180:	002d883a 	mov	r22,zero
   82184:	28800104 	addi	r2,r5,4
   82188:	2cc0000b 	ldhu	r19,0(r5)
   8218c:	183dc10e 	bge	r3,zero,81894 <___vfprintf_internal_r+0x12c4>
   82190:	003f7506 	br	81f68 <___vfprintf_internal_r+0x1998>
   82194:	04000134 	movhi	r16,4
   82198:	84000d04 	addi	r16,r16,52
   8219c:	003aa706 	br	80c3c <___vfprintf_internal_r+0x66c>
   821a0:	d9002d17 	ldw	r4,180(sp)
   821a4:	d9801e04 	addi	r6,sp,120
   821a8:	b80b883a 	mov	r5,r23
   821ac:	0087db00 	call	87db0 <__sprint_r>
   821b0:	103a0b1e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   821b4:	dc402617 	ldw	r17,152(sp)
   821b8:	d8c02017 	ldw	r3,128(sp)
   821bc:	da000404 	addi	r8,sp,16
   821c0:	003f9c06 	br	82034 <___vfprintf_internal_r+0x1a64>
   821c4:	ac400043 	ldbu	r17,1(r21)
   821c8:	84000814 	ori	r16,r16,32
   821cc:	ad400044 	addi	r21,r21,1
   821d0:	8c403fcc 	andi	r17,r17,255
   821d4:	8c40201c 	xori	r17,r17,128
   821d8:	8c7fe004 	addi	r17,r17,-128
   821dc:	00395e06 	br	80758 <___vfprintf_internal_r+0x188>
   821e0:	d8c02e15 	stw	r3,184(sp)
   821e4:	0039883a 	mov	fp,zero
   821e8:	003e3506 	br	81ac0 <___vfprintf_internal_r+0x14f0>
   821ec:	d9002d17 	ldw	r4,180(sp)
   821f0:	d9801e04 	addi	r6,sp,120
   821f4:	b80b883a 	mov	r5,r23
   821f8:	0087db00 	call	87db0 <__sprint_r>
   821fc:	1039f81e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   82200:	d8c02017 	ldw	r3,128(sp)
   82204:	da000404 	addi	r8,sp,16
   82208:	003cd006 	br	8154c <___vfprintf_internal_r+0xf7c>
   8220c:	8009883a 	mov	r4,r16
   82210:	df003d15 	stw	fp,244(sp)
   82214:	00805380 	call	80538 <strlen>
   82218:	d8802b15 	stw	r2,172(sp)
   8221c:	da003d17 	ldw	r8,244(sp)
   82220:	103c200e 	bge	r2,zero,812a4 <___vfprintf_internal_r+0xcd4>
   82224:	0005883a 	mov	r2,zero
   82228:	003c1e06 	br	812a4 <___vfprintf_internal_r+0xcd4>
   8222c:	d9002d17 	ldw	r4,180(sp)
   82230:	d9801e04 	addi	r6,sp,120
   82234:	b80b883a 	mov	r5,r23
   82238:	0087db00 	call	87db0 <__sprint_r>
   8223c:	1039e81e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   82240:	d8c02017 	ldw	r3,128(sp)
   82244:	d8801f17 	ldw	r2,124(sp)
   82248:	da000404 	addi	r8,sp,16
   8224c:	d9403317 	ldw	r5,204(sp)
   82250:	10800044 	addi	r2,r2,1
   82254:	44000015 	stw	r16,0(r8)
   82258:	28c7883a 	add	r3,r5,r3
   8225c:	003b5b06 	br	80fcc <___vfprintf_internal_r+0x9fc>
   82260:	01000134 	movhi	r4,4
   82264:	21002184 	addi	r4,r4,134
   82268:	d9003515 	stw	r4,212(sp)
   8226c:	003af206 	br	80e38 <___vfprintf_internal_r+0x868>
   82270:	013fffc4 	movi	r4,-1
   82274:	003a0806 	br	80a98 <___vfprintf_internal_r+0x4c8>
   82278:	0023883a 	mov	r17,zero
   8227c:	003d9d06 	br	818f4 <___vfprintf_internal_r+0x1324>
   82280:	d9002d17 	ldw	r4,180(sp)
   82284:	d9801e04 	addi	r6,sp,120
   82288:	b80b883a 	mov	r5,r23
   8228c:	0087db00 	call	87db0 <__sprint_r>
   82290:	1039d31e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   82294:	d8c02017 	ldw	r3,128(sp)
   82298:	da000404 	addi	r8,sp,16
   8229c:	003d9406 	br	818f0 <___vfprintf_internal_r+0x1320>
   822a0:	01000134 	movhi	r4,4
   822a4:	21001d84 	addi	r4,r4,118
   822a8:	d9002c15 	stw	r4,176(sp)
   822ac:	d9002c17 	ldw	r4,176(sp)
   822b0:	1c47883a 	add	r3,r3,r17
   822b4:	10800044 	addi	r2,r2,1
   822b8:	41000015 	stw	r4,0(r8)
   822bc:	44400115 	stw	r17,4(r8)
   822c0:	d8c02015 	stw	r3,128(sp)
   822c4:	d8801f15 	stw	r2,124(sp)
   822c8:	010001c4 	movi	r4,7
   822cc:	20bfd716 	blt	r4,r2,8222c <___vfprintf_internal_r+0x1c5c>
   822d0:	42000204 	addi	r8,r8,8
   822d4:	003fdd06 	br	8224c <___vfprintf_internal_r+0x1c7c>
   822d8:	d9002d17 	ldw	r4,180(sp)
   822dc:	d9801e04 	addi	r6,sp,120
   822e0:	b80b883a 	mov	r5,r23
   822e4:	0087db00 	call	87db0 <__sprint_r>
   822e8:	1039bd1e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   822ec:	d8802617 	ldw	r2,152(sp)
   822f0:	d8c02017 	ldw	r3,128(sp)
   822f4:	da000404 	addi	r8,sp,16
   822f8:	003e1006 	br	81b3c <___vfprintf_internal_r+0x156c>
   822fc:	00800044 	movi	r2,1
   82300:	10803fcc 	andi	r2,r2,255
   82304:	00c00044 	movi	r3,1
   82308:	10fa0d26 	beq	r2,r3,80b40 <___vfprintf_internal_r+0x570>
   8230c:	00c00084 	movi	r3,2
   82310:	10fbaf26 	beq	r2,r3,811d0 <___vfprintf_internal_r+0xc00>
   82314:	003a6d06 	br	80ccc <___vfprintf_internal_r+0x6fc>
   82318:	01000134 	movhi	r4,4
   8231c:	21002184 	addi	r4,r4,134
   82320:	d9003515 	stw	r4,212(sp)
   82324:	003b5406 	br	81078 <___vfprintf_internal_r+0xaa8>
   82328:	d8802a17 	ldw	r2,168(sp)
   8232c:	00c00184 	movi	r3,6
   82330:	1880012e 	bgeu	r3,r2,82338 <___vfprintf_internal_r+0x1d68>
   82334:	1805883a 	mov	r2,r3
   82338:	d8802b15 	stw	r2,172(sp)
   8233c:	1000ef16 	blt	r2,zero,826fc <___vfprintf_internal_r+0x212c>
   82340:	04000134 	movhi	r16,4
   82344:	d8802915 	stw	r2,164(sp)
   82348:	dcc02e15 	stw	r19,184(sp)
   8234c:	d8002a15 	stw	zero,168(sp)
   82350:	d8003215 	stw	zero,200(sp)
   82354:	84001b04 	addi	r16,r16,108
   82358:	0039883a 	mov	fp,zero
   8235c:	003a8006 	br	80d60 <___vfprintf_internal_r+0x790>
   82360:	0021883a 	mov	r16,zero
   82364:	003e0706 	br	81b84 <___vfprintf_internal_r+0x15b4>
   82368:	d9002d17 	ldw	r4,180(sp)
   8236c:	d9801e04 	addi	r6,sp,120
   82370:	b80b883a 	mov	r5,r23
   82374:	0087db00 	call	87db0 <__sprint_r>
   82378:	1039991e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   8237c:	d8802617 	ldw	r2,152(sp)
   82380:	d9403317 	ldw	r5,204(sp)
   82384:	d8c02017 	ldw	r3,128(sp)
   82388:	da000404 	addi	r8,sp,16
   8238c:	2885c83a 	sub	r2,r5,r2
   82390:	003dfb06 	br	81b80 <___vfprintf_internal_r+0x15b0>
   82394:	9080004c 	andi	r2,r18,1
   82398:	103e8f1e 	bne	r2,zero,81dd8 <___vfprintf_internal_r+0x1808>
   8239c:	d8802117 	ldw	r2,132(sp)
   823a0:	003e9e06 	br	81e1c <___vfprintf_internal_r+0x184c>
   823a4:	1025883a 	mov	r18,r2
   823a8:	0039883a 	mov	fp,zero
   823ac:	00800084 	movi	r2,2
   823b0:	003fd306 	br	82300 <___vfprintf_internal_r+0x1d30>
   823b4:	07000b44 	movi	fp,45
   823b8:	df002785 	stb	fp,158(sp)
   823bc:	003a1b06 	br	80c2c <___vfprintf_internal_r+0x65c>
   823c0:	00c00b44 	movi	r3,45
   823c4:	d8c02785 	stb	r3,158(sp)
   823c8:	d8802915 	stw	r2,164(sp)
   823cc:	dc802c17 	ldw	r18,176(sp)
   823d0:	d8002a15 	stw	zero,168(sp)
   823d4:	07000b44 	movi	fp,45
   823d8:	003a5e06 	br	80d54 <___vfprintf_internal_r+0x784>
   823dc:	04000134 	movhi	r16,4
   823e0:	84001004 	addi	r16,r16,64
   823e4:	003f4706 	br	82104 <___vfprintf_internal_r+0x1b34>
   823e8:	d9002e17 	ldw	r4,184(sp)
   823ec:	d9402f17 	ldw	r5,188(sp)
   823f0:	20800017 	ldw	r2,0(r4)
   823f4:	21000104 	addi	r4,r4,4
   823f8:	d9002e15 	stw	r4,184(sp)
   823fc:	11400015 	stw	r5,0(r2)
   82400:	0038ab06 	br	806b0 <___vfprintf_internal_r+0xe0>
   82404:	dd802617 	ldw	r22,152(sp)
   82408:	00bfff44 	movi	r2,-3
   8240c:	b0801c16 	blt	r22,r2,82480 <___vfprintf_internal_r+0x1eb0>
   82410:	d9402a17 	ldw	r5,168(sp)
   82414:	2d801a16 	blt	r5,r22,82480 <___vfprintf_internal_r+0x1eb0>
   82418:	dd803215 	stw	r22,200(sp)
   8241c:	003e8906 	br	81e44 <___vfprintf_internal_r+0x1874>
   82420:	01000134 	movhi	r4,4
   82424:	21001d84 	addi	r4,r4,118
   82428:	d9002c15 	stw	r4,176(sp)
   8242c:	003c9106 	br	81674 <___vfprintf_internal_r+0x10a4>
   82430:	e005883a 	mov	r2,fp
   82434:	003e7906 	br	81e1c <___vfprintf_internal_r+0x184c>
   82438:	d9002a17 	ldw	r4,168(sp)
   8243c:	df002783 	ldbu	fp,158(sp)
   82440:	dcc02e15 	stw	r19,184(sp)
   82444:	d9002915 	stw	r4,164(sp)
   82448:	d9002b15 	stw	r4,172(sp)
   8244c:	d8002a15 	stw	zero,168(sp)
   82450:	d8003215 	stw	zero,200(sp)
   82454:	003a3b06 	br	80d44 <___vfprintf_internal_r+0x774>
   82458:	9080004c 	andi	r2,r18,1
   8245c:	0039883a 	mov	fp,zero
   82460:	10000426 	beq	r2,zero,82474 <___vfprintf_internal_r+0x1ea4>
   82464:	00800c04 	movi	r2,48
   82468:	dc001dc4 	addi	r16,sp,119
   8246c:	d8801dc5 	stb	r2,119(sp)
   82470:	003b6406 	br	81204 <___vfprintf_internal_r+0xc34>
   82474:	d8002b15 	stw	zero,172(sp)
   82478:	dc001e04 	addi	r16,sp,120
   8247c:	003a2b06 	br	80d2c <___vfprintf_internal_r+0x75c>
   82480:	8c7fff84 	addi	r17,r17,-2
   82484:	b5bfffc4 	addi	r22,r22,-1
   82488:	dd802615 	stw	r22,152(sp)
   8248c:	dc4022c5 	stb	r17,139(sp)
   82490:	b000bf16 	blt	r22,zero,82790 <___vfprintf_internal_r+0x21c0>
   82494:	00800ac4 	movi	r2,43
   82498:	d8802305 	stb	r2,140(sp)
   8249c:	00800244 	movi	r2,9
   824a0:	15807016 	blt	r2,r22,82664 <___vfprintf_internal_r+0x2094>
   824a4:	00800c04 	movi	r2,48
   824a8:	b5800c04 	addi	r22,r22,48
   824ac:	d8802345 	stb	r2,141(sp)
   824b0:	dd802385 	stb	r22,142(sp)
   824b4:	d88023c4 	addi	r2,sp,143
   824b8:	df0022c4 	addi	fp,sp,139
   824bc:	d8c03317 	ldw	r3,204(sp)
   824c0:	1739c83a 	sub	fp,r2,fp
   824c4:	d9003317 	ldw	r4,204(sp)
   824c8:	e0c7883a 	add	r3,fp,r3
   824cc:	df003a15 	stw	fp,232(sp)
   824d0:	d8c02b15 	stw	r3,172(sp)
   824d4:	00800044 	movi	r2,1
   824d8:	1100b30e 	bge	r2,r4,827a8 <___vfprintf_internal_r+0x21d8>
   824dc:	d8c02b17 	ldw	r3,172(sp)
   824e0:	18c00044 	addi	r3,r3,1
   824e4:	d8c02b15 	stw	r3,172(sp)
   824e8:	1805883a 	mov	r2,r3
   824ec:	1800ac16 	blt	r3,zero,827a0 <___vfprintf_internal_r+0x21d0>
   824f0:	d8003215 	stw	zero,200(sp)
   824f4:	003e5d06 	br	81e6c <___vfprintf_internal_r+0x189c>
   824f8:	d9002d17 	ldw	r4,180(sp)
   824fc:	d9801e04 	addi	r6,sp,120
   82500:	b80b883a 	mov	r5,r23
   82504:	0087db00 	call	87db0 <__sprint_r>
   82508:	1039351e 	bne	r2,zero,809e0 <___vfprintf_internal_r+0x410>
   8250c:	dc402617 	ldw	r17,152(sp)
   82510:	d8c02017 	ldw	r3,128(sp)
   82514:	d8801f17 	ldw	r2,124(sp)
   82518:	da000404 	addi	r8,sp,16
   8251c:	003ed606 	br	82078 <___vfprintf_internal_r+0x1aa8>
   82520:	182b883a 	mov	r21,r3
   82524:	d8002a15 	stw	zero,168(sp)
   82528:	00388c06 	br	8075c <___vfprintf_internal_r+0x18c>
   8252c:	d8802a17 	ldw	r2,168(sp)
   82530:	103e071e 	bne	r2,zero,81d50 <___vfprintf_internal_r+0x1780>
   82534:	dc002a15 	stw	r16,168(sp)
   82538:	003e0506 	br	81d50 <___vfprintf_internal_r+0x1780>
   8253c:	d9002a17 	ldw	r4,168(sp)
   82540:	20c00044 	addi	r3,r4,1
   82544:	003e0f06 	br	81d84 <___vfprintf_internal_r+0x17b4>
   82548:	01400184 	movi	r5,6
   8254c:	d9402a15 	stw	r5,168(sp)
   82550:	003dff06 	br	81d50 <___vfprintf_internal_r+0x1780>
   82554:	d8802104 	addi	r2,sp,132
   82558:	d8800315 	stw	r2,12(sp)
   8255c:	d8802504 	addi	r2,sp,148
   82560:	d8800215 	stw	r2,8(sp)
   82564:	d8802604 	addi	r2,sp,152
   82568:	d8800115 	stw	r2,4(sp)
   8256c:	d8802a17 	ldw	r2,168(sp)
   82570:	d9403617 	ldw	r5,216(sp)
   82574:	d9002d17 	ldw	r4,180(sp)
   82578:	d8800015 	stw	r2,0(sp)
   8257c:	01c000c4 	movi	r7,3
   82580:	980d883a 	mov	r6,r19
   82584:	da003d15 	stw	r8,244(sp)
   82588:	0082d000 	call	82d00 <_dtoa_r>
   8258c:	d8c02a17 	ldw	r3,168(sp)
   82590:	da003d17 	ldw	r8,244(sp)
   82594:	1021883a 	mov	r16,r2
   82598:	10f9883a 	add	fp,r2,r3
   8259c:	81000007 	ldb	r4,0(r16)
   825a0:	00800c04 	movi	r2,48
   825a4:	20805e26 	beq	r4,r2,82720 <___vfprintf_internal_r+0x2150>
   825a8:	d8c02617 	ldw	r3,152(sp)
   825ac:	e0f9883a 	add	fp,fp,r3
   825b0:	003e0a06 	br	81ddc <___vfprintf_internal_r+0x180c>
   825b4:	00c00b44 	movi	r3,45
   825b8:	24e0003c 	xorhi	r19,r4,32768
   825bc:	d8c02905 	stb	r3,164(sp)
   825c0:	003de906 	br	81d68 <___vfprintf_internal_r+0x1798>
   825c4:	d8c03217 	ldw	r3,200(sp)
   825c8:	00c07a0e 	bge	zero,r3,827b4 <___vfprintf_internal_r+0x21e4>
   825cc:	00800044 	movi	r2,1
   825d0:	d9003317 	ldw	r4,204(sp)
   825d4:	1105883a 	add	r2,r2,r4
   825d8:	d8802b15 	stw	r2,172(sp)
   825dc:	10004e16 	blt	r2,zero,82718 <___vfprintf_internal_r+0x2148>
   825e0:	044019c4 	movi	r17,103
   825e4:	003e2106 	br	81e6c <___vfprintf_internal_r+0x189c>
   825e8:	d9002a17 	ldw	r4,168(sp)
   825ec:	d8802104 	addi	r2,sp,132
   825f0:	d8800315 	stw	r2,12(sp)
   825f4:	d9000015 	stw	r4,0(sp)
   825f8:	d8802504 	addi	r2,sp,148
   825fc:	d9403617 	ldw	r5,216(sp)
   82600:	d9002d17 	ldw	r4,180(sp)
   82604:	d8800215 	stw	r2,8(sp)
   82608:	d8802604 	addi	r2,sp,152
   8260c:	d8800115 	stw	r2,4(sp)
   82610:	01c000c4 	movi	r7,3
   82614:	980d883a 	mov	r6,r19
   82618:	da003d15 	stw	r8,244(sp)
   8261c:	0082d000 	call	82d00 <_dtoa_r>
   82620:	d8c02a17 	ldw	r3,168(sp)
   82624:	da003d17 	ldw	r8,244(sp)
   82628:	1021883a 	mov	r16,r2
   8262c:	00801184 	movi	r2,70
   82630:	80f9883a 	add	fp,r16,r3
   82634:	88bfd926 	beq	r17,r2,8259c <___vfprintf_internal_r+0x1fcc>
   82638:	003de806 	br	81ddc <___vfprintf_internal_r+0x180c>
   8263c:	d9002a17 	ldw	r4,168(sp)
   82640:	00c04d0e 	bge	zero,r3,82778 <___vfprintf_internal_r+0x21a8>
   82644:	2000441e 	bne	r4,zero,82758 <___vfprintf_internal_r+0x2188>
   82648:	9480004c 	andi	r18,r18,1
   8264c:	9000421e 	bne	r18,zero,82758 <___vfprintf_internal_r+0x2188>
   82650:	1805883a 	mov	r2,r3
   82654:	18006f16 	blt	r3,zero,82814 <___vfprintf_internal_r+0x2244>
   82658:	d8c03217 	ldw	r3,200(sp)
   8265c:	d8c02b15 	stw	r3,172(sp)
   82660:	003e0206 	br	81e6c <___vfprintf_internal_r+0x189c>
   82664:	df0022c4 	addi	fp,sp,139
   82668:	dc002a15 	stw	r16,168(sp)
   8266c:	4027883a 	mov	r19,r8
   82670:	e021883a 	mov	r16,fp
   82674:	b009883a 	mov	r4,r22
   82678:	01400284 	movi	r5,10
   8267c:	008a93c0 	call	8a93c <__modsi3>
   82680:	10800c04 	addi	r2,r2,48
   82684:	843fffc4 	addi	r16,r16,-1
   82688:	b009883a 	mov	r4,r22
   8268c:	01400284 	movi	r5,10
   82690:	80800005 	stb	r2,0(r16)
   82694:	008a8b80 	call	8a8b8 <__divsi3>
   82698:	102d883a 	mov	r22,r2
   8269c:	00800244 	movi	r2,9
   826a0:	15bff416 	blt	r2,r22,82674 <___vfprintf_internal_r+0x20a4>
   826a4:	9811883a 	mov	r8,r19
   826a8:	b0800c04 	addi	r2,r22,48
   826ac:	8027883a 	mov	r19,r16
   826b0:	997fffc4 	addi	r5,r19,-1
   826b4:	98bfffc5 	stb	r2,-1(r19)
   826b8:	dc002a17 	ldw	r16,168(sp)
   826bc:	2f006d2e 	bgeu	r5,fp,82874 <___vfprintf_internal_r+0x22a4>
   826c0:	d9c02384 	addi	r7,sp,142
   826c4:	3ccfc83a 	sub	r7,r7,r19
   826c8:	d9002344 	addi	r4,sp,141
   826cc:	e1cf883a 	add	r7,fp,r7
   826d0:	00000106 	br	826d8 <___vfprintf_internal_r+0x2108>
   826d4:	28800003 	ldbu	r2,0(r5)
   826d8:	20800005 	stb	r2,0(r4)
   826dc:	21000044 	addi	r4,r4,1
   826e0:	29400044 	addi	r5,r5,1
   826e4:	393ffb1e 	bne	r7,r4,826d4 <___vfprintf_internal_r+0x2104>
   826e8:	d8802304 	addi	r2,sp,140
   826ec:	14c5c83a 	sub	r2,r2,r19
   826f0:	d8c02344 	addi	r3,sp,141
   826f4:	1885883a 	add	r2,r3,r2
   826f8:	003f7006 	br	824bc <___vfprintf_internal_r+0x1eec>
   826fc:	0005883a 	mov	r2,zero
   82700:	003f0f06 	br	82340 <___vfprintf_internal_r+0x1d70>
   82704:	d8c03217 	ldw	r3,200(sp)
   82708:	18c00044 	addi	r3,r3,1
   8270c:	d8c02b15 	stw	r3,172(sp)
   82710:	1805883a 	mov	r2,r3
   82714:	183fb20e 	bge	r3,zero,825e0 <___vfprintf_internal_r+0x2010>
   82718:	0005883a 	mov	r2,zero
   8271c:	003fb006 	br	825e0 <___vfprintf_internal_r+0x2010>
   82720:	d9003617 	ldw	r4,216(sp)
   82724:	000d883a 	mov	r6,zero
   82728:	000f883a 	mov	r7,zero
   8272c:	980b883a 	mov	r5,r19
   82730:	d8c03c15 	stw	r3,240(sp)
   82734:	da003d15 	stw	r8,244(sp)
   82738:	008bd100 	call	8bd10 <__eqdf2>
   8273c:	d8c03c17 	ldw	r3,240(sp)
   82740:	da003d17 	ldw	r8,244(sp)
   82744:	103f9826 	beq	r2,zero,825a8 <___vfprintf_internal_r+0x1fd8>
   82748:	00800044 	movi	r2,1
   8274c:	10c7c83a 	sub	r3,r2,r3
   82750:	d8c02615 	stw	r3,152(sp)
   82754:	003f9506 	br	825ac <___vfprintf_internal_r+0x1fdc>
   82758:	d9002a17 	ldw	r4,168(sp)
   8275c:	d8c03217 	ldw	r3,200(sp)
   82760:	20800044 	addi	r2,r4,1
   82764:	1885883a 	add	r2,r3,r2
   82768:	d8802b15 	stw	r2,172(sp)
   8276c:	103dbf0e 	bge	r2,zero,81e6c <___vfprintf_internal_r+0x189c>
   82770:	0005883a 	mov	r2,zero
   82774:	003dbd06 	br	81e6c <___vfprintf_internal_r+0x189c>
   82778:	2000201e 	bne	r4,zero,827fc <___vfprintf_internal_r+0x222c>
   8277c:	9480004c 	andi	r18,r18,1
   82780:	90001e1e 	bne	r18,zero,827fc <___vfprintf_internal_r+0x222c>
   82784:	00800044 	movi	r2,1
   82788:	d8802b15 	stw	r2,172(sp)
   8278c:	003db706 	br	81e6c <___vfprintf_internal_r+0x189c>
   82790:	00800b44 	movi	r2,45
   82794:	05adc83a 	sub	r22,zero,r22
   82798:	d8802305 	stb	r2,140(sp)
   8279c:	003f3f06 	br	8249c <___vfprintf_internal_r+0x1ecc>
   827a0:	0005883a 	mov	r2,zero
   827a4:	003f5206 	br	824f0 <___vfprintf_internal_r+0x1f20>
   827a8:	90a4703a 	and	r18,r18,r2
   827ac:	903f4e26 	beq	r18,zero,824e8 <___vfprintf_internal_r+0x1f18>
   827b0:	003f4a06 	br	824dc <___vfprintf_internal_r+0x1f0c>
   827b4:	00800084 	movi	r2,2
   827b8:	10c5c83a 	sub	r2,r2,r3
   827bc:	003f8406 	br	825d0 <___vfprintf_internal_r+0x2000>
   827c0:	d9402e17 	ldw	r5,184(sp)
   827c4:	d9002e17 	ldw	r4,184(sp)
   827c8:	ac400043 	ldbu	r17,1(r21)
   827cc:	29400017 	ldw	r5,0(r5)
   827d0:	20800104 	addi	r2,r4,4
   827d4:	d8802e15 	stw	r2,184(sp)
   827d8:	d9402a15 	stw	r5,168(sp)
   827dc:	182b883a 	mov	r21,r3
   827e0:	283e7b0e 	bge	r5,zero,821d0 <___vfprintf_internal_r+0x1c00>
   827e4:	8c403fcc 	andi	r17,r17,255
   827e8:	017fffc4 	movi	r5,-1
   827ec:	8c40201c 	xori	r17,r17,128
   827f0:	d9402a15 	stw	r5,168(sp)
   827f4:	8c7fe004 	addi	r17,r17,-128
   827f8:	0037d706 	br	80758 <___vfprintf_internal_r+0x188>
   827fc:	d8c02a17 	ldw	r3,168(sp)
   82800:	18c00084 	addi	r3,r3,2
   82804:	d8c02b15 	stw	r3,172(sp)
   82808:	1805883a 	mov	r2,r3
   8280c:	183d970e 	bge	r3,zero,81e6c <___vfprintf_internal_r+0x189c>
   82810:	003fd706 	br	82770 <___vfprintf_internal_r+0x21a0>
   82814:	0005883a 	mov	r2,zero
   82818:	003f8f06 	br	82658 <___vfprintf_internal_r+0x2088>
   8281c:	9080004c 	andi	r2,r18,1
   82820:	103f821e 	bne	r2,zero,8262c <___vfprintf_internal_r+0x205c>
   82824:	d8802117 	ldw	r2,132(sp)
   82828:	1405c83a 	sub	r2,r2,r16
   8282c:	d8803315 	stw	r2,204(sp)
   82830:	b47ef426 	beq	r22,r17,82404 <___vfprintf_internal_r+0x1e34>
   82834:	dd802617 	ldw	r22,152(sp)
   82838:	003f1206 	br	82484 <___vfprintf_internal_r+0x1eb4>
   8283c:	d8c02b03 	ldbu	r3,172(sp)
   82840:	d8c02785 	stb	r3,158(sp)
   82844:	0038df06 	br	80bc4 <___vfprintf_internal_r+0x5f4>
   82848:	d8c02b03 	ldbu	r3,172(sp)
   8284c:	d8c02785 	stb	r3,158(sp)
   82850:	0038aa06 	br	80afc <___vfprintf_internal_r+0x52c>
   82854:	d8c02b03 	ldbu	r3,172(sp)
   82858:	d8c02785 	stb	r3,158(sp)
   8285c:	003a4306 	br	8116c <___vfprintf_internal_r+0xb9c>
   82860:	d8c02b03 	ldbu	r3,172(sp)
   82864:	d8c02785 	stb	r3,158(sp)
   82868:	003af506 	br	81440 <___vfprintf_internal_r+0xe70>
   8286c:	0005883a 	mov	r2,zero
   82870:	003d7b06 	br	81e60 <___vfprintf_internal_r+0x1890>
   82874:	d8802344 	addi	r2,sp,141
   82878:	003f1006 	br	824bc <___vfprintf_internal_r+0x1eec>
   8287c:	d8c02b03 	ldbu	r3,172(sp)
   82880:	d8c02785 	stb	r3,158(sp)
   82884:	0038fd06 	br	80c7c <___vfprintf_internal_r+0x6ac>
   82888:	d8c02b03 	ldbu	r3,172(sp)
   8288c:	d8c02785 	stb	r3,158(sp)
   82890:	003a9706 	br	812f0 <___vfprintf_internal_r+0xd20>
   82894:	d8c02b03 	ldbu	r3,172(sp)
   82898:	d8c02785 	stb	r3,158(sp)
   8289c:	003a1806 	br	81100 <___vfprintf_internal_r+0xb30>
   828a0:	d8c02b03 	ldbu	r3,172(sp)
   828a4:	d8c02785 	stb	r3,158(sp)
   828a8:	003abe06 	br	813a4 <___vfprintf_internal_r+0xdd4>

000828ac <__vfprintf_internal>:
   828ac:	00800134 	movhi	r2,4
   828b0:	10877904 	addi	r2,r2,7652
   828b4:	300f883a 	mov	r7,r6
   828b8:	280d883a 	mov	r6,r5
   828bc:	200b883a 	mov	r5,r4
   828c0:	11000017 	ldw	r4,0(r2)
   828c4:	00805d01 	jmpi	805d0 <___vfprintf_internal_r>

000828c8 <__sbprintf>:
   828c8:	2880030b 	ldhu	r2,12(r5)
   828cc:	2ac01917 	ldw	r11,100(r5)
   828d0:	2a80038b 	ldhu	r10,14(r5)
   828d4:	2a400717 	ldw	r9,28(r5)
   828d8:	2a000917 	ldw	r8,36(r5)
   828dc:	defee204 	addi	sp,sp,-1144
   828e0:	00c10004 	movi	r3,1024
   828e4:	dc011a15 	stw	r16,1128(sp)
   828e8:	10bfff4c 	andi	r2,r2,65533
   828ec:	2821883a 	mov	r16,r5
   828f0:	d8cb883a 	add	r5,sp,r3
   828f4:	dc811c15 	stw	r18,1136(sp)
   828f8:	dc411b15 	stw	r17,1132(sp)
   828fc:	dfc11d15 	stw	ra,1140(sp)
   82900:	2025883a 	mov	r18,r4
   82904:	d881030d 	sth	r2,1036(sp)
   82908:	dac11915 	stw	r11,1124(sp)
   8290c:	da81038d 	sth	r10,1038(sp)
   82910:	da410715 	stw	r9,1052(sp)
   82914:	da010915 	stw	r8,1060(sp)
   82918:	dec10015 	stw	sp,1024(sp)
   8291c:	dec10415 	stw	sp,1040(sp)
   82920:	d8c10215 	stw	r3,1032(sp)
   82924:	d8c10515 	stw	r3,1044(sp)
   82928:	d8010615 	stw	zero,1048(sp)
   8292c:	00805d00 	call	805d0 <___vfprintf_internal_r>
   82930:	1023883a 	mov	r17,r2
   82934:	10000416 	blt	r2,zero,82948 <__sbprintf+0x80>
   82938:	d9410004 	addi	r5,sp,1024
   8293c:	9009883a 	mov	r4,r18
   82940:	00845a40 	call	845a4 <_fflush_r>
   82944:	10000d1e 	bne	r2,zero,8297c <__sbprintf+0xb4>
   82948:	d881030b 	ldhu	r2,1036(sp)
   8294c:	1080100c 	andi	r2,r2,64
   82950:	10000326 	beq	r2,zero,82960 <__sbprintf+0x98>
   82954:	8080030b 	ldhu	r2,12(r16)
   82958:	10801014 	ori	r2,r2,64
   8295c:	8080030d 	sth	r2,12(r16)
   82960:	8805883a 	mov	r2,r17
   82964:	dfc11d17 	ldw	ra,1140(sp)
   82968:	dc811c17 	ldw	r18,1136(sp)
   8296c:	dc411b17 	ldw	r17,1132(sp)
   82970:	dc011a17 	ldw	r16,1128(sp)
   82974:	dec11e04 	addi	sp,sp,1144
   82978:	f800283a 	ret
   8297c:	047fffc4 	movi	r17,-1
   82980:	003ff106 	br	82948 <__sbprintf+0x80>

00082984 <__swsetup_r>:
   82984:	00800134 	movhi	r2,4
   82988:	defffd04 	addi	sp,sp,-12
   8298c:	10877904 	addi	r2,r2,7652
   82990:	dc400115 	stw	r17,4(sp)
   82994:	2023883a 	mov	r17,r4
   82998:	11000017 	ldw	r4,0(r2)
   8299c:	dc000015 	stw	r16,0(sp)
   829a0:	dfc00215 	stw	ra,8(sp)
   829a4:	2821883a 	mov	r16,r5
   829a8:	20000226 	beq	r4,zero,829b4 <__swsetup_r+0x30>
   829ac:	20800e17 	ldw	r2,56(r4)
   829b0:	10003126 	beq	r2,zero,82a78 <__swsetup_r+0xf4>
   829b4:	8080030b 	ldhu	r2,12(r16)
   829b8:	10c0020c 	andi	r3,r2,8
   829bc:	1009883a 	mov	r4,r2
   829c0:	18000f26 	beq	r3,zero,82a00 <__swsetup_r+0x7c>
   829c4:	80c00417 	ldw	r3,16(r16)
   829c8:	18001526 	beq	r3,zero,82a20 <__swsetup_r+0x9c>
   829cc:	1100004c 	andi	r4,r2,1
   829d0:	20001c1e 	bne	r4,zero,82a44 <__swsetup_r+0xc0>
   829d4:	1080008c 	andi	r2,r2,2
   829d8:	1000291e 	bne	r2,zero,82a80 <__swsetup_r+0xfc>
   829dc:	80800517 	ldw	r2,20(r16)
   829e0:	80800215 	stw	r2,8(r16)
   829e4:	18001c26 	beq	r3,zero,82a58 <__swsetup_r+0xd4>
   829e8:	0005883a 	mov	r2,zero
   829ec:	dfc00217 	ldw	ra,8(sp)
   829f0:	dc400117 	ldw	r17,4(sp)
   829f4:	dc000017 	ldw	r16,0(sp)
   829f8:	dec00304 	addi	sp,sp,12
   829fc:	f800283a 	ret
   82a00:	2080040c 	andi	r2,r4,16
   82a04:	10002e26 	beq	r2,zero,82ac0 <__swsetup_r+0x13c>
   82a08:	2080010c 	andi	r2,r4,4
   82a0c:	10001e1e 	bne	r2,zero,82a88 <__swsetup_r+0x104>
   82a10:	80c00417 	ldw	r3,16(r16)
   82a14:	20800214 	ori	r2,r4,8
   82a18:	8080030d 	sth	r2,12(r16)
   82a1c:	183feb1e 	bne	r3,zero,829cc <__swsetup_r+0x48>
   82a20:	1100a00c 	andi	r4,r2,640
   82a24:	01408004 	movi	r5,512
   82a28:	217fe826 	beq	r4,r5,829cc <__swsetup_r+0x48>
   82a2c:	800b883a 	mov	r5,r16
   82a30:	8809883a 	mov	r4,r17
   82a34:	00855400 	call	85540 <__smakebuf_r>
   82a38:	8080030b 	ldhu	r2,12(r16)
   82a3c:	80c00417 	ldw	r3,16(r16)
   82a40:	003fe206 	br	829cc <__swsetup_r+0x48>
   82a44:	80800517 	ldw	r2,20(r16)
   82a48:	80000215 	stw	zero,8(r16)
   82a4c:	0085c83a 	sub	r2,zero,r2
   82a50:	80800615 	stw	r2,24(r16)
   82a54:	183fe41e 	bne	r3,zero,829e8 <__swsetup_r+0x64>
   82a58:	80c0030b 	ldhu	r3,12(r16)
   82a5c:	0005883a 	mov	r2,zero
   82a60:	1900200c 	andi	r4,r3,128
   82a64:	203fe126 	beq	r4,zero,829ec <__swsetup_r+0x68>
   82a68:	18c01014 	ori	r3,r3,64
   82a6c:	80c0030d 	sth	r3,12(r16)
   82a70:	00bfffc4 	movi	r2,-1
   82a74:	003fdd06 	br	829ec <__swsetup_r+0x68>
   82a78:	00849900 	call	84990 <__sinit>
   82a7c:	003fcd06 	br	829b4 <__swsetup_r+0x30>
   82a80:	0005883a 	mov	r2,zero
   82a84:	003fd606 	br	829e0 <__swsetup_r+0x5c>
   82a88:	81400c17 	ldw	r5,48(r16)
   82a8c:	28000626 	beq	r5,zero,82aa8 <__swsetup_r+0x124>
   82a90:	80801004 	addi	r2,r16,64
   82a94:	28800326 	beq	r5,r2,82aa4 <__swsetup_r+0x120>
   82a98:	8809883a 	mov	r4,r17
   82a9c:	0084b040 	call	84b04 <_free_r>
   82aa0:	8100030b 	ldhu	r4,12(r16)
   82aa4:	80000c15 	stw	zero,48(r16)
   82aa8:	80c00417 	ldw	r3,16(r16)
   82aac:	00bff6c4 	movi	r2,-37
   82ab0:	1108703a 	and	r4,r2,r4
   82ab4:	80000115 	stw	zero,4(r16)
   82ab8:	80c00015 	stw	r3,0(r16)
   82abc:	003fd506 	br	82a14 <__swsetup_r+0x90>
   82ac0:	00800244 	movi	r2,9
   82ac4:	88800015 	stw	r2,0(r17)
   82ac8:	20801014 	ori	r2,r4,64
   82acc:	8080030d 	sth	r2,12(r16)
   82ad0:	00bfffc4 	movi	r2,-1
   82ad4:	003fc506 	br	829ec <__swsetup_r+0x68>

00082ad8 <quorem>:
   82ad8:	defff204 	addi	sp,sp,-56
   82adc:	ddc00b15 	stw	r23,44(sp)
   82ae0:	20800417 	ldw	r2,16(r4)
   82ae4:	2dc00417 	ldw	r23,16(r5)
   82ae8:	dfc00d15 	stw	ra,52(sp)
   82aec:	df000c15 	stw	fp,48(sp)
   82af0:	dd800a15 	stw	r22,40(sp)
   82af4:	dd400915 	stw	r21,36(sp)
   82af8:	dd000815 	stw	r20,32(sp)
   82afc:	dcc00715 	stw	r19,28(sp)
   82b00:	dc800615 	stw	r18,24(sp)
   82b04:	dc400515 	stw	r17,20(sp)
   82b08:	dc000415 	stw	r16,16(sp)
   82b0c:	15c07a16 	blt	r2,r23,82cf8 <quorem+0x220>
   82b10:	bdffffc4 	addi	r23,r23,-1
   82b14:	bde9883a 	add	r20,r23,r23
   82b18:	28c00504 	addi	r3,r5,20
   82b1c:	a529883a 	add	r20,r20,r20
   82b20:	1d39883a 	add	fp,r3,r20
   82b24:	24c00504 	addi	r19,r4,20
   82b28:	d9400215 	stw	r5,8(sp)
   82b2c:	9d29883a 	add	r20,r19,r20
   82b30:	e1400017 	ldw	r5,0(fp)
   82b34:	d9000015 	stw	r4,0(sp)
   82b38:	a1000017 	ldw	r4,0(r20)
   82b3c:	29400044 	addi	r5,r5,1
   82b40:	d8c00115 	stw	r3,4(sp)
   82b44:	dd000315 	stw	r20,12(sp)
   82b48:	008a9b00 	call	8a9b0 <__udivsi3>
   82b4c:	1025883a 	mov	r18,r2
   82b50:	10003026 	beq	r2,zero,82c14 <quorem+0x13c>
   82b54:	dc400117 	ldw	r17,4(sp)
   82b58:	9829883a 	mov	r20,r19
   82b5c:	002d883a 	mov	r22,zero
   82b60:	0021883a 	mov	r16,zero
   82b64:	8d400017 	ldw	r21,0(r17)
   82b68:	900b883a 	mov	r5,r18
   82b6c:	8c400104 	addi	r17,r17,4
   82b70:	a93fffcc 	andi	r4,r21,65535
   82b74:	008aa6c0 	call	8aa6c <__mulsi3>
   82b78:	a808d43a 	srli	r4,r21,16
   82b7c:	900b883a 	mov	r5,r18
   82b80:	15ad883a 	add	r22,r2,r22
   82b84:	008aa6c0 	call	8aa6c <__mulsi3>
   82b88:	a1000017 	ldw	r4,0(r20)
   82b8c:	b00cd43a 	srli	r6,r22,16
   82b90:	b0ffffcc 	andi	r3,r22,65535
   82b94:	217fffcc 	andi	r5,r4,65535
   82b98:	2c21883a 	add	r16,r5,r16
   82b9c:	80c7c83a 	sub	r3,r16,r3
   82ba0:	2008d43a 	srli	r4,r4,16
   82ba4:	1185883a 	add	r2,r2,r6
   82ba8:	1821d43a 	srai	r16,r3,16
   82bac:	117fffcc 	andi	r5,r2,65535
   82bb0:	2149c83a 	sub	r4,r4,r5
   82bb4:	2421883a 	add	r16,r4,r16
   82bb8:	8008943a 	slli	r4,r16,16
   82bbc:	18ffffcc 	andi	r3,r3,65535
   82bc0:	102cd43a 	srli	r22,r2,16
   82bc4:	20c8b03a 	or	r4,r4,r3
   82bc8:	a1000015 	stw	r4,0(r20)
   82bcc:	8021d43a 	srai	r16,r16,16
   82bd0:	a5000104 	addi	r20,r20,4
   82bd4:	e47fe32e 	bgeu	fp,r17,82b64 <quorem+0x8c>
   82bd8:	d8c00317 	ldw	r3,12(sp)
   82bdc:	18800017 	ldw	r2,0(r3)
   82be0:	10000c1e 	bne	r2,zero,82c14 <quorem+0x13c>
   82be4:	18bfff04 	addi	r2,r3,-4
   82be8:	9880082e 	bgeu	r19,r2,82c0c <quorem+0x134>
   82bec:	18ffff17 	ldw	r3,-4(r3)
   82bf0:	18000326 	beq	r3,zero,82c00 <quorem+0x128>
   82bf4:	00000506 	br	82c0c <quorem+0x134>
   82bf8:	10c00017 	ldw	r3,0(r2)
   82bfc:	1800031e 	bne	r3,zero,82c0c <quorem+0x134>
   82c00:	10bfff04 	addi	r2,r2,-4
   82c04:	bdffffc4 	addi	r23,r23,-1
   82c08:	98bffb36 	bltu	r19,r2,82bf8 <quorem+0x120>
   82c0c:	d8c00017 	ldw	r3,0(sp)
   82c10:	1dc00415 	stw	r23,16(r3)
   82c14:	d9400217 	ldw	r5,8(sp)
   82c18:	d9000017 	ldw	r4,0(sp)
   82c1c:	0086d3c0 	call	86d3c <__mcmp>
   82c20:	10002816 	blt	r2,zero,82cc4 <quorem+0x1ec>
   82c24:	dc400117 	ldw	r17,4(sp)
   82c28:	94800044 	addi	r18,r18,1
   82c2c:	980d883a 	mov	r6,r19
   82c30:	0007883a 	mov	r3,zero
   82c34:	31000017 	ldw	r4,0(r6)
   82c38:	89400017 	ldw	r5,0(r17)
   82c3c:	31800104 	addi	r6,r6,4
   82c40:	20bfffcc 	andi	r2,r4,65535
   82c44:	10c7883a 	add	r3,r2,r3
   82c48:	28bfffcc 	andi	r2,r5,65535
   82c4c:	1885c83a 	sub	r2,r3,r2
   82c50:	280ad43a 	srli	r5,r5,16
   82c54:	2008d43a 	srli	r4,r4,16
   82c58:	1007d43a 	srai	r3,r2,16
   82c5c:	10bfffcc 	andi	r2,r2,65535
   82c60:	2149c83a 	sub	r4,r4,r5
   82c64:	20c9883a 	add	r4,r4,r3
   82c68:	200a943a 	slli	r5,r4,16
   82c6c:	8c400104 	addi	r17,r17,4
   82c70:	2007d43a 	srai	r3,r4,16
   82c74:	2884b03a 	or	r2,r5,r2
   82c78:	30bfff15 	stw	r2,-4(r6)
   82c7c:	e47fed2e 	bgeu	fp,r17,82c34 <quorem+0x15c>
   82c80:	bdc5883a 	add	r2,r23,r23
   82c84:	1085883a 	add	r2,r2,r2
   82c88:	9887883a 	add	r3,r19,r2
   82c8c:	18800017 	ldw	r2,0(r3)
   82c90:	10000c1e 	bne	r2,zero,82cc4 <quorem+0x1ec>
   82c94:	18bfff04 	addi	r2,r3,-4
   82c98:	9880082e 	bgeu	r19,r2,82cbc <quorem+0x1e4>
   82c9c:	18ffff17 	ldw	r3,-4(r3)
   82ca0:	18000326 	beq	r3,zero,82cb0 <quorem+0x1d8>
   82ca4:	00000506 	br	82cbc <quorem+0x1e4>
   82ca8:	10c00017 	ldw	r3,0(r2)
   82cac:	1800031e 	bne	r3,zero,82cbc <quorem+0x1e4>
   82cb0:	10bfff04 	addi	r2,r2,-4
   82cb4:	bdffffc4 	addi	r23,r23,-1
   82cb8:	98bffb36 	bltu	r19,r2,82ca8 <quorem+0x1d0>
   82cbc:	d8c00017 	ldw	r3,0(sp)
   82cc0:	1dc00415 	stw	r23,16(r3)
   82cc4:	9005883a 	mov	r2,r18
   82cc8:	dfc00d17 	ldw	ra,52(sp)
   82ccc:	df000c17 	ldw	fp,48(sp)
   82cd0:	ddc00b17 	ldw	r23,44(sp)
   82cd4:	dd800a17 	ldw	r22,40(sp)
   82cd8:	dd400917 	ldw	r21,36(sp)
   82cdc:	dd000817 	ldw	r20,32(sp)
   82ce0:	dcc00717 	ldw	r19,28(sp)
   82ce4:	dc800617 	ldw	r18,24(sp)
   82ce8:	dc400517 	ldw	r17,20(sp)
   82cec:	dc000417 	ldw	r16,16(sp)
   82cf0:	dec00e04 	addi	sp,sp,56
   82cf4:	f800283a 	ret
   82cf8:	0005883a 	mov	r2,zero
   82cfc:	003ff206 	br	82cc8 <quorem+0x1f0>

00082d00 <_dtoa_r>:
   82d00:	20801017 	ldw	r2,64(r4)
   82d04:	deffde04 	addi	sp,sp,-136
   82d08:	df002015 	stw	fp,128(sp)
   82d0c:	dcc01b15 	stw	r19,108(sp)
   82d10:	dc801a15 	stw	r18,104(sp)
   82d14:	dc401915 	stw	r17,100(sp)
   82d18:	dc001815 	stw	r16,96(sp)
   82d1c:	dfc02115 	stw	ra,132(sp)
   82d20:	ddc01f15 	stw	r23,124(sp)
   82d24:	dd801e15 	stw	r22,120(sp)
   82d28:	dd401d15 	stw	r21,116(sp)
   82d2c:	dd001c15 	stw	r20,112(sp)
   82d30:	d9c00315 	stw	r7,12(sp)
   82d34:	2039883a 	mov	fp,r4
   82d38:	3023883a 	mov	r17,r6
   82d3c:	2825883a 	mov	r18,r5
   82d40:	dc002417 	ldw	r16,144(sp)
   82d44:	3027883a 	mov	r19,r6
   82d48:	10000826 	beq	r2,zero,82d6c <_dtoa_r+0x6c>
   82d4c:	21801117 	ldw	r6,68(r4)
   82d50:	00c00044 	movi	r3,1
   82d54:	100b883a 	mov	r5,r2
   82d58:	1986983a 	sll	r3,r3,r6
   82d5c:	11800115 	stw	r6,4(r2)
   82d60:	10c00215 	stw	r3,8(r2)
   82d64:	00864600 	call	86460 <_Bfree>
   82d68:	e0001015 	stw	zero,64(fp)
   82d6c:	88002e16 	blt	r17,zero,82e28 <_dtoa_r+0x128>
   82d70:	80000015 	stw	zero,0(r16)
   82d74:	889ffc2c 	andhi	r2,r17,32752
   82d78:	00dffc34 	movhi	r3,32752
   82d7c:	10c01c26 	beq	r2,r3,82df0 <_dtoa_r+0xf0>
   82d80:	000d883a 	mov	r6,zero
   82d84:	000f883a 	mov	r7,zero
   82d88:	9009883a 	mov	r4,r18
   82d8c:	980b883a 	mov	r5,r19
   82d90:	008bd100 	call	8bd10 <__eqdf2>
   82d94:	10002b1e 	bne	r2,zero,82e44 <_dtoa_r+0x144>
   82d98:	d9c02317 	ldw	r7,140(sp)
   82d9c:	00800044 	movi	r2,1
   82da0:	38800015 	stw	r2,0(r7)
   82da4:	d8802517 	ldw	r2,148(sp)
   82da8:	10019e26 	beq	r2,zero,83424 <_dtoa_r+0x724>
   82dac:	d8c02517 	ldw	r3,148(sp)
   82db0:	00800134 	movhi	r2,4
   82db4:	10801d44 	addi	r2,r2,117
   82db8:	18800015 	stw	r2,0(r3)
   82dbc:	10bfffc4 	addi	r2,r2,-1
   82dc0:	dfc02117 	ldw	ra,132(sp)
   82dc4:	df002017 	ldw	fp,128(sp)
   82dc8:	ddc01f17 	ldw	r23,124(sp)
   82dcc:	dd801e17 	ldw	r22,120(sp)
   82dd0:	dd401d17 	ldw	r21,116(sp)
   82dd4:	dd001c17 	ldw	r20,112(sp)
   82dd8:	dcc01b17 	ldw	r19,108(sp)
   82ddc:	dc801a17 	ldw	r18,104(sp)
   82de0:	dc401917 	ldw	r17,100(sp)
   82de4:	dc001817 	ldw	r16,96(sp)
   82de8:	dec02204 	addi	sp,sp,136
   82dec:	f800283a 	ret
   82df0:	d8c02317 	ldw	r3,140(sp)
   82df4:	0089c3c4 	movi	r2,9999
   82df8:	18800015 	stw	r2,0(r3)
   82dfc:	90017726 	beq	r18,zero,833dc <_dtoa_r+0x6dc>
   82e00:	00800134 	movhi	r2,4
   82e04:	10802904 	addi	r2,r2,164
   82e08:	d9002517 	ldw	r4,148(sp)
   82e0c:	203fec26 	beq	r4,zero,82dc0 <_dtoa_r+0xc0>
   82e10:	10c000c7 	ldb	r3,3(r2)
   82e14:	1801781e 	bne	r3,zero,833f8 <_dtoa_r+0x6f8>
   82e18:	10c000c4 	addi	r3,r2,3
   82e1c:	d9802517 	ldw	r6,148(sp)
   82e20:	30c00015 	stw	r3,0(r6)
   82e24:	003fe606 	br	82dc0 <_dtoa_r+0xc0>
   82e28:	04e00034 	movhi	r19,32768
   82e2c:	9cffffc4 	addi	r19,r19,-1
   82e30:	00800044 	movi	r2,1
   82e34:	8ce6703a 	and	r19,r17,r19
   82e38:	80800015 	stw	r2,0(r16)
   82e3c:	9823883a 	mov	r17,r19
   82e40:	003fcc06 	br	82d74 <_dtoa_r+0x74>
   82e44:	d8800204 	addi	r2,sp,8
   82e48:	d8800015 	stw	r2,0(sp)
   82e4c:	d9c00104 	addi	r7,sp,4
   82e50:	900b883a 	mov	r5,r18
   82e54:	980d883a 	mov	r6,r19
   82e58:	e009883a 	mov	r4,fp
   82e5c:	8820d53a 	srli	r16,r17,20
   82e60:	00871080 	call	87108 <__d2b>
   82e64:	d8800915 	stw	r2,36(sp)
   82e68:	8001651e 	bne	r16,zero,83400 <_dtoa_r+0x700>
   82e6c:	dd800217 	ldw	r22,8(sp)
   82e70:	dc000117 	ldw	r16,4(sp)
   82e74:	00800804 	movi	r2,32
   82e78:	b421883a 	add	r16,r22,r16
   82e7c:	80c10c84 	addi	r3,r16,1074
   82e80:	10c2d10e 	bge	r2,r3,839c8 <_dtoa_r+0xcc8>
   82e84:	00801004 	movi	r2,64
   82e88:	81010484 	addi	r4,r16,1042
   82e8c:	10c7c83a 	sub	r3,r2,r3
   82e90:	9108d83a 	srl	r4,r18,r4
   82e94:	88e2983a 	sll	r17,r17,r3
   82e98:	2448b03a 	or	r4,r4,r17
   82e9c:	008d22c0 	call	8d22c <__floatunsidf>
   82ea0:	017f8434 	movhi	r5,65040
   82ea4:	01800044 	movi	r6,1
   82ea8:	1009883a 	mov	r4,r2
   82eac:	194b883a 	add	r5,r3,r5
   82eb0:	843fffc4 	addi	r16,r16,-1
   82eb4:	d9801115 	stw	r6,68(sp)
   82eb8:	000d883a 	mov	r6,zero
   82ebc:	01cffe34 	movhi	r7,16376
   82ec0:	008c7d40 	call	8c7d4 <__subdf3>
   82ec4:	0198dbf4 	movhi	r6,25455
   82ec8:	01cff4f4 	movhi	r7,16339
   82ecc:	3190d844 	addi	r6,r6,17249
   82ed0:	39e1e9c4 	addi	r7,r7,-30809
   82ed4:	1009883a 	mov	r4,r2
   82ed8:	180b883a 	mov	r5,r3
   82edc:	008bf680 	call	8bf68 <__muldf3>
   82ee0:	01a2d874 	movhi	r6,35681
   82ee4:	01cff1f4 	movhi	r7,16327
   82ee8:	31b22cc4 	addi	r6,r6,-14157
   82eec:	39e28a04 	addi	r7,r7,-30168
   82ef0:	180b883a 	mov	r5,r3
   82ef4:	1009883a 	mov	r4,r2
   82ef8:	008aa940 	call	8aa94 <__adddf3>
   82efc:	8009883a 	mov	r4,r16
   82f00:	1029883a 	mov	r20,r2
   82f04:	1823883a 	mov	r17,r3
   82f08:	008d1500 	call	8d150 <__floatsidf>
   82f0c:	019427f4 	movhi	r6,20639
   82f10:	01cff4f4 	movhi	r7,16339
   82f14:	319e7ec4 	addi	r6,r6,31227
   82f18:	39d104c4 	addi	r7,r7,17427
   82f1c:	1009883a 	mov	r4,r2
   82f20:	180b883a 	mov	r5,r3
   82f24:	008bf680 	call	8bf68 <__muldf3>
   82f28:	100d883a 	mov	r6,r2
   82f2c:	180f883a 	mov	r7,r3
   82f30:	a009883a 	mov	r4,r20
   82f34:	880b883a 	mov	r5,r17
   82f38:	008aa940 	call	8aa94 <__adddf3>
   82f3c:	1009883a 	mov	r4,r2
   82f40:	180b883a 	mov	r5,r3
   82f44:	1029883a 	mov	r20,r2
   82f48:	1823883a 	mov	r17,r3
   82f4c:	008d0d00 	call	8d0d0 <__fixdfsi>
   82f50:	000d883a 	mov	r6,zero
   82f54:	000f883a 	mov	r7,zero
   82f58:	a009883a 	mov	r4,r20
   82f5c:	880b883a 	mov	r5,r17
   82f60:	d8800515 	stw	r2,20(sp)
   82f64:	008be740 	call	8be74 <__ledf2>
   82f68:	10028716 	blt	r2,zero,83988 <_dtoa_r+0xc88>
   82f6c:	d8c00517 	ldw	r3,20(sp)
   82f70:	00800584 	movi	r2,22
   82f74:	10c27536 	bltu	r2,r3,8394c <_dtoa_r+0xc4c>
   82f78:	180490fa 	slli	r2,r3,3
   82f7c:	00c00134 	movhi	r3,4
   82f80:	18c04504 	addi	r3,r3,276
   82f84:	1885883a 	add	r2,r3,r2
   82f88:	11000017 	ldw	r4,0(r2)
   82f8c:	11400117 	ldw	r5,4(r2)
   82f90:	900d883a 	mov	r6,r18
   82f94:	980f883a 	mov	r7,r19
   82f98:	008bd980 	call	8bd98 <__gedf2>
   82f9c:	00828d0e 	bge	zero,r2,839d4 <_dtoa_r+0xcd4>
   82fa0:	d9000517 	ldw	r4,20(sp)
   82fa4:	d8000e15 	stw	zero,56(sp)
   82fa8:	213fffc4 	addi	r4,r4,-1
   82fac:	d9000515 	stw	r4,20(sp)
   82fb0:	b42dc83a 	sub	r22,r22,r16
   82fb4:	b5bfffc4 	addi	r22,r22,-1
   82fb8:	b0026f16 	blt	r22,zero,83978 <_dtoa_r+0xc78>
   82fbc:	d8000815 	stw	zero,32(sp)
   82fc0:	d9c00517 	ldw	r7,20(sp)
   82fc4:	38026416 	blt	r7,zero,83958 <_dtoa_r+0xc58>
   82fc8:	b1ed883a 	add	r22,r22,r7
   82fcc:	d9c00d15 	stw	r7,52(sp)
   82fd0:	d8000a15 	stw	zero,40(sp)
   82fd4:	d9800317 	ldw	r6,12(sp)
   82fd8:	00800244 	movi	r2,9
   82fdc:	11811436 	bltu	r2,r6,83430 <_dtoa_r+0x730>
   82fe0:	00800144 	movi	r2,5
   82fe4:	1184e10e 	bge	r2,r6,8436c <_dtoa_r+0x166c>
   82fe8:	31bfff04 	addi	r6,r6,-4
   82fec:	d9800315 	stw	r6,12(sp)
   82ff0:	0023883a 	mov	r17,zero
   82ff4:	d9800317 	ldw	r6,12(sp)
   82ff8:	008000c4 	movi	r2,3
   82ffc:	30836726 	beq	r6,r2,83d9c <_dtoa_r+0x109c>
   83000:	1183410e 	bge	r2,r6,83d08 <_dtoa_r+0x1008>
   83004:	d9c00317 	ldw	r7,12(sp)
   83008:	00800104 	movi	r2,4
   8300c:	38827c26 	beq	r7,r2,83a00 <_dtoa_r+0xd00>
   83010:	00800144 	movi	r2,5
   83014:	3884c41e 	bne	r7,r2,84328 <_dtoa_r+0x1628>
   83018:	00800044 	movi	r2,1
   8301c:	d8800b15 	stw	r2,44(sp)
   83020:	d8c00517 	ldw	r3,20(sp)
   83024:	d9002217 	ldw	r4,136(sp)
   83028:	1907883a 	add	r3,r3,r4
   8302c:	19800044 	addi	r6,r3,1
   83030:	d8c00c15 	stw	r3,48(sp)
   83034:	d9800615 	stw	r6,24(sp)
   83038:	0183a40e 	bge	zero,r6,83ecc <_dtoa_r+0x11cc>
   8303c:	d9800617 	ldw	r6,24(sp)
   83040:	3021883a 	mov	r16,r6
   83044:	e0001115 	stw	zero,68(fp)
   83048:	008005c4 	movi	r2,23
   8304c:	1184c92e 	bgeu	r2,r6,84374 <_dtoa_r+0x1674>
   83050:	00c00044 	movi	r3,1
   83054:	00800104 	movi	r2,4
   83058:	1085883a 	add	r2,r2,r2
   8305c:	11000504 	addi	r4,r2,20
   83060:	180b883a 	mov	r5,r3
   83064:	18c00044 	addi	r3,r3,1
   83068:	313ffb2e 	bgeu	r6,r4,83058 <_dtoa_r+0x358>
   8306c:	e1401115 	stw	r5,68(fp)
   83070:	e009883a 	mov	r4,fp
   83074:	00863b80 	call	863b8 <_Balloc>
   83078:	d8800715 	stw	r2,28(sp)
   8307c:	e0801015 	stw	r2,64(fp)
   83080:	00800384 	movi	r2,14
   83084:	1400f736 	bltu	r2,r16,83464 <_dtoa_r+0x764>
   83088:	8800f626 	beq	r17,zero,83464 <_dtoa_r+0x764>
   8308c:	d9c00517 	ldw	r7,20(sp)
   83090:	01c39a0e 	bge	zero,r7,83efc <_dtoa_r+0x11fc>
   83094:	388003cc 	andi	r2,r7,15
   83098:	100490fa 	slli	r2,r2,3
   8309c:	382bd13a 	srai	r21,r7,4
   830a0:	00c00134 	movhi	r3,4
   830a4:	18c04504 	addi	r3,r3,276
   830a8:	1885883a 	add	r2,r3,r2
   830ac:	a8c0040c 	andi	r3,r21,16
   830b0:	12400017 	ldw	r9,0(r2)
   830b4:	12000117 	ldw	r8,4(r2)
   830b8:	18037926 	beq	r3,zero,83ea0 <_dtoa_r+0x11a0>
   830bc:	00800134 	movhi	r2,4
   830c0:	10803b04 	addi	r2,r2,236
   830c4:	11800817 	ldw	r6,32(r2)
   830c8:	11c00917 	ldw	r7,36(r2)
   830cc:	9009883a 	mov	r4,r18
   830d0:	980b883a 	mov	r5,r19
   830d4:	da001715 	stw	r8,92(sp)
   830d8:	da401615 	stw	r9,88(sp)
   830dc:	008b3400 	call	8b340 <__divdf3>
   830e0:	da001717 	ldw	r8,92(sp)
   830e4:	da401617 	ldw	r9,88(sp)
   830e8:	ad4003cc 	andi	r21,r21,15
   830ec:	040000c4 	movi	r16,3
   830f0:	1023883a 	mov	r17,r2
   830f4:	1829883a 	mov	r20,r3
   830f8:	a8001126 	beq	r21,zero,83140 <_dtoa_r+0x440>
   830fc:	05c00134 	movhi	r23,4
   83100:	bdc03b04 	addi	r23,r23,236
   83104:	4805883a 	mov	r2,r9
   83108:	4007883a 	mov	r3,r8
   8310c:	a980004c 	andi	r6,r21,1
   83110:	1009883a 	mov	r4,r2
   83114:	a82bd07a 	srai	r21,r21,1
   83118:	180b883a 	mov	r5,r3
   8311c:	30000426 	beq	r6,zero,83130 <_dtoa_r+0x430>
   83120:	b9800017 	ldw	r6,0(r23)
   83124:	b9c00117 	ldw	r7,4(r23)
   83128:	84000044 	addi	r16,r16,1
   8312c:	008bf680 	call	8bf68 <__muldf3>
   83130:	bdc00204 	addi	r23,r23,8
   83134:	a83ff51e 	bne	r21,zero,8310c <_dtoa_r+0x40c>
   83138:	1013883a 	mov	r9,r2
   8313c:	1811883a 	mov	r8,r3
   83140:	480d883a 	mov	r6,r9
   83144:	400f883a 	mov	r7,r8
   83148:	8809883a 	mov	r4,r17
   8314c:	a00b883a 	mov	r5,r20
   83150:	008b3400 	call	8b340 <__divdf3>
   83154:	d8800f15 	stw	r2,60(sp)
   83158:	d8c01015 	stw	r3,64(sp)
   8315c:	d8c00e17 	ldw	r3,56(sp)
   83160:	18000626 	beq	r3,zero,8317c <_dtoa_r+0x47c>
   83164:	d9000f17 	ldw	r4,60(sp)
   83168:	d9401017 	ldw	r5,64(sp)
   8316c:	000d883a 	mov	r6,zero
   83170:	01cffc34 	movhi	r7,16368
   83174:	008be740 	call	8be74 <__ledf2>
   83178:	10040b16 	blt	r2,zero,841a8 <_dtoa_r+0x14a8>
   8317c:	8009883a 	mov	r4,r16
   83180:	008d1500 	call	8d150 <__floatsidf>
   83184:	d9800f17 	ldw	r6,60(sp)
   83188:	d9c01017 	ldw	r7,64(sp)
   8318c:	1009883a 	mov	r4,r2
   83190:	180b883a 	mov	r5,r3
   83194:	008bf680 	call	8bf68 <__muldf3>
   83198:	000d883a 	mov	r6,zero
   8319c:	01d00734 	movhi	r7,16412
   831a0:	1009883a 	mov	r4,r2
   831a4:	180b883a 	mov	r5,r3
   831a8:	008aa940 	call	8aa94 <__adddf3>
   831ac:	1021883a 	mov	r16,r2
   831b0:	d8800617 	ldw	r2,24(sp)
   831b4:	047f3034 	movhi	r17,64704
   831b8:	1c63883a 	add	r17,r3,r17
   831bc:	10031826 	beq	r2,zero,83e20 <_dtoa_r+0x1120>
   831c0:	d8c00517 	ldw	r3,20(sp)
   831c4:	db000617 	ldw	r12,24(sp)
   831c8:	d8c01315 	stw	r3,76(sp)
   831cc:	d9000b17 	ldw	r4,44(sp)
   831d0:	20038f26 	beq	r4,zero,84010 <_dtoa_r+0x1310>
   831d4:	60bfffc4 	addi	r2,r12,-1
   831d8:	100490fa 	slli	r2,r2,3
   831dc:	00c00134 	movhi	r3,4
   831e0:	18c04504 	addi	r3,r3,276
   831e4:	1885883a 	add	r2,r3,r2
   831e8:	11800017 	ldw	r6,0(r2)
   831ec:	11c00117 	ldw	r7,4(r2)
   831f0:	d8800717 	ldw	r2,28(sp)
   831f4:	0009883a 	mov	r4,zero
   831f8:	014ff834 	movhi	r5,16352
   831fc:	db001615 	stw	r12,88(sp)
   83200:	15c00044 	addi	r23,r2,1
   83204:	008b3400 	call	8b340 <__divdf3>
   83208:	800d883a 	mov	r6,r16
   8320c:	880f883a 	mov	r7,r17
   83210:	1009883a 	mov	r4,r2
   83214:	180b883a 	mov	r5,r3
   83218:	008c7d40 	call	8c7d4 <__subdf3>
   8321c:	d9401017 	ldw	r5,64(sp)
   83220:	d9000f17 	ldw	r4,60(sp)
   83224:	102b883a 	mov	r21,r2
   83228:	d8c01215 	stw	r3,72(sp)
   8322c:	008d0d00 	call	8d0d0 <__fixdfsi>
   83230:	1009883a 	mov	r4,r2
   83234:	1029883a 	mov	r20,r2
   83238:	008d1500 	call	8d150 <__floatsidf>
   8323c:	d9000f17 	ldw	r4,60(sp)
   83240:	d9401017 	ldw	r5,64(sp)
   83244:	100d883a 	mov	r6,r2
   83248:	180f883a 	mov	r7,r3
   8324c:	008c7d40 	call	8c7d4 <__subdf3>
   83250:	1823883a 	mov	r17,r3
   83254:	d8c00717 	ldw	r3,28(sp)
   83258:	d9401217 	ldw	r5,72(sp)
   8325c:	a2000c04 	addi	r8,r20,48
   83260:	1021883a 	mov	r16,r2
   83264:	1a000005 	stb	r8,0(r3)
   83268:	800d883a 	mov	r6,r16
   8326c:	880f883a 	mov	r7,r17
   83270:	a809883a 	mov	r4,r21
   83274:	4029883a 	mov	r20,r8
   83278:	008bd980 	call	8bd98 <__gedf2>
   8327c:	00841d16 	blt	zero,r2,842f4 <_dtoa_r+0x15f4>
   83280:	800d883a 	mov	r6,r16
   83284:	880f883a 	mov	r7,r17
   83288:	0009883a 	mov	r4,zero
   8328c:	014ffc34 	movhi	r5,16368
   83290:	008c7d40 	call	8c7d4 <__subdf3>
   83294:	d9401217 	ldw	r5,72(sp)
   83298:	100d883a 	mov	r6,r2
   8329c:	180f883a 	mov	r7,r3
   832a0:	a809883a 	mov	r4,r21
   832a4:	008bd980 	call	8bd98 <__gedf2>
   832a8:	db001617 	ldw	r12,88(sp)
   832ac:	00840e16 	blt	zero,r2,842e8 <_dtoa_r+0x15e8>
   832b0:	00800044 	movi	r2,1
   832b4:	13006b0e 	bge	r2,r12,83464 <_dtoa_r+0x764>
   832b8:	d9000717 	ldw	r4,28(sp)
   832bc:	dd800f15 	stw	r22,60(sp)
   832c0:	dcc01015 	stw	r19,64(sp)
   832c4:	2319883a 	add	r12,r4,r12
   832c8:	dcc01217 	ldw	r19,72(sp)
   832cc:	602d883a 	mov	r22,r12
   832d0:	dc801215 	stw	r18,72(sp)
   832d4:	b825883a 	mov	r18,r23
   832d8:	00000906 	br	83300 <_dtoa_r+0x600>
   832dc:	008c7d40 	call	8c7d4 <__subdf3>
   832e0:	a80d883a 	mov	r6,r21
   832e4:	980f883a 	mov	r7,r19
   832e8:	1009883a 	mov	r4,r2
   832ec:	180b883a 	mov	r5,r3
   832f0:	008be740 	call	8be74 <__ledf2>
   832f4:	1003e816 	blt	r2,zero,84298 <_dtoa_r+0x1598>
   832f8:	b825883a 	mov	r18,r23
   832fc:	bd83e926 	beq	r23,r22,842a4 <_dtoa_r+0x15a4>
   83300:	a809883a 	mov	r4,r21
   83304:	980b883a 	mov	r5,r19
   83308:	000d883a 	mov	r6,zero
   8330c:	01d00934 	movhi	r7,16420
   83310:	008bf680 	call	8bf68 <__muldf3>
   83314:	000d883a 	mov	r6,zero
   83318:	01d00934 	movhi	r7,16420
   8331c:	8009883a 	mov	r4,r16
   83320:	880b883a 	mov	r5,r17
   83324:	102b883a 	mov	r21,r2
   83328:	1827883a 	mov	r19,r3
   8332c:	008bf680 	call	8bf68 <__muldf3>
   83330:	180b883a 	mov	r5,r3
   83334:	1009883a 	mov	r4,r2
   83338:	1821883a 	mov	r16,r3
   8333c:	1023883a 	mov	r17,r2
   83340:	008d0d00 	call	8d0d0 <__fixdfsi>
   83344:	1009883a 	mov	r4,r2
   83348:	1029883a 	mov	r20,r2
   8334c:	008d1500 	call	8d150 <__floatsidf>
   83350:	8809883a 	mov	r4,r17
   83354:	800b883a 	mov	r5,r16
   83358:	100d883a 	mov	r6,r2
   8335c:	180f883a 	mov	r7,r3
   83360:	008c7d40 	call	8c7d4 <__subdf3>
   83364:	a5000c04 	addi	r20,r20,48
   83368:	a80d883a 	mov	r6,r21
   8336c:	980f883a 	mov	r7,r19
   83370:	1009883a 	mov	r4,r2
   83374:	180b883a 	mov	r5,r3
   83378:	95000005 	stb	r20,0(r18)
   8337c:	1021883a 	mov	r16,r2
   83380:	1823883a 	mov	r17,r3
   83384:	008be740 	call	8be74 <__ledf2>
   83388:	bdc00044 	addi	r23,r23,1
   8338c:	800d883a 	mov	r6,r16
   83390:	880f883a 	mov	r7,r17
   83394:	0009883a 	mov	r4,zero
   83398:	014ffc34 	movhi	r5,16368
   8339c:	103fcf0e 	bge	r2,zero,832dc <_dtoa_r+0x5dc>
   833a0:	d8c01317 	ldw	r3,76(sp)
   833a4:	d8c00515 	stw	r3,20(sp)
   833a8:	d9400917 	ldw	r5,36(sp)
   833ac:	e009883a 	mov	r4,fp
   833b0:	00864600 	call	86460 <_Bfree>
   833b4:	d9000517 	ldw	r4,20(sp)
   833b8:	d9802317 	ldw	r6,140(sp)
   833bc:	d9c02517 	ldw	r7,148(sp)
   833c0:	b8000005 	stb	zero,0(r23)
   833c4:	20800044 	addi	r2,r4,1
   833c8:	30800015 	stw	r2,0(r6)
   833cc:	3802aa26 	beq	r7,zero,83e78 <_dtoa_r+0x1178>
   833d0:	3dc00015 	stw	r23,0(r7)
   833d4:	d8800717 	ldw	r2,28(sp)
   833d8:	003e7906 	br	82dc0 <_dtoa_r+0xc0>
   833dc:	00800434 	movhi	r2,16
   833e0:	10bfffc4 	addi	r2,r2,-1
   833e4:	88a2703a 	and	r17,r17,r2
   833e8:	883e851e 	bne	r17,zero,82e00 <_dtoa_r+0x100>
   833ec:	00800134 	movhi	r2,4
   833f0:	10802604 	addi	r2,r2,152
   833f4:	003e8406 	br	82e08 <_dtoa_r+0x108>
   833f8:	10c00204 	addi	r3,r2,8
   833fc:	003e8706 	br	82e1c <_dtoa_r+0x11c>
   83400:	01400434 	movhi	r5,16
   83404:	297fffc4 	addi	r5,r5,-1
   83408:	994a703a 	and	r5,r19,r5
   8340c:	9009883a 	mov	r4,r18
   83410:	843f0044 	addi	r16,r16,-1023
   83414:	294ffc34 	orhi	r5,r5,16368
   83418:	dd800217 	ldw	r22,8(sp)
   8341c:	d8001115 	stw	zero,68(sp)
   83420:	003ea506 	br	82eb8 <_dtoa_r+0x1b8>
   83424:	00800134 	movhi	r2,4
   83428:	10801d04 	addi	r2,r2,116
   8342c:	003e6406 	br	82dc0 <_dtoa_r+0xc0>
   83430:	e0001115 	stw	zero,68(fp)
   83434:	000b883a 	mov	r5,zero
   83438:	e009883a 	mov	r4,fp
   8343c:	00863b80 	call	863b8 <_Balloc>
   83440:	01bfffc4 	movi	r6,-1
   83444:	01c00044 	movi	r7,1
   83448:	d8800715 	stw	r2,28(sp)
   8344c:	d9800c15 	stw	r6,48(sp)
   83450:	e0801015 	stw	r2,64(fp)
   83454:	d8000315 	stw	zero,12(sp)
   83458:	d9c00b15 	stw	r7,44(sp)
   8345c:	d9800615 	stw	r6,24(sp)
   83460:	d8002215 	stw	zero,136(sp)
   83464:	d8800117 	ldw	r2,4(sp)
   83468:	10008916 	blt	r2,zero,83690 <_dtoa_r+0x990>
   8346c:	d9000517 	ldw	r4,20(sp)
   83470:	00c00384 	movi	r3,14
   83474:	19008616 	blt	r3,r4,83690 <_dtoa_r+0x990>
   83478:	200490fa 	slli	r2,r4,3
   8347c:	00c00134 	movhi	r3,4
   83480:	d9802217 	ldw	r6,136(sp)
   83484:	18c04504 	addi	r3,r3,276
   83488:	1885883a 	add	r2,r3,r2
   8348c:	14000017 	ldw	r16,0(r2)
   83490:	14400117 	ldw	r17,4(r2)
   83494:	30016316 	blt	r6,zero,83a24 <_dtoa_r+0xd24>
   83498:	800d883a 	mov	r6,r16
   8349c:	880f883a 	mov	r7,r17
   834a0:	9009883a 	mov	r4,r18
   834a4:	980b883a 	mov	r5,r19
   834a8:	008b3400 	call	8b340 <__divdf3>
   834ac:	180b883a 	mov	r5,r3
   834b0:	1009883a 	mov	r4,r2
   834b4:	008d0d00 	call	8d0d0 <__fixdfsi>
   834b8:	1009883a 	mov	r4,r2
   834bc:	102b883a 	mov	r21,r2
   834c0:	008d1500 	call	8d150 <__floatsidf>
   834c4:	800d883a 	mov	r6,r16
   834c8:	880f883a 	mov	r7,r17
   834cc:	1009883a 	mov	r4,r2
   834d0:	180b883a 	mov	r5,r3
   834d4:	008bf680 	call	8bf68 <__muldf3>
   834d8:	100d883a 	mov	r6,r2
   834dc:	180f883a 	mov	r7,r3
   834e0:	9009883a 	mov	r4,r18
   834e4:	980b883a 	mov	r5,r19
   834e8:	008c7d40 	call	8c7d4 <__subdf3>
   834ec:	d9c00717 	ldw	r7,28(sp)
   834f0:	1009883a 	mov	r4,r2
   834f4:	a8800c04 	addi	r2,r21,48
   834f8:	38800005 	stb	r2,0(r7)
   834fc:	3dc00044 	addi	r23,r7,1
   83500:	d9c00617 	ldw	r7,24(sp)
   83504:	01800044 	movi	r6,1
   83508:	180b883a 	mov	r5,r3
   8350c:	2005883a 	mov	r2,r4
   83510:	39803826 	beq	r7,r6,835f4 <_dtoa_r+0x8f4>
   83514:	000d883a 	mov	r6,zero
   83518:	01d00934 	movhi	r7,16420
   8351c:	008bf680 	call	8bf68 <__muldf3>
   83520:	000d883a 	mov	r6,zero
   83524:	000f883a 	mov	r7,zero
   83528:	1009883a 	mov	r4,r2
   8352c:	180b883a 	mov	r5,r3
   83530:	1025883a 	mov	r18,r2
   83534:	1827883a 	mov	r19,r3
   83538:	008bd100 	call	8bd10 <__eqdf2>
   8353c:	103f9a26 	beq	r2,zero,833a8 <_dtoa_r+0x6a8>
   83540:	d9c00617 	ldw	r7,24(sp)
   83544:	d8c00717 	ldw	r3,28(sp)
   83548:	b829883a 	mov	r20,r23
   8354c:	38bfffc4 	addi	r2,r7,-1
   83550:	18ad883a 	add	r22,r3,r2
   83554:	00000a06 	br	83580 <_dtoa_r+0x880>
   83558:	008bf680 	call	8bf68 <__muldf3>
   8355c:	000d883a 	mov	r6,zero
   83560:	000f883a 	mov	r7,zero
   83564:	1009883a 	mov	r4,r2
   83568:	180b883a 	mov	r5,r3
   8356c:	1025883a 	mov	r18,r2
   83570:	1827883a 	mov	r19,r3
   83574:	b829883a 	mov	r20,r23
   83578:	008bd100 	call	8bd10 <__eqdf2>
   8357c:	103f8a26 	beq	r2,zero,833a8 <_dtoa_r+0x6a8>
   83580:	800d883a 	mov	r6,r16
   83584:	880f883a 	mov	r7,r17
   83588:	9009883a 	mov	r4,r18
   8358c:	980b883a 	mov	r5,r19
   83590:	008b3400 	call	8b340 <__divdf3>
   83594:	180b883a 	mov	r5,r3
   83598:	1009883a 	mov	r4,r2
   8359c:	008d0d00 	call	8d0d0 <__fixdfsi>
   835a0:	1009883a 	mov	r4,r2
   835a4:	102b883a 	mov	r21,r2
   835a8:	008d1500 	call	8d150 <__floatsidf>
   835ac:	800d883a 	mov	r6,r16
   835b0:	880f883a 	mov	r7,r17
   835b4:	1009883a 	mov	r4,r2
   835b8:	180b883a 	mov	r5,r3
   835bc:	008bf680 	call	8bf68 <__muldf3>
   835c0:	100d883a 	mov	r6,r2
   835c4:	180f883a 	mov	r7,r3
   835c8:	9009883a 	mov	r4,r18
   835cc:	980b883a 	mov	r5,r19
   835d0:	008c7d40 	call	8c7d4 <__subdf3>
   835d4:	aa000c04 	addi	r8,r21,48
   835d8:	a2000005 	stb	r8,0(r20)
   835dc:	000d883a 	mov	r6,zero
   835e0:	01d00934 	movhi	r7,16420
   835e4:	1009883a 	mov	r4,r2
   835e8:	180b883a 	mov	r5,r3
   835ec:	a5c00044 	addi	r23,r20,1
   835f0:	b53fd91e 	bne	r22,r20,83558 <_dtoa_r+0x858>
   835f4:	100d883a 	mov	r6,r2
   835f8:	180f883a 	mov	r7,r3
   835fc:	1009883a 	mov	r4,r2
   83600:	180b883a 	mov	r5,r3
   83604:	008aa940 	call	8aa94 <__adddf3>
   83608:	100d883a 	mov	r6,r2
   8360c:	180f883a 	mov	r7,r3
   83610:	8009883a 	mov	r4,r16
   83614:	880b883a 	mov	r5,r17
   83618:	1027883a 	mov	r19,r2
   8361c:	1825883a 	mov	r18,r3
   83620:	008be740 	call	8be74 <__ledf2>
   83624:	10000816 	blt	r2,zero,83648 <_dtoa_r+0x948>
   83628:	980d883a 	mov	r6,r19
   8362c:	900f883a 	mov	r7,r18
   83630:	8009883a 	mov	r4,r16
   83634:	880b883a 	mov	r5,r17
   83638:	008bd100 	call	8bd10 <__eqdf2>
   8363c:	103f5a1e 	bne	r2,zero,833a8 <_dtoa_r+0x6a8>
   83640:	ad40004c 	andi	r21,r21,1
   83644:	a83f5826 	beq	r21,zero,833a8 <_dtoa_r+0x6a8>
   83648:	bd3fffc3 	ldbu	r20,-1(r23)
   8364c:	b8bfffc4 	addi	r2,r23,-1
   83650:	1007883a 	mov	r3,r2
   83654:	01400e44 	movi	r5,57
   83658:	d9800717 	ldw	r6,28(sp)
   8365c:	00000506 	br	83674 <_dtoa_r+0x974>
   83660:	18ffffc4 	addi	r3,r3,-1
   83664:	11824726 	beq	r2,r6,83f84 <_dtoa_r+0x1284>
   83668:	1d000003 	ldbu	r20,0(r3)
   8366c:	102f883a 	mov	r23,r2
   83670:	10bfffc4 	addi	r2,r2,-1
   83674:	a1003fcc 	andi	r4,r20,255
   83678:	2100201c 	xori	r4,r4,128
   8367c:	213fe004 	addi	r4,r4,-128
   83680:	217ff726 	beq	r4,r5,83660 <_dtoa_r+0x960>
   83684:	a2000044 	addi	r8,r20,1
   83688:	12000005 	stb	r8,0(r2)
   8368c:	003f4606 	br	833a8 <_dtoa_r+0x6a8>
   83690:	d9000b17 	ldw	r4,44(sp)
   83694:	2000c826 	beq	r4,zero,839b8 <_dtoa_r+0xcb8>
   83698:	d9800317 	ldw	r6,12(sp)
   8369c:	00c00044 	movi	r3,1
   836a0:	1980f90e 	bge	r3,r6,83a88 <_dtoa_r+0xd88>
   836a4:	d8800617 	ldw	r2,24(sp)
   836a8:	d8c00a17 	ldw	r3,40(sp)
   836ac:	157fffc4 	addi	r21,r2,-1
   836b0:	1d41f316 	blt	r3,r21,83e80 <_dtoa_r+0x1180>
   836b4:	1d6bc83a 	sub	r21,r3,r21
   836b8:	d9c00617 	ldw	r7,24(sp)
   836bc:	3802aa16 	blt	r7,zero,84168 <_dtoa_r+0x1468>
   836c0:	dd000817 	ldw	r20,32(sp)
   836c4:	d8800617 	ldw	r2,24(sp)
   836c8:	d8c00817 	ldw	r3,32(sp)
   836cc:	01400044 	movi	r5,1
   836d0:	e009883a 	mov	r4,fp
   836d4:	1887883a 	add	r3,r3,r2
   836d8:	d8c00815 	stw	r3,32(sp)
   836dc:	b0ad883a 	add	r22,r22,r2
   836e0:	00867ec0 	call	867ec <__i2b>
   836e4:	1023883a 	mov	r17,r2
   836e8:	a0000826 	beq	r20,zero,8370c <_dtoa_r+0xa0c>
   836ec:	0580070e 	bge	zero,r22,8370c <_dtoa_r+0xa0c>
   836f0:	a005883a 	mov	r2,r20
   836f4:	b500b916 	blt	r22,r20,839dc <_dtoa_r+0xcdc>
   836f8:	d9000817 	ldw	r4,32(sp)
   836fc:	a0a9c83a 	sub	r20,r20,r2
   83700:	b0adc83a 	sub	r22,r22,r2
   83704:	2089c83a 	sub	r4,r4,r2
   83708:	d9000815 	stw	r4,32(sp)
   8370c:	d9800a17 	ldw	r6,40(sp)
   83710:	0181810e 	bge	zero,r6,83d18 <_dtoa_r+0x1018>
   83714:	d9c00b17 	ldw	r7,44(sp)
   83718:	3800b326 	beq	r7,zero,839e8 <_dtoa_r+0xce8>
   8371c:	a800b226 	beq	r21,zero,839e8 <_dtoa_r+0xce8>
   83720:	880b883a 	mov	r5,r17
   83724:	a80d883a 	mov	r6,r21
   83728:	e009883a 	mov	r4,fp
   8372c:	0086ab40 	call	86ab4 <__pow5mult>
   83730:	d9800917 	ldw	r6,36(sp)
   83734:	100b883a 	mov	r5,r2
   83738:	e009883a 	mov	r4,fp
   8373c:	1023883a 	mov	r17,r2
   83740:	00868280 	call	86828 <__multiply>
   83744:	1021883a 	mov	r16,r2
   83748:	d8800a17 	ldw	r2,40(sp)
   8374c:	d9400917 	ldw	r5,36(sp)
   83750:	e009883a 	mov	r4,fp
   83754:	1545c83a 	sub	r2,r2,r21
   83758:	d8800a15 	stw	r2,40(sp)
   8375c:	00864600 	call	86460 <_Bfree>
   83760:	d8c00a17 	ldw	r3,40(sp)
   83764:	18009f1e 	bne	r3,zero,839e4 <_dtoa_r+0xce4>
   83768:	05c00044 	movi	r23,1
   8376c:	e009883a 	mov	r4,fp
   83770:	b80b883a 	mov	r5,r23
   83774:	00867ec0 	call	867ec <__i2b>
   83778:	d9000d17 	ldw	r4,52(sp)
   8377c:	102b883a 	mov	r21,r2
   83780:	2000ce26 	beq	r4,zero,83abc <_dtoa_r+0xdbc>
   83784:	200d883a 	mov	r6,r4
   83788:	100b883a 	mov	r5,r2
   8378c:	e009883a 	mov	r4,fp
   83790:	0086ab40 	call	86ab4 <__pow5mult>
   83794:	d9800317 	ldw	r6,12(sp)
   83798:	102b883a 	mov	r21,r2
   8379c:	b981810e 	bge	r23,r6,83da4 <_dtoa_r+0x10a4>
   837a0:	0027883a 	mov	r19,zero
   837a4:	a8800417 	ldw	r2,16(r21)
   837a8:	05c00804 	movi	r23,32
   837ac:	10800104 	addi	r2,r2,4
   837b0:	1085883a 	add	r2,r2,r2
   837b4:	1085883a 	add	r2,r2,r2
   837b8:	a885883a 	add	r2,r21,r2
   837bc:	11000017 	ldw	r4,0(r2)
   837c0:	00866d40 	call	866d4 <__hi0bits>
   837c4:	b885c83a 	sub	r2,r23,r2
   837c8:	1585883a 	add	r2,r2,r22
   837cc:	108007cc 	andi	r2,r2,31
   837d0:	1000b326 	beq	r2,zero,83aa0 <_dtoa_r+0xda0>
   837d4:	00c00804 	movi	r3,32
   837d8:	1887c83a 	sub	r3,r3,r2
   837dc:	01000104 	movi	r4,4
   837e0:	20c2cd0e 	bge	r4,r3,84318 <_dtoa_r+0x1618>
   837e4:	00c00704 	movi	r3,28
   837e8:	1885c83a 	sub	r2,r3,r2
   837ec:	d8c00817 	ldw	r3,32(sp)
   837f0:	a0a9883a 	add	r20,r20,r2
   837f4:	b0ad883a 	add	r22,r22,r2
   837f8:	1887883a 	add	r3,r3,r2
   837fc:	d8c00815 	stw	r3,32(sp)
   83800:	d9800817 	ldw	r6,32(sp)
   83804:	0180040e 	bge	zero,r6,83818 <_dtoa_r+0xb18>
   83808:	800b883a 	mov	r5,r16
   8380c:	e009883a 	mov	r4,fp
   83810:	0086bf40 	call	86bf4 <__lshift>
   83814:	1021883a 	mov	r16,r2
   83818:	0580050e 	bge	zero,r22,83830 <_dtoa_r+0xb30>
   8381c:	a80b883a 	mov	r5,r21
   83820:	b00d883a 	mov	r6,r22
   83824:	e009883a 	mov	r4,fp
   83828:	0086bf40 	call	86bf4 <__lshift>
   8382c:	102b883a 	mov	r21,r2
   83830:	d9c00e17 	ldw	r7,56(sp)
   83834:	3801211e 	bne	r7,zero,83cbc <_dtoa_r+0xfbc>
   83838:	d9800617 	ldw	r6,24(sp)
   8383c:	0181380e 	bge	zero,r6,83d20 <_dtoa_r+0x1020>
   83840:	d8c00b17 	ldw	r3,44(sp)
   83844:	1800ab1e 	bne	r3,zero,83af4 <_dtoa_r+0xdf4>
   83848:	dc800717 	ldw	r18,28(sp)
   8384c:	dcc00617 	ldw	r19,24(sp)
   83850:	9029883a 	mov	r20,r18
   83854:	00000206 	br	83860 <_dtoa_r+0xb60>
   83858:	00864880 	call	86488 <__multadd>
   8385c:	1021883a 	mov	r16,r2
   83860:	a80b883a 	mov	r5,r21
   83864:	8009883a 	mov	r4,r16
   83868:	0082ad80 	call	82ad8 <quorem>
   8386c:	10800c04 	addi	r2,r2,48
   83870:	90800005 	stb	r2,0(r18)
   83874:	94800044 	addi	r18,r18,1
   83878:	9507c83a 	sub	r3,r18,r20
   8387c:	000f883a 	mov	r7,zero
   83880:	01800284 	movi	r6,10
   83884:	800b883a 	mov	r5,r16
   83888:	e009883a 	mov	r4,fp
   8388c:	1cfff216 	blt	r3,r19,83858 <_dtoa_r+0xb58>
   83890:	1011883a 	mov	r8,r2
   83894:	d8800617 	ldw	r2,24(sp)
   83898:	0082370e 	bge	zero,r2,84178 <_dtoa_r+0x1478>
   8389c:	d9000717 	ldw	r4,28(sp)
   838a0:	0025883a 	mov	r18,zero
   838a4:	20af883a 	add	r23,r4,r2
   838a8:	01800044 	movi	r6,1
   838ac:	800b883a 	mov	r5,r16
   838b0:	e009883a 	mov	r4,fp
   838b4:	da001715 	stw	r8,92(sp)
   838b8:	0086bf40 	call	86bf4 <__lshift>
   838bc:	a80b883a 	mov	r5,r21
   838c0:	1009883a 	mov	r4,r2
   838c4:	d8800915 	stw	r2,36(sp)
   838c8:	0086d3c0 	call	86d3c <__mcmp>
   838cc:	da001717 	ldw	r8,92(sp)
   838d0:	0081800e 	bge	zero,r2,83ed4 <_dtoa_r+0x11d4>
   838d4:	b93fffc3 	ldbu	r4,-1(r23)
   838d8:	b8bfffc4 	addi	r2,r23,-1
   838dc:	1007883a 	mov	r3,r2
   838e0:	01800e44 	movi	r6,57
   838e4:	d9c00717 	ldw	r7,28(sp)
   838e8:	00000506 	br	83900 <_dtoa_r+0xc00>
   838ec:	18ffffc4 	addi	r3,r3,-1
   838f0:	11c12326 	beq	r2,r7,83d80 <_dtoa_r+0x1080>
   838f4:	19000003 	ldbu	r4,0(r3)
   838f8:	102f883a 	mov	r23,r2
   838fc:	10bfffc4 	addi	r2,r2,-1
   83900:	21403fcc 	andi	r5,r4,255
   83904:	2940201c 	xori	r5,r5,128
   83908:	297fe004 	addi	r5,r5,-128
   8390c:	29bff726 	beq	r5,r6,838ec <_dtoa_r+0xbec>
   83910:	21000044 	addi	r4,r4,1
   83914:	11000005 	stb	r4,0(r2)
   83918:	a80b883a 	mov	r5,r21
   8391c:	e009883a 	mov	r4,fp
   83920:	00864600 	call	86460 <_Bfree>
   83924:	883ea026 	beq	r17,zero,833a8 <_dtoa_r+0x6a8>
   83928:	90000426 	beq	r18,zero,8393c <_dtoa_r+0xc3c>
   8392c:	94400326 	beq	r18,r17,8393c <_dtoa_r+0xc3c>
   83930:	900b883a 	mov	r5,r18
   83934:	e009883a 	mov	r4,fp
   83938:	00864600 	call	86460 <_Bfree>
   8393c:	880b883a 	mov	r5,r17
   83940:	e009883a 	mov	r4,fp
   83944:	00864600 	call	86460 <_Bfree>
   83948:	003e9706 	br	833a8 <_dtoa_r+0x6a8>
   8394c:	01800044 	movi	r6,1
   83950:	d9800e15 	stw	r6,56(sp)
   83954:	003d9606 	br	82fb0 <_dtoa_r+0x2b0>
   83958:	d8800817 	ldw	r2,32(sp)
   8395c:	d8c00517 	ldw	r3,20(sp)
   83960:	d8000d15 	stw	zero,52(sp)
   83964:	10c5c83a 	sub	r2,r2,r3
   83968:	00c9c83a 	sub	r4,zero,r3
   8396c:	d8800815 	stw	r2,32(sp)
   83970:	d9000a15 	stw	r4,40(sp)
   83974:	003d9706 	br	82fd4 <_dtoa_r+0x2d4>
   83978:	05adc83a 	sub	r22,zero,r22
   8397c:	dd800815 	stw	r22,32(sp)
   83980:	002d883a 	mov	r22,zero
   83984:	003d8e06 	br	82fc0 <_dtoa_r+0x2c0>
   83988:	d9000517 	ldw	r4,20(sp)
   8398c:	008d1500 	call	8d150 <__floatsidf>
   83990:	100d883a 	mov	r6,r2
   83994:	180f883a 	mov	r7,r3
   83998:	a009883a 	mov	r4,r20
   8399c:	880b883a 	mov	r5,r17
   839a0:	008bd100 	call	8bd10 <__eqdf2>
   839a4:	103d7126 	beq	r2,zero,82f6c <_dtoa_r+0x26c>
   839a8:	d9c00517 	ldw	r7,20(sp)
   839ac:	39ffffc4 	addi	r7,r7,-1
   839b0:	d9c00515 	stw	r7,20(sp)
   839b4:	003d6d06 	br	82f6c <_dtoa_r+0x26c>
   839b8:	dd400a17 	ldw	r21,40(sp)
   839bc:	dd000817 	ldw	r20,32(sp)
   839c0:	0023883a 	mov	r17,zero
   839c4:	003f4806 	br	836e8 <_dtoa_r+0x9e8>
   839c8:	10e3c83a 	sub	r17,r2,r3
   839cc:	9448983a 	sll	r4,r18,r17
   839d0:	003d3206 	br	82e9c <_dtoa_r+0x19c>
   839d4:	d8000e15 	stw	zero,56(sp)
   839d8:	003d7506 	br	82fb0 <_dtoa_r+0x2b0>
   839dc:	b005883a 	mov	r2,r22
   839e0:	003f4506 	br	836f8 <_dtoa_r+0x9f8>
   839e4:	dc000915 	stw	r16,36(sp)
   839e8:	d9800a17 	ldw	r6,40(sp)
   839ec:	d9400917 	ldw	r5,36(sp)
   839f0:	e009883a 	mov	r4,fp
   839f4:	0086ab40 	call	86ab4 <__pow5mult>
   839f8:	1021883a 	mov	r16,r2
   839fc:	003f5a06 	br	83768 <_dtoa_r+0xa68>
   83a00:	01c00044 	movi	r7,1
   83a04:	d9c00b15 	stw	r7,44(sp)
   83a08:	d8802217 	ldw	r2,136(sp)
   83a0c:	0081280e 	bge	zero,r2,83eb0 <_dtoa_r+0x11b0>
   83a10:	100d883a 	mov	r6,r2
   83a14:	1021883a 	mov	r16,r2
   83a18:	d8800c15 	stw	r2,48(sp)
   83a1c:	d8800615 	stw	r2,24(sp)
   83a20:	003d8806 	br	83044 <_dtoa_r+0x344>
   83a24:	d8800617 	ldw	r2,24(sp)
   83a28:	00be9b16 	blt	zero,r2,83498 <_dtoa_r+0x798>
   83a2c:	10010f1e 	bne	r2,zero,83e6c <_dtoa_r+0x116c>
   83a30:	880b883a 	mov	r5,r17
   83a34:	000d883a 	mov	r6,zero
   83a38:	01d00534 	movhi	r7,16404
   83a3c:	8009883a 	mov	r4,r16
   83a40:	008bf680 	call	8bf68 <__muldf3>
   83a44:	900d883a 	mov	r6,r18
   83a48:	980f883a 	mov	r7,r19
   83a4c:	1009883a 	mov	r4,r2
   83a50:	180b883a 	mov	r5,r3
   83a54:	008bd980 	call	8bd98 <__gedf2>
   83a58:	002b883a 	mov	r21,zero
   83a5c:	0023883a 	mov	r17,zero
   83a60:	1000bf16 	blt	r2,zero,83d60 <_dtoa_r+0x1060>
   83a64:	d9802217 	ldw	r6,136(sp)
   83a68:	ddc00717 	ldw	r23,28(sp)
   83a6c:	018c303a 	nor	r6,zero,r6
   83a70:	d9800515 	stw	r6,20(sp)
   83a74:	a80b883a 	mov	r5,r21
   83a78:	e009883a 	mov	r4,fp
   83a7c:	00864600 	call	86460 <_Bfree>
   83a80:	883e4926 	beq	r17,zero,833a8 <_dtoa_r+0x6a8>
   83a84:	003fad06 	br	8393c <_dtoa_r+0xc3c>
   83a88:	d9c01117 	ldw	r7,68(sp)
   83a8c:	3801bc26 	beq	r7,zero,84180 <_dtoa_r+0x1480>
   83a90:	10810cc4 	addi	r2,r2,1075
   83a94:	dd400a17 	ldw	r21,40(sp)
   83a98:	dd000817 	ldw	r20,32(sp)
   83a9c:	003f0a06 	br	836c8 <_dtoa_r+0x9c8>
   83aa0:	00800704 	movi	r2,28
   83aa4:	d9000817 	ldw	r4,32(sp)
   83aa8:	a0a9883a 	add	r20,r20,r2
   83aac:	b0ad883a 	add	r22,r22,r2
   83ab0:	2089883a 	add	r4,r4,r2
   83ab4:	d9000815 	stw	r4,32(sp)
   83ab8:	003f5106 	br	83800 <_dtoa_r+0xb00>
   83abc:	d8c00317 	ldw	r3,12(sp)
   83ac0:	b8c1fc0e 	bge	r23,r3,842b4 <_dtoa_r+0x15b4>
   83ac4:	0027883a 	mov	r19,zero
   83ac8:	b805883a 	mov	r2,r23
   83acc:	003f3e06 	br	837c8 <_dtoa_r+0xac8>
   83ad0:	880b883a 	mov	r5,r17
   83ad4:	e009883a 	mov	r4,fp
   83ad8:	000f883a 	mov	r7,zero
   83adc:	01800284 	movi	r6,10
   83ae0:	00864880 	call	86488 <__multadd>
   83ae4:	d9000c17 	ldw	r4,48(sp)
   83ae8:	1023883a 	mov	r17,r2
   83aec:	0102040e 	bge	zero,r4,84300 <_dtoa_r+0x1600>
   83af0:	d9000615 	stw	r4,24(sp)
   83af4:	0500050e 	bge	zero,r20,83b0c <_dtoa_r+0xe0c>
   83af8:	880b883a 	mov	r5,r17
   83afc:	a00d883a 	mov	r6,r20
   83b00:	e009883a 	mov	r4,fp
   83b04:	0086bf40 	call	86bf4 <__lshift>
   83b08:	1023883a 	mov	r17,r2
   83b0c:	9801241e 	bne	r19,zero,83fa0 <_dtoa_r+0x12a0>
   83b10:	8829883a 	mov	r20,r17
   83b14:	d9000617 	ldw	r4,24(sp)
   83b18:	dcc00717 	ldw	r19,28(sp)
   83b1c:	9480004c 	andi	r18,r18,1
   83b20:	20bfffc4 	addi	r2,r4,-1
   83b24:	9885883a 	add	r2,r19,r2
   83b28:	d8800415 	stw	r2,16(sp)
   83b2c:	dc800615 	stw	r18,24(sp)
   83b30:	a80b883a 	mov	r5,r21
   83b34:	8009883a 	mov	r4,r16
   83b38:	0082ad80 	call	82ad8 <quorem>
   83b3c:	880b883a 	mov	r5,r17
   83b40:	8009883a 	mov	r4,r16
   83b44:	102f883a 	mov	r23,r2
   83b48:	0086d3c0 	call	86d3c <__mcmp>
   83b4c:	a80b883a 	mov	r5,r21
   83b50:	a00d883a 	mov	r6,r20
   83b54:	e009883a 	mov	r4,fp
   83b58:	102d883a 	mov	r22,r2
   83b5c:	0086d9c0 	call	86d9c <__mdiff>
   83b60:	1007883a 	mov	r3,r2
   83b64:	10800317 	ldw	r2,12(r2)
   83b68:	bc800c04 	addi	r18,r23,48
   83b6c:	180b883a 	mov	r5,r3
   83b70:	10004e1e 	bne	r2,zero,83cac <_dtoa_r+0xfac>
   83b74:	8009883a 	mov	r4,r16
   83b78:	d8c01615 	stw	r3,88(sp)
   83b7c:	0086d3c0 	call	86d3c <__mcmp>
   83b80:	d8c01617 	ldw	r3,88(sp)
   83b84:	e009883a 	mov	r4,fp
   83b88:	d8801615 	stw	r2,88(sp)
   83b8c:	180b883a 	mov	r5,r3
   83b90:	00864600 	call	86460 <_Bfree>
   83b94:	d8801617 	ldw	r2,88(sp)
   83b98:	1000041e 	bne	r2,zero,83bac <_dtoa_r+0xeac>
   83b9c:	d9800317 	ldw	r6,12(sp)
   83ba0:	3000021e 	bne	r6,zero,83bac <_dtoa_r+0xeac>
   83ba4:	d8c00617 	ldw	r3,24(sp)
   83ba8:	18003726 	beq	r3,zero,83c88 <_dtoa_r+0xf88>
   83bac:	b0002016 	blt	r22,zero,83c30 <_dtoa_r+0xf30>
   83bb0:	b000041e 	bne	r22,zero,83bc4 <_dtoa_r+0xec4>
   83bb4:	d9000317 	ldw	r4,12(sp)
   83bb8:	2000021e 	bne	r4,zero,83bc4 <_dtoa_r+0xec4>
   83bbc:	d8c00617 	ldw	r3,24(sp)
   83bc0:	18001b26 	beq	r3,zero,83c30 <_dtoa_r+0xf30>
   83bc4:	00810716 	blt	zero,r2,83fe4 <_dtoa_r+0x12e4>
   83bc8:	d8c00417 	ldw	r3,16(sp)
   83bcc:	9d800044 	addi	r22,r19,1
   83bd0:	9c800005 	stb	r18,0(r19)
   83bd4:	b02f883a 	mov	r23,r22
   83bd8:	98c10626 	beq	r19,r3,83ff4 <_dtoa_r+0x12f4>
   83bdc:	800b883a 	mov	r5,r16
   83be0:	000f883a 	mov	r7,zero
   83be4:	01800284 	movi	r6,10
   83be8:	e009883a 	mov	r4,fp
   83bec:	00864880 	call	86488 <__multadd>
   83bf0:	1021883a 	mov	r16,r2
   83bf4:	000f883a 	mov	r7,zero
   83bf8:	01800284 	movi	r6,10
   83bfc:	880b883a 	mov	r5,r17
   83c00:	e009883a 	mov	r4,fp
   83c04:	8d002526 	beq	r17,r20,83c9c <_dtoa_r+0xf9c>
   83c08:	00864880 	call	86488 <__multadd>
   83c0c:	a00b883a 	mov	r5,r20
   83c10:	000f883a 	mov	r7,zero
   83c14:	01800284 	movi	r6,10
   83c18:	e009883a 	mov	r4,fp
   83c1c:	1023883a 	mov	r17,r2
   83c20:	00864880 	call	86488 <__multadd>
   83c24:	1029883a 	mov	r20,r2
   83c28:	b027883a 	mov	r19,r22
   83c2c:	003fc006 	br	83b30 <_dtoa_r+0xe30>
   83c30:	9011883a 	mov	r8,r18
   83c34:	00800e0e 	bge	zero,r2,83c70 <_dtoa_r+0xf70>
   83c38:	800b883a 	mov	r5,r16
   83c3c:	01800044 	movi	r6,1
   83c40:	e009883a 	mov	r4,fp
   83c44:	da001715 	stw	r8,92(sp)
   83c48:	0086bf40 	call	86bf4 <__lshift>
   83c4c:	a80b883a 	mov	r5,r21
   83c50:	1009883a 	mov	r4,r2
   83c54:	1021883a 	mov	r16,r2
   83c58:	0086d3c0 	call	86d3c <__mcmp>
   83c5c:	da001717 	ldw	r8,92(sp)
   83c60:	0081960e 	bge	zero,r2,842bc <_dtoa_r+0x15bc>
   83c64:	00800e44 	movi	r2,57
   83c68:	40817026 	beq	r8,r2,8422c <_dtoa_r+0x152c>
   83c6c:	ba000c44 	addi	r8,r23,49
   83c70:	8825883a 	mov	r18,r17
   83c74:	9dc00044 	addi	r23,r19,1
   83c78:	9a000005 	stb	r8,0(r19)
   83c7c:	a023883a 	mov	r17,r20
   83c80:	dc000915 	stw	r16,36(sp)
   83c84:	003f2406 	br	83918 <_dtoa_r+0xc18>
   83c88:	00800e44 	movi	r2,57
   83c8c:	9011883a 	mov	r8,r18
   83c90:	90816626 	beq	r18,r2,8422c <_dtoa_r+0x152c>
   83c94:	05bff516 	blt	zero,r22,83c6c <_dtoa_r+0xf6c>
   83c98:	003ff506 	br	83c70 <_dtoa_r+0xf70>
   83c9c:	00864880 	call	86488 <__multadd>
   83ca0:	1023883a 	mov	r17,r2
   83ca4:	1029883a 	mov	r20,r2
   83ca8:	003fdf06 	br	83c28 <_dtoa_r+0xf28>
   83cac:	e009883a 	mov	r4,fp
   83cb0:	00864600 	call	86460 <_Bfree>
   83cb4:	00800044 	movi	r2,1
   83cb8:	003fbc06 	br	83bac <_dtoa_r+0xeac>
   83cbc:	a80b883a 	mov	r5,r21
   83cc0:	8009883a 	mov	r4,r16
   83cc4:	0086d3c0 	call	86d3c <__mcmp>
   83cc8:	103edb0e 	bge	r2,zero,83838 <_dtoa_r+0xb38>
   83ccc:	800b883a 	mov	r5,r16
   83cd0:	000f883a 	mov	r7,zero
   83cd4:	01800284 	movi	r6,10
   83cd8:	e009883a 	mov	r4,fp
   83cdc:	00864880 	call	86488 <__multadd>
   83ce0:	1021883a 	mov	r16,r2
   83ce4:	d8800517 	ldw	r2,20(sp)
   83ce8:	d8c00b17 	ldw	r3,44(sp)
   83cec:	10bfffc4 	addi	r2,r2,-1
   83cf0:	d8800515 	stw	r2,20(sp)
   83cf4:	183f761e 	bne	r3,zero,83ad0 <_dtoa_r+0xdd0>
   83cf8:	d9000c17 	ldw	r4,48(sp)
   83cfc:	0101730e 	bge	zero,r4,842cc <_dtoa_r+0x15cc>
   83d00:	d9000615 	stw	r4,24(sp)
   83d04:	003ed006 	br	83848 <_dtoa_r+0xb48>
   83d08:	00800084 	movi	r2,2
   83d0c:	3081861e 	bne	r6,r2,84328 <_dtoa_r+0x1628>
   83d10:	d8000b15 	stw	zero,44(sp)
   83d14:	003f3c06 	br	83a08 <_dtoa_r+0xd08>
   83d18:	dc000917 	ldw	r16,36(sp)
   83d1c:	003e9206 	br	83768 <_dtoa_r+0xa68>
   83d20:	d9c00317 	ldw	r7,12(sp)
   83d24:	00800084 	movi	r2,2
   83d28:	11fec50e 	bge	r2,r7,83840 <_dtoa_r+0xb40>
   83d2c:	d9000617 	ldw	r4,24(sp)
   83d30:	20013c1e 	bne	r4,zero,84224 <_dtoa_r+0x1524>
   83d34:	a80b883a 	mov	r5,r21
   83d38:	000f883a 	mov	r7,zero
   83d3c:	01800144 	movi	r6,5
   83d40:	e009883a 	mov	r4,fp
   83d44:	00864880 	call	86488 <__multadd>
   83d48:	100b883a 	mov	r5,r2
   83d4c:	8009883a 	mov	r4,r16
   83d50:	102b883a 	mov	r21,r2
   83d54:	0086d3c0 	call	86d3c <__mcmp>
   83d58:	dc000915 	stw	r16,36(sp)
   83d5c:	00bf410e 	bge	zero,r2,83a64 <_dtoa_r+0xd64>
   83d60:	d9c00717 	ldw	r7,28(sp)
   83d64:	00800c44 	movi	r2,49
   83d68:	38800005 	stb	r2,0(r7)
   83d6c:	d8800517 	ldw	r2,20(sp)
   83d70:	3dc00044 	addi	r23,r7,1
   83d74:	10800044 	addi	r2,r2,1
   83d78:	d8800515 	stw	r2,20(sp)
   83d7c:	003f3d06 	br	83a74 <_dtoa_r+0xd74>
   83d80:	d9800517 	ldw	r6,20(sp)
   83d84:	d9c00717 	ldw	r7,28(sp)
   83d88:	00800c44 	movi	r2,49
   83d8c:	31800044 	addi	r6,r6,1
   83d90:	d9800515 	stw	r6,20(sp)
   83d94:	38800005 	stb	r2,0(r7)
   83d98:	003edf06 	br	83918 <_dtoa_r+0xc18>
   83d9c:	d8000b15 	stw	zero,44(sp)
   83da0:	003c9f06 	br	83020 <_dtoa_r+0x320>
   83da4:	903e7e1e 	bne	r18,zero,837a0 <_dtoa_r+0xaa0>
   83da8:	00800434 	movhi	r2,16
   83dac:	10bfffc4 	addi	r2,r2,-1
   83db0:	9884703a 	and	r2,r19,r2
   83db4:	1000ea1e 	bne	r2,zero,84160 <_dtoa_r+0x1460>
   83db8:	9cdffc2c 	andhi	r19,r19,32752
   83dbc:	9800e826 	beq	r19,zero,84160 <_dtoa_r+0x1460>
   83dc0:	d9c00817 	ldw	r7,32(sp)
   83dc4:	b5800044 	addi	r22,r22,1
   83dc8:	04c00044 	movi	r19,1
   83dcc:	39c00044 	addi	r7,r7,1
   83dd0:	d9c00815 	stw	r7,32(sp)
   83dd4:	d8800d17 	ldw	r2,52(sp)
   83dd8:	103e721e 	bne	r2,zero,837a4 <_dtoa_r+0xaa4>
   83ddc:	00800044 	movi	r2,1
   83de0:	003e7906 	br	837c8 <_dtoa_r+0xac8>
   83de4:	8009883a 	mov	r4,r16
   83de8:	008d1500 	call	8d150 <__floatsidf>
   83dec:	d9800f17 	ldw	r6,60(sp)
   83df0:	d9c01017 	ldw	r7,64(sp)
   83df4:	1009883a 	mov	r4,r2
   83df8:	180b883a 	mov	r5,r3
   83dfc:	008bf680 	call	8bf68 <__muldf3>
   83e00:	000d883a 	mov	r6,zero
   83e04:	01d00734 	movhi	r7,16412
   83e08:	1009883a 	mov	r4,r2
   83e0c:	180b883a 	mov	r5,r3
   83e10:	008aa940 	call	8aa94 <__adddf3>
   83e14:	047f3034 	movhi	r17,64704
   83e18:	1021883a 	mov	r16,r2
   83e1c:	1c63883a 	add	r17,r3,r17
   83e20:	d9000f17 	ldw	r4,60(sp)
   83e24:	d9401017 	ldw	r5,64(sp)
   83e28:	000d883a 	mov	r6,zero
   83e2c:	01d00534 	movhi	r7,16404
   83e30:	008c7d40 	call	8c7d4 <__subdf3>
   83e34:	800d883a 	mov	r6,r16
   83e38:	880f883a 	mov	r7,r17
   83e3c:	1009883a 	mov	r4,r2
   83e40:	180b883a 	mov	r5,r3
   83e44:	102b883a 	mov	r21,r2
   83e48:	1829883a 	mov	r20,r3
   83e4c:	008bd980 	call	8bd98 <__gedf2>
   83e50:	00806c16 	blt	zero,r2,84004 <_dtoa_r+0x1304>
   83e54:	89e0003c 	xorhi	r7,r17,32768
   83e58:	800d883a 	mov	r6,r16
   83e5c:	a809883a 	mov	r4,r21
   83e60:	a00b883a 	mov	r5,r20
   83e64:	008be740 	call	8be74 <__ledf2>
   83e68:	103d7e0e 	bge	r2,zero,83464 <_dtoa_r+0x764>
   83e6c:	002b883a 	mov	r21,zero
   83e70:	0023883a 	mov	r17,zero
   83e74:	003efb06 	br	83a64 <_dtoa_r+0xd64>
   83e78:	d8800717 	ldw	r2,28(sp)
   83e7c:	003bd006 	br	82dc0 <_dtoa_r+0xc0>
   83e80:	d9000a17 	ldw	r4,40(sp)
   83e84:	d9800d17 	ldw	r6,52(sp)
   83e88:	dd400a15 	stw	r21,40(sp)
   83e8c:	a905c83a 	sub	r2,r21,r4
   83e90:	308d883a 	add	r6,r6,r2
   83e94:	d9800d15 	stw	r6,52(sp)
   83e98:	002b883a 	mov	r21,zero
   83e9c:	003e0606 	br	836b8 <_dtoa_r+0x9b8>
   83ea0:	9023883a 	mov	r17,r18
   83ea4:	9829883a 	mov	r20,r19
   83ea8:	04000084 	movi	r16,2
   83eac:	003c9206 	br	830f8 <_dtoa_r+0x3f8>
   83eb0:	04000044 	movi	r16,1
   83eb4:	dc000c15 	stw	r16,48(sp)
   83eb8:	dc000615 	stw	r16,24(sp)
   83ebc:	dc002215 	stw	r16,136(sp)
   83ec0:	e0001115 	stw	zero,68(fp)
   83ec4:	000b883a 	mov	r5,zero
   83ec8:	003c6906 	br	83070 <_dtoa_r+0x370>
   83ecc:	3021883a 	mov	r16,r6
   83ed0:	003ffb06 	br	83ec0 <_dtoa_r+0x11c0>
   83ed4:	1000021e 	bne	r2,zero,83ee0 <_dtoa_r+0x11e0>
   83ed8:	4200004c 	andi	r8,r8,1
   83edc:	403e7d1e 	bne	r8,zero,838d4 <_dtoa_r+0xbd4>
   83ee0:	01000c04 	movi	r4,48
   83ee4:	00000106 	br	83eec <_dtoa_r+0x11ec>
   83ee8:	102f883a 	mov	r23,r2
   83eec:	b8bfffc4 	addi	r2,r23,-1
   83ef0:	10c00007 	ldb	r3,0(r2)
   83ef4:	193ffc26 	beq	r3,r4,83ee8 <_dtoa_r+0x11e8>
   83ef8:	003e8706 	br	83918 <_dtoa_r+0xc18>
   83efc:	d8800517 	ldw	r2,20(sp)
   83f00:	00a3c83a 	sub	r17,zero,r2
   83f04:	8800a426 	beq	r17,zero,84198 <_dtoa_r+0x1498>
   83f08:	888003cc 	andi	r2,r17,15
   83f0c:	100490fa 	slli	r2,r2,3
   83f10:	00c00134 	movhi	r3,4
   83f14:	18c04504 	addi	r3,r3,276
   83f18:	1885883a 	add	r2,r3,r2
   83f1c:	11800017 	ldw	r6,0(r2)
   83f20:	11c00117 	ldw	r7,4(r2)
   83f24:	9009883a 	mov	r4,r18
   83f28:	980b883a 	mov	r5,r19
   83f2c:	8823d13a 	srai	r17,r17,4
   83f30:	008bf680 	call	8bf68 <__muldf3>
   83f34:	d8800f15 	stw	r2,60(sp)
   83f38:	d8c01015 	stw	r3,64(sp)
   83f3c:	8800e826 	beq	r17,zero,842e0 <_dtoa_r+0x15e0>
   83f40:	05000134 	movhi	r20,4
   83f44:	a5003b04 	addi	r20,r20,236
   83f48:	04000084 	movi	r16,2
   83f4c:	8980004c 	andi	r6,r17,1
   83f50:	1009883a 	mov	r4,r2
   83f54:	8823d07a 	srai	r17,r17,1
   83f58:	180b883a 	mov	r5,r3
   83f5c:	30000426 	beq	r6,zero,83f70 <_dtoa_r+0x1270>
   83f60:	a1800017 	ldw	r6,0(r20)
   83f64:	a1c00117 	ldw	r7,4(r20)
   83f68:	84000044 	addi	r16,r16,1
   83f6c:	008bf680 	call	8bf68 <__muldf3>
   83f70:	a5000204 	addi	r20,r20,8
   83f74:	883ff51e 	bne	r17,zero,83f4c <_dtoa_r+0x124c>
   83f78:	d8800f15 	stw	r2,60(sp)
   83f7c:	d8c01015 	stw	r3,64(sp)
   83f80:	003c7606 	br	8315c <_dtoa_r+0x45c>
   83f84:	00c00c04 	movi	r3,48
   83f88:	10c00005 	stb	r3,0(r2)
   83f8c:	d8c00517 	ldw	r3,20(sp)
   83f90:	bd3fffc3 	ldbu	r20,-1(r23)
   83f94:	18c00044 	addi	r3,r3,1
   83f98:	d8c00515 	stw	r3,20(sp)
   83f9c:	003db906 	br	83684 <_dtoa_r+0x984>
   83fa0:	89400117 	ldw	r5,4(r17)
   83fa4:	e009883a 	mov	r4,fp
   83fa8:	00863b80 	call	863b8 <_Balloc>
   83fac:	89800417 	ldw	r6,16(r17)
   83fb0:	89400304 	addi	r5,r17,12
   83fb4:	11000304 	addi	r4,r2,12
   83fb8:	31800084 	addi	r6,r6,2
   83fbc:	318d883a 	add	r6,r6,r6
   83fc0:	318d883a 	add	r6,r6,r6
   83fc4:	1027883a 	mov	r19,r2
   83fc8:	0085fec0 	call	85fec <memcpy>
   83fcc:	01800044 	movi	r6,1
   83fd0:	980b883a 	mov	r5,r19
   83fd4:	e009883a 	mov	r4,fp
   83fd8:	0086bf40 	call	86bf4 <__lshift>
   83fdc:	1029883a 	mov	r20,r2
   83fe0:	003ecc06 	br	83b14 <_dtoa_r+0xe14>
   83fe4:	00800e44 	movi	r2,57
   83fe8:	90809026 	beq	r18,r2,8422c <_dtoa_r+0x152c>
   83fec:	92000044 	addi	r8,r18,1
   83ff0:	003f1f06 	br	83c70 <_dtoa_r+0xf70>
   83ff4:	9011883a 	mov	r8,r18
   83ff8:	8825883a 	mov	r18,r17
   83ffc:	a023883a 	mov	r17,r20
   84000:	003e2906 	br	838a8 <_dtoa_r+0xba8>
   84004:	002b883a 	mov	r21,zero
   84008:	0023883a 	mov	r17,zero
   8400c:	003f5406 	br	83d60 <_dtoa_r+0x1060>
   84010:	61bfffc4 	addi	r6,r12,-1
   84014:	300490fa 	slli	r2,r6,3
   84018:	00c00134 	movhi	r3,4
   8401c:	18c04504 	addi	r3,r3,276
   84020:	1885883a 	add	r2,r3,r2
   84024:	11000017 	ldw	r4,0(r2)
   84028:	11400117 	ldw	r5,4(r2)
   8402c:	d8800717 	ldw	r2,28(sp)
   84030:	880f883a 	mov	r7,r17
   84034:	d9801215 	stw	r6,72(sp)
   84038:	800d883a 	mov	r6,r16
   8403c:	db001615 	stw	r12,88(sp)
   84040:	15c00044 	addi	r23,r2,1
   84044:	008bf680 	call	8bf68 <__muldf3>
   84048:	d9401017 	ldw	r5,64(sp)
   8404c:	d9000f17 	ldw	r4,60(sp)
   84050:	d8c01515 	stw	r3,84(sp)
   84054:	d8801415 	stw	r2,80(sp)
   84058:	008d0d00 	call	8d0d0 <__fixdfsi>
   8405c:	1009883a 	mov	r4,r2
   84060:	1021883a 	mov	r16,r2
   84064:	008d1500 	call	8d150 <__floatsidf>
   84068:	d9000f17 	ldw	r4,60(sp)
   8406c:	d9401017 	ldw	r5,64(sp)
   84070:	100d883a 	mov	r6,r2
   84074:	180f883a 	mov	r7,r3
   84078:	008c7d40 	call	8c7d4 <__subdf3>
   8407c:	1829883a 	mov	r20,r3
   84080:	d8c00717 	ldw	r3,28(sp)
   84084:	84000c04 	addi	r16,r16,48
   84088:	1023883a 	mov	r17,r2
   8408c:	1c000005 	stb	r16,0(r3)
   84090:	db001617 	ldw	r12,88(sp)
   84094:	00800044 	movi	r2,1
   84098:	60802226 	beq	r12,r2,84124 <_dtoa_r+0x1424>
   8409c:	d9c00717 	ldw	r7,28(sp)
   840a0:	8805883a 	mov	r2,r17
   840a4:	b82b883a 	mov	r21,r23
   840a8:	3b19883a 	add	r12,r7,r12
   840ac:	6023883a 	mov	r17,r12
   840b0:	a007883a 	mov	r3,r20
   840b4:	dc800f15 	stw	r18,60(sp)
   840b8:	000d883a 	mov	r6,zero
   840bc:	01d00934 	movhi	r7,16420
   840c0:	1009883a 	mov	r4,r2
   840c4:	180b883a 	mov	r5,r3
   840c8:	008bf680 	call	8bf68 <__muldf3>
   840cc:	180b883a 	mov	r5,r3
   840d0:	1009883a 	mov	r4,r2
   840d4:	1829883a 	mov	r20,r3
   840d8:	1025883a 	mov	r18,r2
   840dc:	008d0d00 	call	8d0d0 <__fixdfsi>
   840e0:	1009883a 	mov	r4,r2
   840e4:	1021883a 	mov	r16,r2
   840e8:	008d1500 	call	8d150 <__floatsidf>
   840ec:	100d883a 	mov	r6,r2
   840f0:	180f883a 	mov	r7,r3
   840f4:	9009883a 	mov	r4,r18
   840f8:	a00b883a 	mov	r5,r20
   840fc:	84000c04 	addi	r16,r16,48
   84100:	008c7d40 	call	8c7d4 <__subdf3>
   84104:	ad400044 	addi	r21,r21,1
   84108:	ac3fffc5 	stb	r16,-1(r21)
   8410c:	ac7fea1e 	bne	r21,r17,840b8 <_dtoa_r+0x13b8>
   84110:	1023883a 	mov	r17,r2
   84114:	d8801217 	ldw	r2,72(sp)
   84118:	dc800f17 	ldw	r18,60(sp)
   8411c:	1829883a 	mov	r20,r3
   84120:	b8af883a 	add	r23,r23,r2
   84124:	d9001417 	ldw	r4,80(sp)
   84128:	d9401517 	ldw	r5,84(sp)
   8412c:	000d883a 	mov	r6,zero
   84130:	01cff834 	movhi	r7,16352
   84134:	008aa940 	call	8aa94 <__adddf3>
   84138:	880d883a 	mov	r6,r17
   8413c:	a00f883a 	mov	r7,r20
   84140:	1009883a 	mov	r4,r2
   84144:	180b883a 	mov	r5,r3
   84148:	008be740 	call	8be74 <__ledf2>
   8414c:	10003e0e 	bge	r2,zero,84248 <_dtoa_r+0x1548>
   84150:	d9001317 	ldw	r4,76(sp)
   84154:	bd3fffc3 	ldbu	r20,-1(r23)
   84158:	d9000515 	stw	r4,20(sp)
   8415c:	003d3b06 	br	8364c <_dtoa_r+0x94c>
   84160:	0027883a 	mov	r19,zero
   84164:	003f1b06 	br	83dd4 <_dtoa_r+0x10d4>
   84168:	d8800817 	ldw	r2,32(sp)
   8416c:	11e9c83a 	sub	r20,r2,r7
   84170:	0005883a 	mov	r2,zero
   84174:	003d5406 	br	836c8 <_dtoa_r+0x9c8>
   84178:	00800044 	movi	r2,1
   8417c:	003dc706 	br	8389c <_dtoa_r+0xb9c>
   84180:	d8c00217 	ldw	r3,8(sp)
   84184:	00800d84 	movi	r2,54
   84188:	dd400a17 	ldw	r21,40(sp)
   8418c:	10c5c83a 	sub	r2,r2,r3
   84190:	dd000817 	ldw	r20,32(sp)
   84194:	003d4c06 	br	836c8 <_dtoa_r+0x9c8>
   84198:	dc800f15 	stw	r18,60(sp)
   8419c:	dcc01015 	stw	r19,64(sp)
   841a0:	04000084 	movi	r16,2
   841a4:	003bed06 	br	8315c <_dtoa_r+0x45c>
   841a8:	d9000617 	ldw	r4,24(sp)
   841ac:	203f0d26 	beq	r4,zero,83de4 <_dtoa_r+0x10e4>
   841b0:	d9800c17 	ldw	r6,48(sp)
   841b4:	01bcab0e 	bge	zero,r6,83464 <_dtoa_r+0x764>
   841b8:	d9401017 	ldw	r5,64(sp)
   841bc:	d9000f17 	ldw	r4,60(sp)
   841c0:	000d883a 	mov	r6,zero
   841c4:	01d00934 	movhi	r7,16420
   841c8:	008bf680 	call	8bf68 <__muldf3>
   841cc:	81000044 	addi	r4,r16,1
   841d0:	d8800f15 	stw	r2,60(sp)
   841d4:	d8c01015 	stw	r3,64(sp)
   841d8:	008d1500 	call	8d150 <__floatsidf>
   841dc:	d9800f17 	ldw	r6,60(sp)
   841e0:	d9c01017 	ldw	r7,64(sp)
   841e4:	1009883a 	mov	r4,r2
   841e8:	180b883a 	mov	r5,r3
   841ec:	008bf680 	call	8bf68 <__muldf3>
   841f0:	01d00734 	movhi	r7,16412
   841f4:	000d883a 	mov	r6,zero
   841f8:	1009883a 	mov	r4,r2
   841fc:	180b883a 	mov	r5,r3
   84200:	008aa940 	call	8aa94 <__adddf3>
   84204:	d9c00517 	ldw	r7,20(sp)
   84208:	047f3034 	movhi	r17,64704
   8420c:	1021883a 	mov	r16,r2
   84210:	39ffffc4 	addi	r7,r7,-1
   84214:	d9c01315 	stw	r7,76(sp)
   84218:	1c63883a 	add	r17,r3,r17
   8421c:	db000c17 	ldw	r12,48(sp)
   84220:	003bea06 	br	831cc <_dtoa_r+0x4cc>
   84224:	dc000915 	stw	r16,36(sp)
   84228:	003e0e06 	br	83a64 <_dtoa_r+0xd64>
   8422c:	01000e44 	movi	r4,57
   84230:	8825883a 	mov	r18,r17
   84234:	9dc00044 	addi	r23,r19,1
   84238:	99000005 	stb	r4,0(r19)
   8423c:	a023883a 	mov	r17,r20
   84240:	dc000915 	stw	r16,36(sp)
   84244:	003da406 	br	838d8 <_dtoa_r+0xbd8>
   84248:	d9801417 	ldw	r6,80(sp)
   8424c:	d9c01517 	ldw	r7,84(sp)
   84250:	0009883a 	mov	r4,zero
   84254:	014ff834 	movhi	r5,16352
   84258:	008c7d40 	call	8c7d4 <__subdf3>
   8425c:	880d883a 	mov	r6,r17
   84260:	a00f883a 	mov	r7,r20
   84264:	1009883a 	mov	r4,r2
   84268:	180b883a 	mov	r5,r3
   8426c:	008bd980 	call	8bd98 <__gedf2>
   84270:	00bc7c0e 	bge	zero,r2,83464 <_dtoa_r+0x764>
   84274:	01000c04 	movi	r4,48
   84278:	00000106 	br	84280 <_dtoa_r+0x1580>
   8427c:	102f883a 	mov	r23,r2
   84280:	b8bfffc4 	addi	r2,r23,-1
   84284:	10c00007 	ldb	r3,0(r2)
   84288:	193ffc26 	beq	r3,r4,8427c <_dtoa_r+0x157c>
   8428c:	d9801317 	ldw	r6,76(sp)
   84290:	d9800515 	stw	r6,20(sp)
   84294:	003c4406 	br	833a8 <_dtoa_r+0x6a8>
   84298:	d9801317 	ldw	r6,76(sp)
   8429c:	d9800515 	stw	r6,20(sp)
   842a0:	003cea06 	br	8364c <_dtoa_r+0x94c>
   842a4:	dd800f17 	ldw	r22,60(sp)
   842a8:	dcc01017 	ldw	r19,64(sp)
   842ac:	dc801217 	ldw	r18,72(sp)
   842b0:	003c6c06 	br	83464 <_dtoa_r+0x764>
   842b4:	903e031e 	bne	r18,zero,83ac4 <_dtoa_r+0xdc4>
   842b8:	003ebb06 	br	83da8 <_dtoa_r+0x10a8>
   842bc:	103e6c1e 	bne	r2,zero,83c70 <_dtoa_r+0xf70>
   842c0:	4080004c 	andi	r2,r8,1
   842c4:	103e6a26 	beq	r2,zero,83c70 <_dtoa_r+0xf70>
   842c8:	003e6606 	br	83c64 <_dtoa_r+0xf64>
   842cc:	d8c00317 	ldw	r3,12(sp)
   842d0:	00800084 	movi	r2,2
   842d4:	10c02916 	blt	r2,r3,8437c <_dtoa_r+0x167c>
   842d8:	d9000c17 	ldw	r4,48(sp)
   842dc:	003e8806 	br	83d00 <_dtoa_r+0x1000>
   842e0:	04000084 	movi	r16,2
   842e4:	003b9d06 	br	8315c <_dtoa_r+0x45c>
   842e8:	d9001317 	ldw	r4,76(sp)
   842ec:	d9000515 	stw	r4,20(sp)
   842f0:	003cd606 	br	8364c <_dtoa_r+0x94c>
   842f4:	d8801317 	ldw	r2,76(sp)
   842f8:	d8800515 	stw	r2,20(sp)
   842fc:	003c2a06 	br	833a8 <_dtoa_r+0x6a8>
   84300:	d9800317 	ldw	r6,12(sp)
   84304:	00800084 	movi	r2,2
   84308:	11801516 	blt	r2,r6,84360 <_dtoa_r+0x1660>
   8430c:	d9c00c17 	ldw	r7,48(sp)
   84310:	d9c00615 	stw	r7,24(sp)
   84314:	003df706 	br	83af4 <_dtoa_r+0xdf4>
   84318:	193d3926 	beq	r3,r4,83800 <_dtoa_r+0xb00>
   8431c:	00c00f04 	movi	r3,60
   84320:	1885c83a 	sub	r2,r3,r2
   84324:	003ddf06 	br	83aa4 <_dtoa_r+0xda4>
   84328:	e009883a 	mov	r4,fp
   8432c:	e0001115 	stw	zero,68(fp)
   84330:	000b883a 	mov	r5,zero
   84334:	00863b80 	call	863b8 <_Balloc>
   84338:	d8800715 	stw	r2,28(sp)
   8433c:	d8c00717 	ldw	r3,28(sp)
   84340:	00bfffc4 	movi	r2,-1
   84344:	01000044 	movi	r4,1
   84348:	d8800c15 	stw	r2,48(sp)
   8434c:	e0c01015 	stw	r3,64(fp)
   84350:	d9000b15 	stw	r4,44(sp)
   84354:	d8800615 	stw	r2,24(sp)
   84358:	d8002215 	stw	zero,136(sp)
   8435c:	003c4106 	br	83464 <_dtoa_r+0x764>
   84360:	d8c00c17 	ldw	r3,48(sp)
   84364:	d8c00615 	stw	r3,24(sp)
   84368:	003e7006 	br	83d2c <_dtoa_r+0x102c>
   8436c:	04400044 	movi	r17,1
   84370:	003b2006 	br	82ff4 <_dtoa_r+0x2f4>
   84374:	000b883a 	mov	r5,zero
   84378:	003b3d06 	br	83070 <_dtoa_r+0x370>
   8437c:	d8800c17 	ldw	r2,48(sp)
   84380:	d8800615 	stw	r2,24(sp)
   84384:	003e6906 	br	83d2c <_dtoa_r+0x102c>

00084388 <__sflush_r>:
   84388:	2880030b 	ldhu	r2,12(r5)
   8438c:	defffb04 	addi	sp,sp,-20
   84390:	dcc00315 	stw	r19,12(sp)
   84394:	dc400115 	stw	r17,4(sp)
   84398:	dfc00415 	stw	ra,16(sp)
   8439c:	dc800215 	stw	r18,8(sp)
   843a0:	dc000015 	stw	r16,0(sp)
   843a4:	10c0020c 	andi	r3,r2,8
   843a8:	2823883a 	mov	r17,r5
   843ac:	2027883a 	mov	r19,r4
   843b0:	1800311e 	bne	r3,zero,84478 <__sflush_r+0xf0>
   843b4:	28c00117 	ldw	r3,4(r5)
   843b8:	10820014 	ori	r2,r2,2048
   843bc:	2880030d 	sth	r2,12(r5)
   843c0:	00c04b0e 	bge	zero,r3,844f0 <__sflush_r+0x168>
   843c4:	8a000a17 	ldw	r8,40(r17)
   843c8:	40002326 	beq	r8,zero,84458 <__sflush_r+0xd0>
   843cc:	9c000017 	ldw	r16,0(r19)
   843d0:	10c4000c 	andi	r3,r2,4096
   843d4:	98000015 	stw	zero,0(r19)
   843d8:	18004826 	beq	r3,zero,844fc <__sflush_r+0x174>
   843dc:	89801417 	ldw	r6,80(r17)
   843e0:	10c0010c 	andi	r3,r2,4
   843e4:	18000626 	beq	r3,zero,84400 <__sflush_r+0x78>
   843e8:	88c00117 	ldw	r3,4(r17)
   843ec:	88800c17 	ldw	r2,48(r17)
   843f0:	30cdc83a 	sub	r6,r6,r3
   843f4:	10000226 	beq	r2,zero,84400 <__sflush_r+0x78>
   843f8:	88800f17 	ldw	r2,60(r17)
   843fc:	308dc83a 	sub	r6,r6,r2
   84400:	89400717 	ldw	r5,28(r17)
   84404:	000f883a 	mov	r7,zero
   84408:	9809883a 	mov	r4,r19
   8440c:	403ee83a 	callr	r8
   84410:	00ffffc4 	movi	r3,-1
   84414:	10c04426 	beq	r2,r3,84528 <__sflush_r+0x1a0>
   84418:	88c0030b 	ldhu	r3,12(r17)
   8441c:	89000417 	ldw	r4,16(r17)
   84420:	88000115 	stw	zero,4(r17)
   84424:	197dffcc 	andi	r5,r3,63487
   84428:	8940030d 	sth	r5,12(r17)
   8442c:	89000015 	stw	r4,0(r17)
   84430:	18c4000c 	andi	r3,r3,4096
   84434:	18002c1e 	bne	r3,zero,844e8 <__sflush_r+0x160>
   84438:	89400c17 	ldw	r5,48(r17)
   8443c:	9c000015 	stw	r16,0(r19)
   84440:	28000526 	beq	r5,zero,84458 <__sflush_r+0xd0>
   84444:	88801004 	addi	r2,r17,64
   84448:	28800226 	beq	r5,r2,84454 <__sflush_r+0xcc>
   8444c:	9809883a 	mov	r4,r19
   84450:	0084b040 	call	84b04 <_free_r>
   84454:	88000c15 	stw	zero,48(r17)
   84458:	0005883a 	mov	r2,zero
   8445c:	dfc00417 	ldw	ra,16(sp)
   84460:	dcc00317 	ldw	r19,12(sp)
   84464:	dc800217 	ldw	r18,8(sp)
   84468:	dc400117 	ldw	r17,4(sp)
   8446c:	dc000017 	ldw	r16,0(sp)
   84470:	dec00504 	addi	sp,sp,20
   84474:	f800283a 	ret
   84478:	2c800417 	ldw	r18,16(r5)
   8447c:	903ff626 	beq	r18,zero,84458 <__sflush_r+0xd0>
   84480:	2c000017 	ldw	r16,0(r5)
   84484:	108000cc 	andi	r2,r2,3
   84488:	2c800015 	stw	r18,0(r5)
   8448c:	84a1c83a 	sub	r16,r16,r18
   84490:	1000131e 	bne	r2,zero,844e0 <__sflush_r+0x158>
   84494:	28800517 	ldw	r2,20(r5)
   84498:	88800215 	stw	r2,8(r17)
   8449c:	04000316 	blt	zero,r16,844ac <__sflush_r+0x124>
   844a0:	003fed06 	br	84458 <__sflush_r+0xd0>
   844a4:	90a5883a 	add	r18,r18,r2
   844a8:	043feb0e 	bge	zero,r16,84458 <__sflush_r+0xd0>
   844ac:	88800917 	ldw	r2,36(r17)
   844b0:	89400717 	ldw	r5,28(r17)
   844b4:	800f883a 	mov	r7,r16
   844b8:	900d883a 	mov	r6,r18
   844bc:	9809883a 	mov	r4,r19
   844c0:	103ee83a 	callr	r2
   844c4:	80a1c83a 	sub	r16,r16,r2
   844c8:	00bff616 	blt	zero,r2,844a4 <__sflush_r+0x11c>
   844cc:	88c0030b 	ldhu	r3,12(r17)
   844d0:	00bfffc4 	movi	r2,-1
   844d4:	18c01014 	ori	r3,r3,64
   844d8:	88c0030d 	sth	r3,12(r17)
   844dc:	003fdf06 	br	8445c <__sflush_r+0xd4>
   844e0:	0005883a 	mov	r2,zero
   844e4:	003fec06 	br	84498 <__sflush_r+0x110>
   844e8:	88801415 	stw	r2,80(r17)
   844ec:	003fd206 	br	84438 <__sflush_r+0xb0>
   844f0:	28c00f17 	ldw	r3,60(r5)
   844f4:	00ffb316 	blt	zero,r3,843c4 <__sflush_r+0x3c>
   844f8:	003fd706 	br	84458 <__sflush_r+0xd0>
   844fc:	89400717 	ldw	r5,28(r17)
   84500:	000d883a 	mov	r6,zero
   84504:	01c00044 	movi	r7,1
   84508:	9809883a 	mov	r4,r19
   8450c:	403ee83a 	callr	r8
   84510:	100d883a 	mov	r6,r2
   84514:	00bfffc4 	movi	r2,-1
   84518:	30801426 	beq	r6,r2,8456c <__sflush_r+0x1e4>
   8451c:	8880030b 	ldhu	r2,12(r17)
   84520:	8a000a17 	ldw	r8,40(r17)
   84524:	003fae06 	br	843e0 <__sflush_r+0x58>
   84528:	98c00017 	ldw	r3,0(r19)
   8452c:	183fba26 	beq	r3,zero,84418 <__sflush_r+0x90>
   84530:	01000744 	movi	r4,29
   84534:	19000626 	beq	r3,r4,84550 <__sflush_r+0x1c8>
   84538:	01000584 	movi	r4,22
   8453c:	19000426 	beq	r3,r4,84550 <__sflush_r+0x1c8>
   84540:	88c0030b 	ldhu	r3,12(r17)
   84544:	18c01014 	ori	r3,r3,64
   84548:	88c0030d 	sth	r3,12(r17)
   8454c:	003fc306 	br	8445c <__sflush_r+0xd4>
   84550:	8880030b 	ldhu	r2,12(r17)
   84554:	88c00417 	ldw	r3,16(r17)
   84558:	88000115 	stw	zero,4(r17)
   8455c:	10bdffcc 	andi	r2,r2,63487
   84560:	8880030d 	sth	r2,12(r17)
   84564:	88c00015 	stw	r3,0(r17)
   84568:	003fb306 	br	84438 <__sflush_r+0xb0>
   8456c:	98800017 	ldw	r2,0(r19)
   84570:	103fea26 	beq	r2,zero,8451c <__sflush_r+0x194>
   84574:	00c00744 	movi	r3,29
   84578:	10c00226 	beq	r2,r3,84584 <__sflush_r+0x1fc>
   8457c:	00c00584 	movi	r3,22
   84580:	10c0031e 	bne	r2,r3,84590 <__sflush_r+0x208>
   84584:	9c000015 	stw	r16,0(r19)
   84588:	0005883a 	mov	r2,zero
   8458c:	003fb306 	br	8445c <__sflush_r+0xd4>
   84590:	88c0030b 	ldhu	r3,12(r17)
   84594:	3005883a 	mov	r2,r6
   84598:	18c01014 	ori	r3,r3,64
   8459c:	88c0030d 	sth	r3,12(r17)
   845a0:	003fae06 	br	8445c <__sflush_r+0xd4>

000845a4 <_fflush_r>:
   845a4:	defffd04 	addi	sp,sp,-12
   845a8:	dc000115 	stw	r16,4(sp)
   845ac:	dfc00215 	stw	ra,8(sp)
   845b0:	2021883a 	mov	r16,r4
   845b4:	20000226 	beq	r4,zero,845c0 <_fflush_r+0x1c>
   845b8:	20800e17 	ldw	r2,56(r4)
   845bc:	10000c26 	beq	r2,zero,845f0 <_fflush_r+0x4c>
   845c0:	2880030f 	ldh	r2,12(r5)
   845c4:	1000051e 	bne	r2,zero,845dc <_fflush_r+0x38>
   845c8:	0005883a 	mov	r2,zero
   845cc:	dfc00217 	ldw	ra,8(sp)
   845d0:	dc000117 	ldw	r16,4(sp)
   845d4:	dec00304 	addi	sp,sp,12
   845d8:	f800283a 	ret
   845dc:	8009883a 	mov	r4,r16
   845e0:	dfc00217 	ldw	ra,8(sp)
   845e4:	dc000117 	ldw	r16,4(sp)
   845e8:	dec00304 	addi	sp,sp,12
   845ec:	00843881 	jmpi	84388 <__sflush_r>
   845f0:	d9400015 	stw	r5,0(sp)
   845f4:	00849900 	call	84990 <__sinit>
   845f8:	d9400017 	ldw	r5,0(sp)
   845fc:	003ff006 	br	845c0 <_fflush_r+0x1c>

00084600 <fflush>:
   84600:	20000526 	beq	r4,zero,84618 <fflush+0x18>
   84604:	00800134 	movhi	r2,4
   84608:	10877904 	addi	r2,r2,7652
   8460c:	200b883a 	mov	r5,r4
   84610:	11000017 	ldw	r4,0(r2)
   84614:	00845a41 	jmpi	845a4 <_fflush_r>
   84618:	00800134 	movhi	r2,4
   8461c:	10877804 	addi	r2,r2,7648
   84620:	11000017 	ldw	r4,0(r2)
   84624:	01400234 	movhi	r5,8
   84628:	29516904 	addi	r5,r5,17828
   8462c:	00853a01 	jmpi	853a0 <_fwalk_reent>

00084630 <__fp_unlock>:
   84630:	0005883a 	mov	r2,zero
   84634:	f800283a 	ret

00084638 <_cleanup_r>:
   84638:	01400274 	movhi	r5,9
   8463c:	29654f04 	addi	r5,r5,-27332
   84640:	00853a01 	jmpi	853a0 <_fwalk_reent>

00084644 <__sinit.part.1>:
   84644:	defff704 	addi	sp,sp,-36
   84648:	00c00234 	movhi	r3,8
   8464c:	dfc00815 	stw	ra,32(sp)
   84650:	ddc00715 	stw	r23,28(sp)
   84654:	dd800615 	stw	r22,24(sp)
   84658:	dd400515 	stw	r21,20(sp)
   8465c:	dd000415 	stw	r20,16(sp)
   84660:	dcc00315 	stw	r19,12(sp)
   84664:	dc800215 	stw	r18,8(sp)
   84668:	dc400115 	stw	r17,4(sp)
   8466c:	dc000015 	stw	r16,0(sp)
   84670:	18d18e04 	addi	r3,r3,17976
   84674:	24000117 	ldw	r16,4(r4)
   84678:	20c00f15 	stw	r3,60(r4)
   8467c:	2080bb04 	addi	r2,r4,748
   84680:	00c000c4 	movi	r3,3
   84684:	20c0b915 	stw	r3,740(r4)
   84688:	2080ba15 	stw	r2,744(r4)
   8468c:	2000b815 	stw	zero,736(r4)
   84690:	05c00204 	movi	r23,8
   84694:	00800104 	movi	r2,4
   84698:	2025883a 	mov	r18,r4
   8469c:	b80d883a 	mov	r6,r23
   846a0:	81001704 	addi	r4,r16,92
   846a4:	000b883a 	mov	r5,zero
   846a8:	80000015 	stw	zero,0(r16)
   846ac:	80000115 	stw	zero,4(r16)
   846b0:	80000215 	stw	zero,8(r16)
   846b4:	8080030d 	sth	r2,12(r16)
   846b8:	80001915 	stw	zero,100(r16)
   846bc:	8000038d 	sth	zero,14(r16)
   846c0:	80000415 	stw	zero,16(r16)
   846c4:	80000515 	stw	zero,20(r16)
   846c8:	80000615 	stw	zero,24(r16)
   846cc:	00862900 	call	86290 <memset>
   846d0:	05800234 	movhi	r22,8
   846d4:	94400217 	ldw	r17,8(r18)
   846d8:	05400234 	movhi	r21,8
   846dc:	05000234 	movhi	r20,8
   846e0:	04c00234 	movhi	r19,8
   846e4:	b59ea704 	addi	r22,r22,31388
   846e8:	ad5ebe04 	addi	r21,r21,31480
   846ec:	a51edd04 	addi	r20,r20,31604
   846f0:	9cdef404 	addi	r19,r19,31696
   846f4:	85800815 	stw	r22,32(r16)
   846f8:	85400915 	stw	r21,36(r16)
   846fc:	85000a15 	stw	r20,40(r16)
   84700:	84c00b15 	stw	r19,44(r16)
   84704:	84000715 	stw	r16,28(r16)
   84708:	00800284 	movi	r2,10
   8470c:	8880030d 	sth	r2,12(r17)
   84710:	00800044 	movi	r2,1
   84714:	b80d883a 	mov	r6,r23
   84718:	89001704 	addi	r4,r17,92
   8471c:	000b883a 	mov	r5,zero
   84720:	88000015 	stw	zero,0(r17)
   84724:	88000115 	stw	zero,4(r17)
   84728:	88000215 	stw	zero,8(r17)
   8472c:	88001915 	stw	zero,100(r17)
   84730:	8880038d 	sth	r2,14(r17)
   84734:	88000415 	stw	zero,16(r17)
   84738:	88000515 	stw	zero,20(r17)
   8473c:	88000615 	stw	zero,24(r17)
   84740:	00862900 	call	86290 <memset>
   84744:	94000317 	ldw	r16,12(r18)
   84748:	00800484 	movi	r2,18
   8474c:	8c400715 	stw	r17,28(r17)
   84750:	8d800815 	stw	r22,32(r17)
   84754:	8d400915 	stw	r21,36(r17)
   84758:	8d000a15 	stw	r20,40(r17)
   8475c:	8cc00b15 	stw	r19,44(r17)
   84760:	8080030d 	sth	r2,12(r16)
   84764:	00800084 	movi	r2,2
   84768:	80000015 	stw	zero,0(r16)
   8476c:	80000115 	stw	zero,4(r16)
   84770:	80000215 	stw	zero,8(r16)
   84774:	80001915 	stw	zero,100(r16)
   84778:	8080038d 	sth	r2,14(r16)
   8477c:	80000415 	stw	zero,16(r16)
   84780:	80000515 	stw	zero,20(r16)
   84784:	80000615 	stw	zero,24(r16)
   84788:	b80d883a 	mov	r6,r23
   8478c:	000b883a 	mov	r5,zero
   84790:	81001704 	addi	r4,r16,92
   84794:	00862900 	call	86290 <memset>
   84798:	00800044 	movi	r2,1
   8479c:	84000715 	stw	r16,28(r16)
   847a0:	85800815 	stw	r22,32(r16)
   847a4:	85400915 	stw	r21,36(r16)
   847a8:	85000a15 	stw	r20,40(r16)
   847ac:	84c00b15 	stw	r19,44(r16)
   847b0:	90800e15 	stw	r2,56(r18)
   847b4:	dfc00817 	ldw	ra,32(sp)
   847b8:	ddc00717 	ldw	r23,28(sp)
   847bc:	dd800617 	ldw	r22,24(sp)
   847c0:	dd400517 	ldw	r21,20(sp)
   847c4:	dd000417 	ldw	r20,16(sp)
   847c8:	dcc00317 	ldw	r19,12(sp)
   847cc:	dc800217 	ldw	r18,8(sp)
   847d0:	dc400117 	ldw	r17,4(sp)
   847d4:	dc000017 	ldw	r16,0(sp)
   847d8:	dec00904 	addi	sp,sp,36
   847dc:	f800283a 	ret

000847e0 <__fp_lock>:
   847e0:	0005883a 	mov	r2,zero
   847e4:	f800283a 	ret

000847e8 <__sfmoreglue>:
   847e8:	defffc04 	addi	sp,sp,-16
   847ec:	dc800215 	stw	r18,8(sp)
   847f0:	2825883a 	mov	r18,r5
   847f4:	dc000015 	stw	r16,0(sp)
   847f8:	01401a04 	movi	r5,104
   847fc:	2021883a 	mov	r16,r4
   84800:	913fffc4 	addi	r4,r18,-1
   84804:	dfc00315 	stw	ra,12(sp)
   84808:	dc400115 	stw	r17,4(sp)
   8480c:	008aa6c0 	call	8aa6c <__mulsi3>
   84810:	8009883a 	mov	r4,r16
   84814:	11401d04 	addi	r5,r2,116
   84818:	1023883a 	mov	r17,r2
   8481c:	00856fc0 	call	856fc <_malloc_r>
   84820:	1021883a 	mov	r16,r2
   84824:	10000726 	beq	r2,zero,84844 <__sfmoreglue+0x5c>
   84828:	11000304 	addi	r4,r2,12
   8482c:	10000015 	stw	zero,0(r2)
   84830:	14800115 	stw	r18,4(r2)
   84834:	11000215 	stw	r4,8(r2)
   84838:	89801a04 	addi	r6,r17,104
   8483c:	000b883a 	mov	r5,zero
   84840:	00862900 	call	86290 <memset>
   84844:	8005883a 	mov	r2,r16
   84848:	dfc00317 	ldw	ra,12(sp)
   8484c:	dc800217 	ldw	r18,8(sp)
   84850:	dc400117 	ldw	r17,4(sp)
   84854:	dc000017 	ldw	r16,0(sp)
   84858:	dec00404 	addi	sp,sp,16
   8485c:	f800283a 	ret

00084860 <__sfp>:
   84860:	defffb04 	addi	sp,sp,-20
   84864:	dc000015 	stw	r16,0(sp)
   84868:	04000134 	movhi	r16,4
   8486c:	84077804 	addi	r16,r16,7648
   84870:	dcc00315 	stw	r19,12(sp)
   84874:	2027883a 	mov	r19,r4
   84878:	81000017 	ldw	r4,0(r16)
   8487c:	dfc00415 	stw	ra,16(sp)
   84880:	dc800215 	stw	r18,8(sp)
   84884:	20800e17 	ldw	r2,56(r4)
   84888:	dc400115 	stw	r17,4(sp)
   8488c:	1000021e 	bne	r2,zero,84898 <__sfp+0x38>
   84890:	00846440 	call	84644 <__sinit.part.1>
   84894:	81000017 	ldw	r4,0(r16)
   84898:	2480b804 	addi	r18,r4,736
   8489c:	047fffc4 	movi	r17,-1
   848a0:	91000117 	ldw	r4,4(r18)
   848a4:	94000217 	ldw	r16,8(r18)
   848a8:	213fffc4 	addi	r4,r4,-1
   848ac:	20000a16 	blt	r4,zero,848d8 <__sfp+0x78>
   848b0:	8080030f 	ldh	r2,12(r16)
   848b4:	10000c26 	beq	r2,zero,848e8 <__sfp+0x88>
   848b8:	80c01d04 	addi	r3,r16,116
   848bc:	00000206 	br	848c8 <__sfp+0x68>
   848c0:	18bfe60f 	ldh	r2,-104(r3)
   848c4:	10000826 	beq	r2,zero,848e8 <__sfp+0x88>
   848c8:	213fffc4 	addi	r4,r4,-1
   848cc:	1c3ffd04 	addi	r16,r3,-12
   848d0:	18c01a04 	addi	r3,r3,104
   848d4:	247ffa1e 	bne	r4,r17,848c0 <__sfp+0x60>
   848d8:	90800017 	ldw	r2,0(r18)
   848dc:	10001d26 	beq	r2,zero,84954 <__sfp+0xf4>
   848e0:	1025883a 	mov	r18,r2
   848e4:	003fee06 	br	848a0 <__sfp+0x40>
   848e8:	00bfffc4 	movi	r2,-1
   848ec:	8080038d 	sth	r2,14(r16)
   848f0:	00800044 	movi	r2,1
   848f4:	8080030d 	sth	r2,12(r16)
   848f8:	80001915 	stw	zero,100(r16)
   848fc:	80000015 	stw	zero,0(r16)
   84900:	80000215 	stw	zero,8(r16)
   84904:	80000115 	stw	zero,4(r16)
   84908:	80000415 	stw	zero,16(r16)
   8490c:	80000515 	stw	zero,20(r16)
   84910:	80000615 	stw	zero,24(r16)
   84914:	01800204 	movi	r6,8
   84918:	000b883a 	mov	r5,zero
   8491c:	81001704 	addi	r4,r16,92
   84920:	00862900 	call	86290 <memset>
   84924:	8005883a 	mov	r2,r16
   84928:	80000c15 	stw	zero,48(r16)
   8492c:	80000d15 	stw	zero,52(r16)
   84930:	80001115 	stw	zero,68(r16)
   84934:	80001215 	stw	zero,72(r16)
   84938:	dfc00417 	ldw	ra,16(sp)
   8493c:	dcc00317 	ldw	r19,12(sp)
   84940:	dc800217 	ldw	r18,8(sp)
   84944:	dc400117 	ldw	r17,4(sp)
   84948:	dc000017 	ldw	r16,0(sp)
   8494c:	dec00504 	addi	sp,sp,20
   84950:	f800283a 	ret
   84954:	01400104 	movi	r5,4
   84958:	9809883a 	mov	r4,r19
   8495c:	00847e80 	call	847e8 <__sfmoreglue>
   84960:	90800015 	stw	r2,0(r18)
   84964:	103fde1e 	bne	r2,zero,848e0 <__sfp+0x80>
   84968:	00800304 	movi	r2,12
   8496c:	98800015 	stw	r2,0(r19)
   84970:	0005883a 	mov	r2,zero
   84974:	003ff006 	br	84938 <__sfp+0xd8>

00084978 <_cleanup>:
   84978:	00800134 	movhi	r2,4
   8497c:	10877804 	addi	r2,r2,7648
   84980:	11000017 	ldw	r4,0(r2)
   84984:	01400274 	movhi	r5,9
   84988:	29654f04 	addi	r5,r5,-27332
   8498c:	00853a01 	jmpi	853a0 <_fwalk_reent>

00084990 <__sinit>:
   84990:	20800e17 	ldw	r2,56(r4)
   84994:	10000126 	beq	r2,zero,8499c <__sinit+0xc>
   84998:	f800283a 	ret
   8499c:	00846441 	jmpi	84644 <__sinit.part.1>

000849a0 <__sfp_lock_acquire>:
   849a0:	f800283a 	ret

000849a4 <__sfp_lock_release>:
   849a4:	f800283a 	ret

000849a8 <__sinit_lock_acquire>:
   849a8:	f800283a 	ret

000849ac <__sinit_lock_release>:
   849ac:	f800283a 	ret

000849b0 <__fp_lock_all>:
   849b0:	00800134 	movhi	r2,4
   849b4:	10877904 	addi	r2,r2,7652
   849b8:	11000017 	ldw	r4,0(r2)
   849bc:	01400234 	movhi	r5,8
   849c0:	2951f804 	addi	r5,r5,18400
   849c4:	00852dc1 	jmpi	852dc <_fwalk>

000849c8 <__fp_unlock_all>:
   849c8:	00800134 	movhi	r2,4
   849cc:	10877904 	addi	r2,r2,7652
   849d0:	11000017 	ldw	r4,0(r2)
   849d4:	01400234 	movhi	r5,8
   849d8:	29518c04 	addi	r5,r5,17968
   849dc:	00852dc1 	jmpi	852dc <_fwalk>

000849e0 <_malloc_trim_r>:
   849e0:	defffb04 	addi	sp,sp,-20
   849e4:	dcc00315 	stw	r19,12(sp)
   849e8:	04c00134 	movhi	r19,4
   849ec:	dc800215 	stw	r18,8(sp)
   849f0:	dc400115 	stw	r17,4(sp)
   849f4:	dc000015 	stw	r16,0(sp)
   849f8:	dfc00415 	stw	ra,16(sp)
   849fc:	2821883a 	mov	r16,r5
   84a00:	9cc1f304 	addi	r19,r19,1996
   84a04:	2025883a 	mov	r18,r4
   84a08:	008d8d40 	call	8d8d4 <__malloc_lock>
   84a0c:	98800217 	ldw	r2,8(r19)
   84a10:	14400117 	ldw	r17,4(r2)
   84a14:	00bfff04 	movi	r2,-4
   84a18:	88a2703a 	and	r17,r17,r2
   84a1c:	8c21c83a 	sub	r16,r17,r16
   84a20:	8403fbc4 	addi	r16,r16,4079
   84a24:	8020d33a 	srli	r16,r16,12
   84a28:	0083ffc4 	movi	r2,4095
   84a2c:	843fffc4 	addi	r16,r16,-1
   84a30:	8020933a 	slli	r16,r16,12
   84a34:	1400060e 	bge	r2,r16,84a50 <_malloc_trim_r+0x70>
   84a38:	000b883a 	mov	r5,zero
   84a3c:	9009883a 	mov	r4,r18
   84a40:	0087a480 	call	87a48 <_sbrk_r>
   84a44:	98c00217 	ldw	r3,8(r19)
   84a48:	1c47883a 	add	r3,r3,r17
   84a4c:	10c00a26 	beq	r2,r3,84a78 <_malloc_trim_r+0x98>
   84a50:	9009883a 	mov	r4,r18
   84a54:	008d8f80 	call	8d8f8 <__malloc_unlock>
   84a58:	0005883a 	mov	r2,zero
   84a5c:	dfc00417 	ldw	ra,16(sp)
   84a60:	dcc00317 	ldw	r19,12(sp)
   84a64:	dc800217 	ldw	r18,8(sp)
   84a68:	dc400117 	ldw	r17,4(sp)
   84a6c:	dc000017 	ldw	r16,0(sp)
   84a70:	dec00504 	addi	sp,sp,20
   84a74:	f800283a 	ret
   84a78:	040bc83a 	sub	r5,zero,r16
   84a7c:	9009883a 	mov	r4,r18
   84a80:	0087a480 	call	87a48 <_sbrk_r>
   84a84:	00ffffc4 	movi	r3,-1
   84a88:	10c00d26 	beq	r2,r3,84ac0 <_malloc_trim_r+0xe0>
   84a8c:	00c00134 	movhi	r3,4
   84a90:	18c79604 	addi	r3,r3,7768
   84a94:	18800017 	ldw	r2,0(r3)
   84a98:	99000217 	ldw	r4,8(r19)
   84a9c:	8c23c83a 	sub	r17,r17,r16
   84aa0:	8c400054 	ori	r17,r17,1
   84aa4:	1421c83a 	sub	r16,r2,r16
   84aa8:	24400115 	stw	r17,4(r4)
   84aac:	9009883a 	mov	r4,r18
   84ab0:	1c000015 	stw	r16,0(r3)
   84ab4:	008d8f80 	call	8d8f8 <__malloc_unlock>
   84ab8:	00800044 	movi	r2,1
   84abc:	003fe706 	br	84a5c <_malloc_trim_r+0x7c>
   84ac0:	000b883a 	mov	r5,zero
   84ac4:	9009883a 	mov	r4,r18
   84ac8:	0087a480 	call	87a48 <_sbrk_r>
   84acc:	99000217 	ldw	r4,8(r19)
   84ad0:	014003c4 	movi	r5,15
   84ad4:	1107c83a 	sub	r3,r2,r4
   84ad8:	28ffdd0e 	bge	r5,r3,84a50 <_malloc_trim_r+0x70>
   84adc:	01400134 	movhi	r5,4
   84ae0:	29477b04 	addi	r5,r5,7660
   84ae4:	29400017 	ldw	r5,0(r5)
   84ae8:	18c00054 	ori	r3,r3,1
   84aec:	20c00115 	stw	r3,4(r4)
   84af0:	00c00134 	movhi	r3,4
   84af4:	1145c83a 	sub	r2,r2,r5
   84af8:	18c79604 	addi	r3,r3,7768
   84afc:	18800015 	stw	r2,0(r3)
   84b00:	003fd306 	br	84a50 <_malloc_trim_r+0x70>

00084b04 <_free_r>:
   84b04:	28004126 	beq	r5,zero,84c0c <_free_r+0x108>
   84b08:	defffd04 	addi	sp,sp,-12
   84b0c:	dc400115 	stw	r17,4(sp)
   84b10:	dc000015 	stw	r16,0(sp)
   84b14:	2023883a 	mov	r17,r4
   84b18:	2821883a 	mov	r16,r5
   84b1c:	dfc00215 	stw	ra,8(sp)
   84b20:	008d8d40 	call	8d8d4 <__malloc_lock>
   84b24:	81ffff17 	ldw	r7,-4(r16)
   84b28:	00bfff84 	movi	r2,-2
   84b2c:	01000134 	movhi	r4,4
   84b30:	81bffe04 	addi	r6,r16,-8
   84b34:	3884703a 	and	r2,r7,r2
   84b38:	2101f304 	addi	r4,r4,1996
   84b3c:	308b883a 	add	r5,r6,r2
   84b40:	2a400117 	ldw	r9,4(r5)
   84b44:	22000217 	ldw	r8,8(r4)
   84b48:	00ffff04 	movi	r3,-4
   84b4c:	48c6703a 	and	r3,r9,r3
   84b50:	2a005726 	beq	r5,r8,84cb0 <_free_r+0x1ac>
   84b54:	28c00115 	stw	r3,4(r5)
   84b58:	39c0004c 	andi	r7,r7,1
   84b5c:	3800091e 	bne	r7,zero,84b84 <_free_r+0x80>
   84b60:	823ffe17 	ldw	r8,-8(r16)
   84b64:	22400204 	addi	r9,r4,8
   84b68:	320dc83a 	sub	r6,r6,r8
   84b6c:	31c00217 	ldw	r7,8(r6)
   84b70:	1205883a 	add	r2,r2,r8
   84b74:	3a406526 	beq	r7,r9,84d0c <_free_r+0x208>
   84b78:	32000317 	ldw	r8,12(r6)
   84b7c:	3a000315 	stw	r8,12(r7)
   84b80:	41c00215 	stw	r7,8(r8)
   84b84:	28cf883a 	add	r7,r5,r3
   84b88:	39c00117 	ldw	r7,4(r7)
   84b8c:	39c0004c 	andi	r7,r7,1
   84b90:	38003a26 	beq	r7,zero,84c7c <_free_r+0x178>
   84b94:	10c00054 	ori	r3,r2,1
   84b98:	30c00115 	stw	r3,4(r6)
   84b9c:	3087883a 	add	r3,r6,r2
   84ba0:	18800015 	stw	r2,0(r3)
   84ba4:	00c07fc4 	movi	r3,511
   84ba8:	18801936 	bltu	r3,r2,84c10 <_free_r+0x10c>
   84bac:	1004d0fa 	srli	r2,r2,3
   84bb0:	01c00044 	movi	r7,1
   84bb4:	21400117 	ldw	r5,4(r4)
   84bb8:	10c00044 	addi	r3,r2,1
   84bbc:	18c7883a 	add	r3,r3,r3
   84bc0:	1005d0ba 	srai	r2,r2,2
   84bc4:	18c7883a 	add	r3,r3,r3
   84bc8:	18c7883a 	add	r3,r3,r3
   84bcc:	1907883a 	add	r3,r3,r4
   84bd0:	3884983a 	sll	r2,r7,r2
   84bd4:	19c00017 	ldw	r7,0(r3)
   84bd8:	1a3ffe04 	addi	r8,r3,-8
   84bdc:	1144b03a 	or	r2,r2,r5
   84be0:	32000315 	stw	r8,12(r6)
   84be4:	31c00215 	stw	r7,8(r6)
   84be8:	20800115 	stw	r2,4(r4)
   84bec:	19800015 	stw	r6,0(r3)
   84bf0:	39800315 	stw	r6,12(r7)
   84bf4:	8809883a 	mov	r4,r17
   84bf8:	dfc00217 	ldw	ra,8(sp)
   84bfc:	dc400117 	ldw	r17,4(sp)
   84c00:	dc000017 	ldw	r16,0(sp)
   84c04:	dec00304 	addi	sp,sp,12
   84c08:	008d8f81 	jmpi	8d8f8 <__malloc_unlock>
   84c0c:	f800283a 	ret
   84c10:	100ad27a 	srli	r5,r2,9
   84c14:	00c00104 	movi	r3,4
   84c18:	19404a36 	bltu	r3,r5,84d44 <_free_r+0x240>
   84c1c:	100ad1ba 	srli	r5,r2,6
   84c20:	28c00e44 	addi	r3,r5,57
   84c24:	18c7883a 	add	r3,r3,r3
   84c28:	29400e04 	addi	r5,r5,56
   84c2c:	18c7883a 	add	r3,r3,r3
   84c30:	18c7883a 	add	r3,r3,r3
   84c34:	1909883a 	add	r4,r3,r4
   84c38:	20c00017 	ldw	r3,0(r4)
   84c3c:	01c00134 	movhi	r7,4
   84c40:	213ffe04 	addi	r4,r4,-8
   84c44:	39c1f304 	addi	r7,r7,1996
   84c48:	20c04426 	beq	r4,r3,84d5c <_free_r+0x258>
   84c4c:	01ffff04 	movi	r7,-4
   84c50:	19400117 	ldw	r5,4(r3)
   84c54:	29ca703a 	and	r5,r5,r7
   84c58:	1140022e 	bgeu	r2,r5,84c64 <_free_r+0x160>
   84c5c:	18c00217 	ldw	r3,8(r3)
   84c60:	20fffb1e 	bne	r4,r3,84c50 <_free_r+0x14c>
   84c64:	19000317 	ldw	r4,12(r3)
   84c68:	31000315 	stw	r4,12(r6)
   84c6c:	30c00215 	stw	r3,8(r6)
   84c70:	21800215 	stw	r6,8(r4)
   84c74:	19800315 	stw	r6,12(r3)
   84c78:	003fde06 	br	84bf4 <_free_r+0xf0>
   84c7c:	29c00217 	ldw	r7,8(r5)
   84c80:	10c5883a 	add	r2,r2,r3
   84c84:	00c00134 	movhi	r3,4
   84c88:	18c1f504 	addi	r3,r3,2004
   84c8c:	38c03b26 	beq	r7,r3,84d7c <_free_r+0x278>
   84c90:	2a000317 	ldw	r8,12(r5)
   84c94:	11400054 	ori	r5,r2,1
   84c98:	3087883a 	add	r3,r6,r2
   84c9c:	3a000315 	stw	r8,12(r7)
   84ca0:	41c00215 	stw	r7,8(r8)
   84ca4:	31400115 	stw	r5,4(r6)
   84ca8:	18800015 	stw	r2,0(r3)
   84cac:	003fbd06 	br	84ba4 <_free_r+0xa0>
   84cb0:	39c0004c 	andi	r7,r7,1
   84cb4:	10c5883a 	add	r2,r2,r3
   84cb8:	3800071e 	bne	r7,zero,84cd8 <_free_r+0x1d4>
   84cbc:	81fffe17 	ldw	r7,-8(r16)
   84cc0:	31cdc83a 	sub	r6,r6,r7
   84cc4:	30c00317 	ldw	r3,12(r6)
   84cc8:	31400217 	ldw	r5,8(r6)
   84ccc:	11c5883a 	add	r2,r2,r7
   84cd0:	28c00315 	stw	r3,12(r5)
   84cd4:	19400215 	stw	r5,8(r3)
   84cd8:	10c00054 	ori	r3,r2,1
   84cdc:	30c00115 	stw	r3,4(r6)
   84ce0:	00c00134 	movhi	r3,4
   84ce4:	18c77c04 	addi	r3,r3,7664
   84ce8:	18c00017 	ldw	r3,0(r3)
   84cec:	21800215 	stw	r6,8(r4)
   84cf0:	10ffc036 	bltu	r2,r3,84bf4 <_free_r+0xf0>
   84cf4:	00800134 	movhi	r2,4
   84cf8:	10878d04 	addi	r2,r2,7732
   84cfc:	11400017 	ldw	r5,0(r2)
   84d00:	8809883a 	mov	r4,r17
   84d04:	00849e00 	call	849e0 <_malloc_trim_r>
   84d08:	003fba06 	br	84bf4 <_free_r+0xf0>
   84d0c:	28c9883a 	add	r4,r5,r3
   84d10:	21000117 	ldw	r4,4(r4)
   84d14:	2100004c 	andi	r4,r4,1
   84d18:	2000391e 	bne	r4,zero,84e00 <_free_r+0x2fc>
   84d1c:	29c00217 	ldw	r7,8(r5)
   84d20:	29000317 	ldw	r4,12(r5)
   84d24:	1885883a 	add	r2,r3,r2
   84d28:	10c00054 	ori	r3,r2,1
   84d2c:	39000315 	stw	r4,12(r7)
   84d30:	21c00215 	stw	r7,8(r4)
   84d34:	30c00115 	stw	r3,4(r6)
   84d38:	308d883a 	add	r6,r6,r2
   84d3c:	30800015 	stw	r2,0(r6)
   84d40:	003fac06 	br	84bf4 <_free_r+0xf0>
   84d44:	00c00504 	movi	r3,20
   84d48:	19401536 	bltu	r3,r5,84da0 <_free_r+0x29c>
   84d4c:	28c01704 	addi	r3,r5,92
   84d50:	18c7883a 	add	r3,r3,r3
   84d54:	294016c4 	addi	r5,r5,91
   84d58:	003fb406 	br	84c2c <_free_r+0x128>
   84d5c:	280bd0ba 	srai	r5,r5,2
   84d60:	00c00044 	movi	r3,1
   84d64:	38800117 	ldw	r2,4(r7)
   84d68:	194a983a 	sll	r5,r3,r5
   84d6c:	2007883a 	mov	r3,r4
   84d70:	2884b03a 	or	r2,r5,r2
   84d74:	38800115 	stw	r2,4(r7)
   84d78:	003fbb06 	br	84c68 <_free_r+0x164>
   84d7c:	21800515 	stw	r6,20(r4)
   84d80:	21800415 	stw	r6,16(r4)
   84d84:	10c00054 	ori	r3,r2,1
   84d88:	31c00315 	stw	r7,12(r6)
   84d8c:	31c00215 	stw	r7,8(r6)
   84d90:	30c00115 	stw	r3,4(r6)
   84d94:	308d883a 	add	r6,r6,r2
   84d98:	30800015 	stw	r2,0(r6)
   84d9c:	003f9506 	br	84bf4 <_free_r+0xf0>
   84da0:	00c01504 	movi	r3,84
   84da4:	19400536 	bltu	r3,r5,84dbc <_free_r+0x2b8>
   84da8:	100ad33a 	srli	r5,r2,12
   84dac:	28c01bc4 	addi	r3,r5,111
   84db0:	18c7883a 	add	r3,r3,r3
   84db4:	29401b84 	addi	r5,r5,110
   84db8:	003f9c06 	br	84c2c <_free_r+0x128>
   84dbc:	00c05504 	movi	r3,340
   84dc0:	19400536 	bltu	r3,r5,84dd8 <_free_r+0x2d4>
   84dc4:	100ad3fa 	srli	r5,r2,15
   84dc8:	28c01e04 	addi	r3,r5,120
   84dcc:	18c7883a 	add	r3,r3,r3
   84dd0:	29401dc4 	addi	r5,r5,119
   84dd4:	003f9506 	br	84c2c <_free_r+0x128>
   84dd8:	00c15504 	movi	r3,1364
   84ddc:	19400536 	bltu	r3,r5,84df4 <_free_r+0x2f0>
   84de0:	100ad4ba 	srli	r5,r2,18
   84de4:	28c01f44 	addi	r3,r5,125
   84de8:	18c7883a 	add	r3,r3,r3
   84dec:	29401f04 	addi	r5,r5,124
   84df0:	003f8e06 	br	84c2c <_free_r+0x128>
   84df4:	00c03f84 	movi	r3,254
   84df8:	01401f84 	movi	r5,126
   84dfc:	003f8b06 	br	84c2c <_free_r+0x128>
   84e00:	10c00054 	ori	r3,r2,1
   84e04:	30c00115 	stw	r3,4(r6)
   84e08:	308d883a 	add	r6,r6,r2
   84e0c:	30800015 	stw	r2,0(r6)
   84e10:	003f7806 	br	84bf4 <_free_r+0xf0>

00084e14 <__sfvwrite_r>:
   84e14:	30800217 	ldw	r2,8(r6)
   84e18:	10006726 	beq	r2,zero,84fb8 <__sfvwrite_r+0x1a4>
   84e1c:	28c0030b 	ldhu	r3,12(r5)
   84e20:	defff404 	addi	sp,sp,-48
   84e24:	dd400715 	stw	r21,28(sp)
   84e28:	dd000615 	stw	r20,24(sp)
   84e2c:	dc000215 	stw	r16,8(sp)
   84e30:	dfc00b15 	stw	ra,44(sp)
   84e34:	df000a15 	stw	fp,40(sp)
   84e38:	ddc00915 	stw	r23,36(sp)
   84e3c:	dd800815 	stw	r22,32(sp)
   84e40:	dcc00515 	stw	r19,20(sp)
   84e44:	dc800415 	stw	r18,16(sp)
   84e48:	dc400315 	stw	r17,12(sp)
   84e4c:	1880020c 	andi	r2,r3,8
   84e50:	2821883a 	mov	r16,r5
   84e54:	202b883a 	mov	r21,r4
   84e58:	3029883a 	mov	r20,r6
   84e5c:	10002726 	beq	r2,zero,84efc <__sfvwrite_r+0xe8>
   84e60:	28800417 	ldw	r2,16(r5)
   84e64:	10002526 	beq	r2,zero,84efc <__sfvwrite_r+0xe8>
   84e68:	1880008c 	andi	r2,r3,2
   84e6c:	a4400017 	ldw	r17,0(r20)
   84e70:	10002a26 	beq	r2,zero,84f1c <__sfvwrite_r+0x108>
   84e74:	05a00034 	movhi	r22,32768
   84e78:	0027883a 	mov	r19,zero
   84e7c:	0025883a 	mov	r18,zero
   84e80:	b5bf0004 	addi	r22,r22,-1024
   84e84:	980d883a 	mov	r6,r19
   84e88:	a809883a 	mov	r4,r21
   84e8c:	90004626 	beq	r18,zero,84fa8 <__sfvwrite_r+0x194>
   84e90:	900f883a 	mov	r7,r18
   84e94:	b480022e 	bgeu	r22,r18,84ea0 <__sfvwrite_r+0x8c>
   84e98:	01e00034 	movhi	r7,32768
   84e9c:	39ff0004 	addi	r7,r7,-1024
   84ea0:	80800917 	ldw	r2,36(r16)
   84ea4:	81400717 	ldw	r5,28(r16)
   84ea8:	103ee83a 	callr	r2
   84eac:	00805a0e 	bge	zero,r2,85018 <__sfvwrite_r+0x204>
   84eb0:	a0c00217 	ldw	r3,8(r20)
   84eb4:	98a7883a 	add	r19,r19,r2
   84eb8:	90a5c83a 	sub	r18,r18,r2
   84ebc:	1885c83a 	sub	r2,r3,r2
   84ec0:	a0800215 	stw	r2,8(r20)
   84ec4:	103fef1e 	bne	r2,zero,84e84 <__sfvwrite_r+0x70>
   84ec8:	0005883a 	mov	r2,zero
   84ecc:	dfc00b17 	ldw	ra,44(sp)
   84ed0:	df000a17 	ldw	fp,40(sp)
   84ed4:	ddc00917 	ldw	r23,36(sp)
   84ed8:	dd800817 	ldw	r22,32(sp)
   84edc:	dd400717 	ldw	r21,28(sp)
   84ee0:	dd000617 	ldw	r20,24(sp)
   84ee4:	dcc00517 	ldw	r19,20(sp)
   84ee8:	dc800417 	ldw	r18,16(sp)
   84eec:	dc400317 	ldw	r17,12(sp)
   84ef0:	dc000217 	ldw	r16,8(sp)
   84ef4:	dec00c04 	addi	sp,sp,48
   84ef8:	f800283a 	ret
   84efc:	800b883a 	mov	r5,r16
   84f00:	a809883a 	mov	r4,r21
   84f04:	00829840 	call	82984 <__swsetup_r>
   84f08:	1000ee1e 	bne	r2,zero,852c4 <__sfvwrite_r+0x4b0>
   84f0c:	80c0030b 	ldhu	r3,12(r16)
   84f10:	a4400017 	ldw	r17,0(r20)
   84f14:	1880008c 	andi	r2,r3,2
   84f18:	103fd61e 	bne	r2,zero,84e74 <__sfvwrite_r+0x60>
   84f1c:	1880004c 	andi	r2,r3,1
   84f20:	1000421e 	bne	r2,zero,8502c <__sfvwrite_r+0x218>
   84f24:	0039883a 	mov	fp,zero
   84f28:	0025883a 	mov	r18,zero
   84f2c:	90001a26 	beq	r18,zero,84f98 <__sfvwrite_r+0x184>
   84f30:	1880800c 	andi	r2,r3,512
   84f34:	84c00217 	ldw	r19,8(r16)
   84f38:	10002126 	beq	r2,zero,84fc0 <__sfvwrite_r+0x1ac>
   84f3c:	982f883a 	mov	r23,r19
   84f40:	94c09636 	bltu	r18,r19,8519c <__sfvwrite_r+0x388>
   84f44:	1881200c 	andi	r2,r3,1152
   84f48:	1000a11e 	bne	r2,zero,851d0 <__sfvwrite_r+0x3bc>
   84f4c:	81000017 	ldw	r4,0(r16)
   84f50:	b80d883a 	mov	r6,r23
   84f54:	e00b883a 	mov	r5,fp
   84f58:	00861340 	call	86134 <memmove>
   84f5c:	80c00217 	ldw	r3,8(r16)
   84f60:	81000017 	ldw	r4,0(r16)
   84f64:	9005883a 	mov	r2,r18
   84f68:	1ce7c83a 	sub	r19,r3,r19
   84f6c:	25cf883a 	add	r7,r4,r23
   84f70:	84c00215 	stw	r19,8(r16)
   84f74:	81c00015 	stw	r7,0(r16)
   84f78:	a0c00217 	ldw	r3,8(r20)
   84f7c:	e0b9883a 	add	fp,fp,r2
   84f80:	90a5c83a 	sub	r18,r18,r2
   84f84:	18a7c83a 	sub	r19,r3,r2
   84f88:	a4c00215 	stw	r19,8(r20)
   84f8c:	983fce26 	beq	r19,zero,84ec8 <__sfvwrite_r+0xb4>
   84f90:	80c0030b 	ldhu	r3,12(r16)
   84f94:	903fe61e 	bne	r18,zero,84f30 <__sfvwrite_r+0x11c>
   84f98:	8f000017 	ldw	fp,0(r17)
   84f9c:	8c800117 	ldw	r18,4(r17)
   84fa0:	8c400204 	addi	r17,r17,8
   84fa4:	003fe106 	br	84f2c <__sfvwrite_r+0x118>
   84fa8:	8cc00017 	ldw	r19,0(r17)
   84fac:	8c800117 	ldw	r18,4(r17)
   84fb0:	8c400204 	addi	r17,r17,8
   84fb4:	003fb306 	br	84e84 <__sfvwrite_r+0x70>
   84fb8:	0005883a 	mov	r2,zero
   84fbc:	f800283a 	ret
   84fc0:	81000017 	ldw	r4,0(r16)
   84fc4:	80800417 	ldw	r2,16(r16)
   84fc8:	11005a36 	bltu	r2,r4,85134 <__sfvwrite_r+0x320>
   84fcc:	85c00517 	ldw	r23,20(r16)
   84fd0:	95c05836 	bltu	r18,r23,85134 <__sfvwrite_r+0x320>
   84fd4:	00a00034 	movhi	r2,32768
   84fd8:	10bfffc4 	addi	r2,r2,-1
   84fdc:	9009883a 	mov	r4,r18
   84fe0:	1480012e 	bgeu	r2,r18,84fe8 <__sfvwrite_r+0x1d4>
   84fe4:	1009883a 	mov	r4,r2
   84fe8:	b80b883a 	mov	r5,r23
   84fec:	008a8b80 	call	8a8b8 <__divsi3>
   84ff0:	b80b883a 	mov	r5,r23
   84ff4:	1009883a 	mov	r4,r2
   84ff8:	008aa6c0 	call	8aa6c <__mulsi3>
   84ffc:	81400717 	ldw	r5,28(r16)
   85000:	80c00917 	ldw	r3,36(r16)
   85004:	100f883a 	mov	r7,r2
   85008:	e00d883a 	mov	r6,fp
   8500c:	a809883a 	mov	r4,r21
   85010:	183ee83a 	callr	r3
   85014:	00bfd816 	blt	zero,r2,84f78 <__sfvwrite_r+0x164>
   85018:	8080030b 	ldhu	r2,12(r16)
   8501c:	10801014 	ori	r2,r2,64
   85020:	8080030d 	sth	r2,12(r16)
   85024:	00bfffc4 	movi	r2,-1
   85028:	003fa806 	br	84ecc <__sfvwrite_r+0xb8>
   8502c:	0027883a 	mov	r19,zero
   85030:	0011883a 	mov	r8,zero
   85034:	0039883a 	mov	fp,zero
   85038:	0025883a 	mov	r18,zero
   8503c:	90001f26 	beq	r18,zero,850bc <__sfvwrite_r+0x2a8>
   85040:	40005a26 	beq	r8,zero,851ac <__sfvwrite_r+0x398>
   85044:	982d883a 	mov	r22,r19
   85048:	94c0012e 	bgeu	r18,r19,85050 <__sfvwrite_r+0x23c>
   8504c:	902d883a 	mov	r22,r18
   85050:	81000017 	ldw	r4,0(r16)
   85054:	80800417 	ldw	r2,16(r16)
   85058:	b02f883a 	mov	r23,r22
   8505c:	81c00517 	ldw	r7,20(r16)
   85060:	1100032e 	bgeu	r2,r4,85070 <__sfvwrite_r+0x25c>
   85064:	80c00217 	ldw	r3,8(r16)
   85068:	38c7883a 	add	r3,r7,r3
   8506c:	1d801816 	blt	r3,r22,850d0 <__sfvwrite_r+0x2bc>
   85070:	b1c03e16 	blt	r22,r7,8516c <__sfvwrite_r+0x358>
   85074:	80800917 	ldw	r2,36(r16)
   85078:	81400717 	ldw	r5,28(r16)
   8507c:	e00d883a 	mov	r6,fp
   85080:	da000115 	stw	r8,4(sp)
   85084:	a809883a 	mov	r4,r21
   85088:	103ee83a 	callr	r2
   8508c:	102f883a 	mov	r23,r2
   85090:	da000117 	ldw	r8,4(sp)
   85094:	00bfe00e 	bge	zero,r2,85018 <__sfvwrite_r+0x204>
   85098:	9de7c83a 	sub	r19,r19,r23
   8509c:	98001f26 	beq	r19,zero,8511c <__sfvwrite_r+0x308>
   850a0:	a0800217 	ldw	r2,8(r20)
   850a4:	e5f9883a 	add	fp,fp,r23
   850a8:	95e5c83a 	sub	r18,r18,r23
   850ac:	15efc83a 	sub	r23,r2,r23
   850b0:	a5c00215 	stw	r23,8(r20)
   850b4:	b83f8426 	beq	r23,zero,84ec8 <__sfvwrite_r+0xb4>
   850b8:	903fe11e 	bne	r18,zero,85040 <__sfvwrite_r+0x22c>
   850bc:	8f000017 	ldw	fp,0(r17)
   850c0:	8c800117 	ldw	r18,4(r17)
   850c4:	0011883a 	mov	r8,zero
   850c8:	8c400204 	addi	r17,r17,8
   850cc:	003fdb06 	br	8503c <__sfvwrite_r+0x228>
   850d0:	180d883a 	mov	r6,r3
   850d4:	e00b883a 	mov	r5,fp
   850d8:	da000115 	stw	r8,4(sp)
   850dc:	d8c00015 	stw	r3,0(sp)
   850e0:	00861340 	call	86134 <memmove>
   850e4:	d8c00017 	ldw	r3,0(sp)
   850e8:	80800017 	ldw	r2,0(r16)
   850ec:	800b883a 	mov	r5,r16
   850f0:	a809883a 	mov	r4,r21
   850f4:	10c5883a 	add	r2,r2,r3
   850f8:	80800015 	stw	r2,0(r16)
   850fc:	d8c00015 	stw	r3,0(sp)
   85100:	00845a40 	call	845a4 <_fflush_r>
   85104:	d8c00017 	ldw	r3,0(sp)
   85108:	da000117 	ldw	r8,4(sp)
   8510c:	103fc21e 	bne	r2,zero,85018 <__sfvwrite_r+0x204>
   85110:	182f883a 	mov	r23,r3
   85114:	9de7c83a 	sub	r19,r19,r23
   85118:	983fe11e 	bne	r19,zero,850a0 <__sfvwrite_r+0x28c>
   8511c:	800b883a 	mov	r5,r16
   85120:	a809883a 	mov	r4,r21
   85124:	00845a40 	call	845a4 <_fflush_r>
   85128:	103fbb1e 	bne	r2,zero,85018 <__sfvwrite_r+0x204>
   8512c:	0011883a 	mov	r8,zero
   85130:	003fdb06 	br	850a0 <__sfvwrite_r+0x28c>
   85134:	94c0012e 	bgeu	r18,r19,8513c <__sfvwrite_r+0x328>
   85138:	9027883a 	mov	r19,r18
   8513c:	980d883a 	mov	r6,r19
   85140:	e00b883a 	mov	r5,fp
   85144:	00861340 	call	86134 <memmove>
   85148:	80800217 	ldw	r2,8(r16)
   8514c:	80c00017 	ldw	r3,0(r16)
   85150:	14c5c83a 	sub	r2,r2,r19
   85154:	1cc7883a 	add	r3,r3,r19
   85158:	80800215 	stw	r2,8(r16)
   8515c:	80c00015 	stw	r3,0(r16)
   85160:	10004326 	beq	r2,zero,85270 <__sfvwrite_r+0x45c>
   85164:	9805883a 	mov	r2,r19
   85168:	003f8306 	br	84f78 <__sfvwrite_r+0x164>
   8516c:	b00d883a 	mov	r6,r22
   85170:	e00b883a 	mov	r5,fp
   85174:	da000115 	stw	r8,4(sp)
   85178:	00861340 	call	86134 <memmove>
   8517c:	80800217 	ldw	r2,8(r16)
   85180:	80c00017 	ldw	r3,0(r16)
   85184:	da000117 	ldw	r8,4(sp)
   85188:	1585c83a 	sub	r2,r2,r22
   8518c:	1dad883a 	add	r22,r3,r22
   85190:	80800215 	stw	r2,8(r16)
   85194:	85800015 	stw	r22,0(r16)
   85198:	003fbf06 	br	85098 <__sfvwrite_r+0x284>
   8519c:	81000017 	ldw	r4,0(r16)
   851a0:	9027883a 	mov	r19,r18
   851a4:	902f883a 	mov	r23,r18
   851a8:	003f6906 	br	84f50 <__sfvwrite_r+0x13c>
   851ac:	900d883a 	mov	r6,r18
   851b0:	01400284 	movi	r5,10
   851b4:	e009883a 	mov	r4,fp
   851b8:	0085f080 	call	85f08 <memchr>
   851bc:	10003e26 	beq	r2,zero,852b8 <__sfvwrite_r+0x4a4>
   851c0:	10800044 	addi	r2,r2,1
   851c4:	1727c83a 	sub	r19,r2,fp
   851c8:	02000044 	movi	r8,1
   851cc:	003f9d06 	br	85044 <__sfvwrite_r+0x230>
   851d0:	80800517 	ldw	r2,20(r16)
   851d4:	81400417 	ldw	r5,16(r16)
   851d8:	81c00017 	ldw	r7,0(r16)
   851dc:	10a7883a 	add	r19,r2,r2
   851e0:	9885883a 	add	r2,r19,r2
   851e4:	1026d7fa 	srli	r19,r2,31
   851e8:	396dc83a 	sub	r22,r7,r5
   851ec:	b1000044 	addi	r4,r22,1
   851f0:	9885883a 	add	r2,r19,r2
   851f4:	1027d07a 	srai	r19,r2,1
   851f8:	2485883a 	add	r2,r4,r18
   851fc:	980d883a 	mov	r6,r19
   85200:	9880022e 	bgeu	r19,r2,8520c <__sfvwrite_r+0x3f8>
   85204:	1027883a 	mov	r19,r2
   85208:	100d883a 	mov	r6,r2
   8520c:	18c1000c 	andi	r3,r3,1024
   85210:	18001c26 	beq	r3,zero,85284 <__sfvwrite_r+0x470>
   85214:	300b883a 	mov	r5,r6
   85218:	a809883a 	mov	r4,r21
   8521c:	00856fc0 	call	856fc <_malloc_r>
   85220:	102f883a 	mov	r23,r2
   85224:	10002926 	beq	r2,zero,852cc <__sfvwrite_r+0x4b8>
   85228:	81400417 	ldw	r5,16(r16)
   8522c:	b00d883a 	mov	r6,r22
   85230:	1009883a 	mov	r4,r2
   85234:	0085fec0 	call	85fec <memcpy>
   85238:	8080030b 	ldhu	r2,12(r16)
   8523c:	00fedfc4 	movi	r3,-1153
   85240:	10c4703a 	and	r2,r2,r3
   85244:	10802014 	ori	r2,r2,128
   85248:	8080030d 	sth	r2,12(r16)
   8524c:	bd89883a 	add	r4,r23,r22
   85250:	9d8fc83a 	sub	r7,r19,r22
   85254:	85c00415 	stw	r23,16(r16)
   85258:	84c00515 	stw	r19,20(r16)
   8525c:	81000015 	stw	r4,0(r16)
   85260:	9027883a 	mov	r19,r18
   85264:	81c00215 	stw	r7,8(r16)
   85268:	902f883a 	mov	r23,r18
   8526c:	003f3806 	br	84f50 <__sfvwrite_r+0x13c>
   85270:	800b883a 	mov	r5,r16
   85274:	a809883a 	mov	r4,r21
   85278:	00845a40 	call	845a4 <_fflush_r>
   8527c:	103fb926 	beq	r2,zero,85164 <__sfvwrite_r+0x350>
   85280:	003f6506 	br	85018 <__sfvwrite_r+0x204>
   85284:	a809883a 	mov	r4,r21
   85288:	00874700 	call	87470 <_realloc_r>
   8528c:	102f883a 	mov	r23,r2
   85290:	103fee1e 	bne	r2,zero,8524c <__sfvwrite_r+0x438>
   85294:	81400417 	ldw	r5,16(r16)
   85298:	a809883a 	mov	r4,r21
   8529c:	0084b040 	call	84b04 <_free_r>
   852a0:	8080030b 	ldhu	r2,12(r16)
   852a4:	00ffdfc4 	movi	r3,-129
   852a8:	1884703a 	and	r2,r3,r2
   852ac:	00c00304 	movi	r3,12
   852b0:	a8c00015 	stw	r3,0(r21)
   852b4:	003f5906 	br	8501c <__sfvwrite_r+0x208>
   852b8:	94c00044 	addi	r19,r18,1
   852bc:	02000044 	movi	r8,1
   852c0:	003f6006 	br	85044 <__sfvwrite_r+0x230>
   852c4:	00bfffc4 	movi	r2,-1
   852c8:	003f0006 	br	84ecc <__sfvwrite_r+0xb8>
   852cc:	00800304 	movi	r2,12
   852d0:	a8800015 	stw	r2,0(r21)
   852d4:	8080030b 	ldhu	r2,12(r16)
   852d8:	003f5006 	br	8501c <__sfvwrite_r+0x208>

000852dc <_fwalk>:
   852dc:	defff704 	addi	sp,sp,-36
   852e0:	dd000415 	stw	r20,16(sp)
   852e4:	dfc00815 	stw	ra,32(sp)
   852e8:	ddc00715 	stw	r23,28(sp)
   852ec:	dd800615 	stw	r22,24(sp)
   852f0:	dd400515 	stw	r21,20(sp)
   852f4:	dcc00315 	stw	r19,12(sp)
   852f8:	dc800215 	stw	r18,8(sp)
   852fc:	dc400115 	stw	r17,4(sp)
   85300:	dc000015 	stw	r16,0(sp)
   85304:	2500b804 	addi	r20,r4,736
   85308:	a0002326 	beq	r20,zero,85398 <_fwalk+0xbc>
   8530c:	282b883a 	mov	r21,r5
   85310:	002f883a 	mov	r23,zero
   85314:	05800044 	movi	r22,1
   85318:	04ffffc4 	movi	r19,-1
   8531c:	a4400117 	ldw	r17,4(r20)
   85320:	a4800217 	ldw	r18,8(r20)
   85324:	8c7fffc4 	addi	r17,r17,-1
   85328:	88000d16 	blt	r17,zero,85360 <_fwalk+0x84>
   8532c:	94000304 	addi	r16,r18,12
   85330:	94800384 	addi	r18,r18,14
   85334:	8080000b 	ldhu	r2,0(r16)
   85338:	8c7fffc4 	addi	r17,r17,-1
   8533c:	813ffd04 	addi	r4,r16,-12
   85340:	b080042e 	bgeu	r22,r2,85354 <_fwalk+0x78>
   85344:	9080000f 	ldh	r2,0(r18)
   85348:	14c00226 	beq	r2,r19,85354 <_fwalk+0x78>
   8534c:	a83ee83a 	callr	r21
   85350:	b8aeb03a 	or	r23,r23,r2
   85354:	84001a04 	addi	r16,r16,104
   85358:	94801a04 	addi	r18,r18,104
   8535c:	8cfff51e 	bne	r17,r19,85334 <_fwalk+0x58>
   85360:	a5000017 	ldw	r20,0(r20)
   85364:	a03fed1e 	bne	r20,zero,8531c <_fwalk+0x40>
   85368:	b805883a 	mov	r2,r23
   8536c:	dfc00817 	ldw	ra,32(sp)
   85370:	ddc00717 	ldw	r23,28(sp)
   85374:	dd800617 	ldw	r22,24(sp)
   85378:	dd400517 	ldw	r21,20(sp)
   8537c:	dd000417 	ldw	r20,16(sp)
   85380:	dcc00317 	ldw	r19,12(sp)
   85384:	dc800217 	ldw	r18,8(sp)
   85388:	dc400117 	ldw	r17,4(sp)
   8538c:	dc000017 	ldw	r16,0(sp)
   85390:	dec00904 	addi	sp,sp,36
   85394:	f800283a 	ret
   85398:	002f883a 	mov	r23,zero
   8539c:	003ff206 	br	85368 <_fwalk+0x8c>

000853a0 <_fwalk_reent>:
   853a0:	defff704 	addi	sp,sp,-36
   853a4:	dd000415 	stw	r20,16(sp)
   853a8:	dfc00815 	stw	ra,32(sp)
   853ac:	ddc00715 	stw	r23,28(sp)
   853b0:	dd800615 	stw	r22,24(sp)
   853b4:	dd400515 	stw	r21,20(sp)
   853b8:	dcc00315 	stw	r19,12(sp)
   853bc:	dc800215 	stw	r18,8(sp)
   853c0:	dc400115 	stw	r17,4(sp)
   853c4:	dc000015 	stw	r16,0(sp)
   853c8:	2500b804 	addi	r20,r4,736
   853cc:	a0002326 	beq	r20,zero,8545c <_fwalk_reent+0xbc>
   853d0:	282b883a 	mov	r21,r5
   853d4:	2027883a 	mov	r19,r4
   853d8:	002f883a 	mov	r23,zero
   853dc:	05800044 	movi	r22,1
   853e0:	04bfffc4 	movi	r18,-1
   853e4:	a4400117 	ldw	r17,4(r20)
   853e8:	a4000217 	ldw	r16,8(r20)
   853ec:	8c7fffc4 	addi	r17,r17,-1
   853f0:	88000c16 	blt	r17,zero,85424 <_fwalk_reent+0x84>
   853f4:	84000304 	addi	r16,r16,12
   853f8:	8080000b 	ldhu	r2,0(r16)
   853fc:	8c7fffc4 	addi	r17,r17,-1
   85400:	817ffd04 	addi	r5,r16,-12
   85404:	b080052e 	bgeu	r22,r2,8541c <_fwalk_reent+0x7c>
   85408:	8080008f 	ldh	r2,2(r16)
   8540c:	9809883a 	mov	r4,r19
   85410:	14800226 	beq	r2,r18,8541c <_fwalk_reent+0x7c>
   85414:	a83ee83a 	callr	r21
   85418:	b8aeb03a 	or	r23,r23,r2
   8541c:	84001a04 	addi	r16,r16,104
   85420:	8cbff51e 	bne	r17,r18,853f8 <_fwalk_reent+0x58>
   85424:	a5000017 	ldw	r20,0(r20)
   85428:	a03fee1e 	bne	r20,zero,853e4 <_fwalk_reent+0x44>
   8542c:	b805883a 	mov	r2,r23
   85430:	dfc00817 	ldw	ra,32(sp)
   85434:	ddc00717 	ldw	r23,28(sp)
   85438:	dd800617 	ldw	r22,24(sp)
   8543c:	dd400517 	ldw	r21,20(sp)
   85440:	dd000417 	ldw	r20,16(sp)
   85444:	dcc00317 	ldw	r19,12(sp)
   85448:	dc800217 	ldw	r18,8(sp)
   8544c:	dc400117 	ldw	r17,4(sp)
   85450:	dc000017 	ldw	r16,0(sp)
   85454:	dec00904 	addi	sp,sp,36
   85458:	f800283a 	ret
   8545c:	002f883a 	mov	r23,zero
   85460:	003ff206 	br	8542c <_fwalk_reent+0x8c>

00085464 <_setlocale_r>:
   85464:	30001b26 	beq	r6,zero,854d4 <_setlocale_r+0x70>
   85468:	01400134 	movhi	r5,4
   8546c:	defffe04 	addi	sp,sp,-8
   85470:	29402b04 	addi	r5,r5,172
   85474:	3009883a 	mov	r4,r6
   85478:	dc000015 	stw	r16,0(sp)
   8547c:	dfc00115 	stw	ra,4(sp)
   85480:	3021883a 	mov	r16,r6
   85484:	0087bd80 	call	87bd8 <strcmp>
   85488:	1000061e 	bne	r2,zero,854a4 <_setlocale_r+0x40>
   8548c:	00800134 	movhi	r2,4
   85490:	10802a04 	addi	r2,r2,168
   85494:	dfc00117 	ldw	ra,4(sp)
   85498:	dc000017 	ldw	r16,0(sp)
   8549c:	dec00204 	addi	sp,sp,8
   854a0:	f800283a 	ret
   854a4:	01400134 	movhi	r5,4
   854a8:	29402a04 	addi	r5,r5,168
   854ac:	8009883a 	mov	r4,r16
   854b0:	0087bd80 	call	87bd8 <strcmp>
   854b4:	103ff526 	beq	r2,zero,8548c <_setlocale_r+0x28>
   854b8:	01400134 	movhi	r5,4
   854bc:	29401504 	addi	r5,r5,84
   854c0:	8009883a 	mov	r4,r16
   854c4:	0087bd80 	call	87bd8 <strcmp>
   854c8:	103ff026 	beq	r2,zero,8548c <_setlocale_r+0x28>
   854cc:	0005883a 	mov	r2,zero
   854d0:	003ff006 	br	85494 <_setlocale_r+0x30>
   854d4:	00800134 	movhi	r2,4
   854d8:	10802a04 	addi	r2,r2,168
   854dc:	f800283a 	ret

000854e0 <__locale_charset>:
   854e0:	00800134 	movhi	r2,4
   854e4:	1081dd04 	addi	r2,r2,1908
   854e8:	f800283a 	ret

000854ec <__locale_mb_cur_max>:
   854ec:	00800134 	movhi	r2,4
   854f0:	10877a04 	addi	r2,r2,7656
   854f4:	10800017 	ldw	r2,0(r2)
   854f8:	f800283a 	ret

000854fc <__locale_msgcharset>:
   854fc:	00800134 	movhi	r2,4
   85500:	1081d504 	addi	r2,r2,1876
   85504:	f800283a 	ret

00085508 <__locale_cjk_lang>:
   85508:	0005883a 	mov	r2,zero
   8550c:	f800283a 	ret

00085510 <_localeconv_r>:
   85510:	00800134 	movhi	r2,4
   85514:	1081e504 	addi	r2,r2,1940
   85518:	f800283a 	ret

0008551c <setlocale>:
   8551c:	00800134 	movhi	r2,4
   85520:	10877904 	addi	r2,r2,7652
   85524:	280d883a 	mov	r6,r5
   85528:	200b883a 	mov	r5,r4
   8552c:	11000017 	ldw	r4,0(r2)
   85530:	00854641 	jmpi	85464 <_setlocale_r>

00085534 <localeconv>:
   85534:	00800134 	movhi	r2,4
   85538:	1081e504 	addi	r2,r2,1940
   8553c:	f800283a 	ret

00085540 <__smakebuf_r>:
   85540:	2880030b 	ldhu	r2,12(r5)
   85544:	10c0008c 	andi	r3,r2,2
   85548:	1800411e 	bne	r3,zero,85650 <__smakebuf_r+0x110>
   8554c:	deffec04 	addi	sp,sp,-80
   85550:	dc000f15 	stw	r16,60(sp)
   85554:	2821883a 	mov	r16,r5
   85558:	2940038f 	ldh	r5,14(r5)
   8555c:	dc401015 	stw	r17,64(sp)
   85560:	dfc01315 	stw	ra,76(sp)
   85564:	dcc01215 	stw	r19,72(sp)
   85568:	dc801115 	stw	r18,68(sp)
   8556c:	2023883a 	mov	r17,r4
   85570:	28001c16 	blt	r5,zero,855e4 <__smakebuf_r+0xa4>
   85574:	d80d883a 	mov	r6,sp
   85578:	00898480 	call	89848 <_fstat_r>
   8557c:	10001816 	blt	r2,zero,855e0 <__smakebuf_r+0xa0>
   85580:	d8800117 	ldw	r2,4(sp)
   85584:	00e00014 	movui	r3,32768
   85588:	10bc000c 	andi	r2,r2,61440
   8558c:	14c80020 	cmpeqi	r19,r2,8192
   85590:	10c03726 	beq	r2,r3,85670 <__smakebuf_r+0x130>
   85594:	80c0030b 	ldhu	r3,12(r16)
   85598:	18c20014 	ori	r3,r3,2048
   8559c:	80c0030d 	sth	r3,12(r16)
   855a0:	00c80004 	movi	r3,8192
   855a4:	10c0521e 	bne	r2,r3,856f0 <__smakebuf_r+0x1b0>
   855a8:	8140038f 	ldh	r5,14(r16)
   855ac:	8809883a 	mov	r4,r17
   855b0:	00898a40 	call	898a4 <_isatty_r>
   855b4:	10004c26 	beq	r2,zero,856e8 <__smakebuf_r+0x1a8>
   855b8:	8080030b 	ldhu	r2,12(r16)
   855bc:	80c010c4 	addi	r3,r16,67
   855c0:	80c00015 	stw	r3,0(r16)
   855c4:	10800054 	ori	r2,r2,1
   855c8:	8080030d 	sth	r2,12(r16)
   855cc:	00800044 	movi	r2,1
   855d0:	80c00415 	stw	r3,16(r16)
   855d4:	80800515 	stw	r2,20(r16)
   855d8:	04810004 	movi	r18,1024
   855dc:	00000706 	br	855fc <__smakebuf_r+0xbc>
   855e0:	8080030b 	ldhu	r2,12(r16)
   855e4:	10c0200c 	andi	r3,r2,128
   855e8:	18001f1e 	bne	r3,zero,85668 <__smakebuf_r+0x128>
   855ec:	04810004 	movi	r18,1024
   855f0:	10820014 	ori	r2,r2,2048
   855f4:	8080030d 	sth	r2,12(r16)
   855f8:	0027883a 	mov	r19,zero
   855fc:	900b883a 	mov	r5,r18
   85600:	8809883a 	mov	r4,r17
   85604:	00856fc0 	call	856fc <_malloc_r>
   85608:	10002c26 	beq	r2,zero,856bc <__smakebuf_r+0x17c>
   8560c:	80c0030b 	ldhu	r3,12(r16)
   85610:	01000234 	movhi	r4,8
   85614:	21118e04 	addi	r4,r4,17976
   85618:	89000f15 	stw	r4,60(r17)
   8561c:	18c02014 	ori	r3,r3,128
   85620:	80c0030d 	sth	r3,12(r16)
   85624:	80800015 	stw	r2,0(r16)
   85628:	80800415 	stw	r2,16(r16)
   8562c:	84800515 	stw	r18,20(r16)
   85630:	98001a1e 	bne	r19,zero,8569c <__smakebuf_r+0x15c>
   85634:	dfc01317 	ldw	ra,76(sp)
   85638:	dcc01217 	ldw	r19,72(sp)
   8563c:	dc801117 	ldw	r18,68(sp)
   85640:	dc401017 	ldw	r17,64(sp)
   85644:	dc000f17 	ldw	r16,60(sp)
   85648:	dec01404 	addi	sp,sp,80
   8564c:	f800283a 	ret
   85650:	288010c4 	addi	r2,r5,67
   85654:	28800015 	stw	r2,0(r5)
   85658:	28800415 	stw	r2,16(r5)
   8565c:	00800044 	movi	r2,1
   85660:	28800515 	stw	r2,20(r5)
   85664:	f800283a 	ret
   85668:	04801004 	movi	r18,64
   8566c:	003fe006 	br	855f0 <__smakebuf_r+0xb0>
   85670:	81000a17 	ldw	r4,40(r16)
   85674:	00c00234 	movhi	r3,8
   85678:	18dedd04 	addi	r3,r3,31604
   8567c:	20ffc51e 	bne	r4,r3,85594 <__smakebuf_r+0x54>
   85680:	8080030b 	ldhu	r2,12(r16)
   85684:	04810004 	movi	r18,1024
   85688:	84801315 	stw	r18,76(r16)
   8568c:	1484b03a 	or	r2,r2,r18
   85690:	8080030d 	sth	r2,12(r16)
   85694:	0027883a 	mov	r19,zero
   85698:	003fd806 	br	855fc <__smakebuf_r+0xbc>
   8569c:	8140038f 	ldh	r5,14(r16)
   856a0:	8809883a 	mov	r4,r17
   856a4:	00898a40 	call	898a4 <_isatty_r>
   856a8:	103fe226 	beq	r2,zero,85634 <__smakebuf_r+0xf4>
   856ac:	8080030b 	ldhu	r2,12(r16)
   856b0:	10800054 	ori	r2,r2,1
   856b4:	8080030d 	sth	r2,12(r16)
   856b8:	003fde06 	br	85634 <__smakebuf_r+0xf4>
   856bc:	8080030b 	ldhu	r2,12(r16)
   856c0:	10c0800c 	andi	r3,r2,512
   856c4:	183fdb1e 	bne	r3,zero,85634 <__smakebuf_r+0xf4>
   856c8:	10800094 	ori	r2,r2,2
   856cc:	80c010c4 	addi	r3,r16,67
   856d0:	8080030d 	sth	r2,12(r16)
   856d4:	00800044 	movi	r2,1
   856d8:	80c00015 	stw	r3,0(r16)
   856dc:	80c00415 	stw	r3,16(r16)
   856e0:	80800515 	stw	r2,20(r16)
   856e4:	003fd306 	br	85634 <__smakebuf_r+0xf4>
   856e8:	04810004 	movi	r18,1024
   856ec:	003fc306 	br	855fc <__smakebuf_r+0xbc>
   856f0:	0027883a 	mov	r19,zero
   856f4:	04810004 	movi	r18,1024
   856f8:	003fc006 	br	855fc <__smakebuf_r+0xbc>

000856fc <_malloc_r>:
   856fc:	defff504 	addi	sp,sp,-44
   85700:	dc800315 	stw	r18,12(sp)
   85704:	dfc00a15 	stw	ra,40(sp)
   85708:	df000915 	stw	fp,36(sp)
   8570c:	ddc00815 	stw	r23,32(sp)
   85710:	dd800715 	stw	r22,28(sp)
   85714:	dd400615 	stw	r21,24(sp)
   85718:	dd000515 	stw	r20,20(sp)
   8571c:	dcc00415 	stw	r19,16(sp)
   85720:	dc400215 	stw	r17,8(sp)
   85724:	dc000115 	stw	r16,4(sp)
   85728:	288002c4 	addi	r2,r5,11
   8572c:	00c00584 	movi	r3,22
   85730:	2025883a 	mov	r18,r4
   85734:	18807f2e 	bgeu	r3,r2,85934 <_malloc_r+0x238>
   85738:	047ffe04 	movi	r17,-8
   8573c:	1462703a 	and	r17,r2,r17
   85740:	8800a316 	blt	r17,zero,859d0 <_malloc_r+0x2d4>
   85744:	8940a236 	bltu	r17,r5,859d0 <_malloc_r+0x2d4>
   85748:	008d8d40 	call	8d8d4 <__malloc_lock>
   8574c:	00807dc4 	movi	r2,503
   85750:	1441e92e 	bgeu	r2,r17,85ef8 <_malloc_r+0x7fc>
   85754:	8804d27a 	srli	r2,r17,9
   85758:	1000a126 	beq	r2,zero,859e0 <_malloc_r+0x2e4>
   8575c:	00c00104 	movi	r3,4
   85760:	18811e36 	bltu	r3,r2,85bdc <_malloc_r+0x4e0>
   85764:	8804d1ba 	srli	r2,r17,6
   85768:	12000e44 	addi	r8,r2,57
   8576c:	11c00e04 	addi	r7,r2,56
   85770:	4209883a 	add	r4,r8,r8
   85774:	04c00134 	movhi	r19,4
   85778:	2109883a 	add	r4,r4,r4
   8577c:	9cc1f304 	addi	r19,r19,1996
   85780:	2109883a 	add	r4,r4,r4
   85784:	9909883a 	add	r4,r19,r4
   85788:	24000117 	ldw	r16,4(r4)
   8578c:	213ffe04 	addi	r4,r4,-8
   85790:	24009726 	beq	r4,r16,859f0 <_malloc_r+0x2f4>
   85794:	80800117 	ldw	r2,4(r16)
   85798:	01bfff04 	movi	r6,-4
   8579c:	014003c4 	movi	r5,15
   857a0:	1184703a 	and	r2,r2,r6
   857a4:	1447c83a 	sub	r3,r2,r17
   857a8:	28c00716 	blt	r5,r3,857c8 <_malloc_r+0xcc>
   857ac:	1800920e 	bge	r3,zero,859f8 <_malloc_r+0x2fc>
   857b0:	84000317 	ldw	r16,12(r16)
   857b4:	24008e26 	beq	r4,r16,859f0 <_malloc_r+0x2f4>
   857b8:	80800117 	ldw	r2,4(r16)
   857bc:	1184703a 	and	r2,r2,r6
   857c0:	1447c83a 	sub	r3,r2,r17
   857c4:	28fff90e 	bge	r5,r3,857ac <_malloc_r+0xb0>
   857c8:	3809883a 	mov	r4,r7
   857cc:	01800134 	movhi	r6,4
   857d0:	9c000417 	ldw	r16,16(r19)
   857d4:	3181f304 	addi	r6,r6,1996
   857d8:	32000204 	addi	r8,r6,8
   857dc:	82013426 	beq	r16,r8,85cb0 <_malloc_r+0x5b4>
   857e0:	80c00117 	ldw	r3,4(r16)
   857e4:	00bfff04 	movi	r2,-4
   857e8:	188e703a 	and	r7,r3,r2
   857ec:	3c45c83a 	sub	r2,r7,r17
   857f0:	00c003c4 	movi	r3,15
   857f4:	18811f16 	blt	r3,r2,85c74 <_malloc_r+0x578>
   857f8:	32000515 	stw	r8,20(r6)
   857fc:	32000415 	stw	r8,16(r6)
   85800:	10007f0e 	bge	r2,zero,85a00 <_malloc_r+0x304>
   85804:	00807fc4 	movi	r2,511
   85808:	11c0fd36 	bltu	r2,r7,85c00 <_malloc_r+0x504>
   8580c:	3806d0fa 	srli	r3,r7,3
   85810:	01c00044 	movi	r7,1
   85814:	30800117 	ldw	r2,4(r6)
   85818:	19400044 	addi	r5,r3,1
   8581c:	294b883a 	add	r5,r5,r5
   85820:	1807d0ba 	srai	r3,r3,2
   85824:	294b883a 	add	r5,r5,r5
   85828:	294b883a 	add	r5,r5,r5
   8582c:	298b883a 	add	r5,r5,r6
   85830:	38c6983a 	sll	r3,r7,r3
   85834:	29c00017 	ldw	r7,0(r5)
   85838:	2a7ffe04 	addi	r9,r5,-8
   8583c:	1886b03a 	or	r3,r3,r2
   85840:	82400315 	stw	r9,12(r16)
   85844:	81c00215 	stw	r7,8(r16)
   85848:	30c00115 	stw	r3,4(r6)
   8584c:	2c000015 	stw	r16,0(r5)
   85850:	3c000315 	stw	r16,12(r7)
   85854:	2005d0ba 	srai	r2,r4,2
   85858:	01400044 	movi	r5,1
   8585c:	288a983a 	sll	r5,r5,r2
   85860:	19406f36 	bltu	r3,r5,85a20 <_malloc_r+0x324>
   85864:	28c4703a 	and	r2,r5,r3
   85868:	10000a1e 	bne	r2,zero,85894 <_malloc_r+0x198>
   8586c:	00bfff04 	movi	r2,-4
   85870:	294b883a 	add	r5,r5,r5
   85874:	2088703a 	and	r4,r4,r2
   85878:	28c4703a 	and	r2,r5,r3
   8587c:	21000104 	addi	r4,r4,4
   85880:	1000041e 	bne	r2,zero,85894 <_malloc_r+0x198>
   85884:	294b883a 	add	r5,r5,r5
   85888:	28c4703a 	and	r2,r5,r3
   8588c:	21000104 	addi	r4,r4,4
   85890:	103ffc26 	beq	r2,zero,85884 <_malloc_r+0x188>
   85894:	02bfff04 	movi	r10,-4
   85898:	024003c4 	movi	r9,15
   8589c:	21800044 	addi	r6,r4,1
   858a0:	318d883a 	add	r6,r6,r6
   858a4:	318d883a 	add	r6,r6,r6
   858a8:	318d883a 	add	r6,r6,r6
   858ac:	998d883a 	add	r6,r19,r6
   858b0:	333ffe04 	addi	r12,r6,-8
   858b4:	2017883a 	mov	r11,r4
   858b8:	31800104 	addi	r6,r6,4
   858bc:	34000017 	ldw	r16,0(r6)
   858c0:	31fffd04 	addi	r7,r6,-12
   858c4:	81c0041e 	bne	r16,r7,858d8 <_malloc_r+0x1dc>
   858c8:	0000fb06 	br	85cb8 <_malloc_r+0x5bc>
   858cc:	1801030e 	bge	r3,zero,85cdc <_malloc_r+0x5e0>
   858d0:	84000317 	ldw	r16,12(r16)
   858d4:	81c0f826 	beq	r16,r7,85cb8 <_malloc_r+0x5bc>
   858d8:	80800117 	ldw	r2,4(r16)
   858dc:	1284703a 	and	r2,r2,r10
   858e0:	1447c83a 	sub	r3,r2,r17
   858e4:	48fff90e 	bge	r9,r3,858cc <_malloc_r+0x1d0>
   858e8:	80800317 	ldw	r2,12(r16)
   858ec:	81000217 	ldw	r4,8(r16)
   858f0:	89400054 	ori	r5,r17,1
   858f4:	81400115 	stw	r5,4(r16)
   858f8:	20800315 	stw	r2,12(r4)
   858fc:	11000215 	stw	r4,8(r2)
   85900:	8463883a 	add	r17,r16,r17
   85904:	9c400515 	stw	r17,20(r19)
   85908:	9c400415 	stw	r17,16(r19)
   8590c:	18800054 	ori	r2,r3,1
   85910:	88800115 	stw	r2,4(r17)
   85914:	8a000315 	stw	r8,12(r17)
   85918:	8a000215 	stw	r8,8(r17)
   8591c:	88e3883a 	add	r17,r17,r3
   85920:	88c00015 	stw	r3,0(r17)
   85924:	9009883a 	mov	r4,r18
   85928:	008d8f80 	call	8d8f8 <__malloc_unlock>
   8592c:	80800204 	addi	r2,r16,8
   85930:	00001b06 	br	859a0 <_malloc_r+0x2a4>
   85934:	04400404 	movi	r17,16
   85938:	89402536 	bltu	r17,r5,859d0 <_malloc_r+0x2d4>
   8593c:	008d8d40 	call	8d8d4 <__malloc_lock>
   85940:	00800184 	movi	r2,6
   85944:	01000084 	movi	r4,2
   85948:	04c00134 	movhi	r19,4
   8594c:	1085883a 	add	r2,r2,r2
   85950:	9cc1f304 	addi	r19,r19,1996
   85954:	1085883a 	add	r2,r2,r2
   85958:	9885883a 	add	r2,r19,r2
   8595c:	14000117 	ldw	r16,4(r2)
   85960:	10fffe04 	addi	r3,r2,-8
   85964:	80c0d926 	beq	r16,r3,85ccc <_malloc_r+0x5d0>
   85968:	80c00117 	ldw	r3,4(r16)
   8596c:	81000317 	ldw	r4,12(r16)
   85970:	00bfff04 	movi	r2,-4
   85974:	1884703a 	and	r2,r3,r2
   85978:	81400217 	ldw	r5,8(r16)
   8597c:	8085883a 	add	r2,r16,r2
   85980:	10c00117 	ldw	r3,4(r2)
   85984:	29000315 	stw	r4,12(r5)
   85988:	21400215 	stw	r5,8(r4)
   8598c:	18c00054 	ori	r3,r3,1
   85990:	10c00115 	stw	r3,4(r2)
   85994:	9009883a 	mov	r4,r18
   85998:	008d8f80 	call	8d8f8 <__malloc_unlock>
   8599c:	80800204 	addi	r2,r16,8
   859a0:	dfc00a17 	ldw	ra,40(sp)
   859a4:	df000917 	ldw	fp,36(sp)
   859a8:	ddc00817 	ldw	r23,32(sp)
   859ac:	dd800717 	ldw	r22,28(sp)
   859b0:	dd400617 	ldw	r21,24(sp)
   859b4:	dd000517 	ldw	r20,20(sp)
   859b8:	dcc00417 	ldw	r19,16(sp)
   859bc:	dc800317 	ldw	r18,12(sp)
   859c0:	dc400217 	ldw	r17,8(sp)
   859c4:	dc000117 	ldw	r16,4(sp)
   859c8:	dec00b04 	addi	sp,sp,44
   859cc:	f800283a 	ret
   859d0:	00800304 	movi	r2,12
   859d4:	90800015 	stw	r2,0(r18)
   859d8:	0005883a 	mov	r2,zero
   859dc:	003ff006 	br	859a0 <_malloc_r+0x2a4>
   859e0:	01002004 	movi	r4,128
   859e4:	02001004 	movi	r8,64
   859e8:	01c00fc4 	movi	r7,63
   859ec:	003f6106 	br	85774 <_malloc_r+0x78>
   859f0:	4009883a 	mov	r4,r8
   859f4:	003f7506 	br	857cc <_malloc_r+0xd0>
   859f8:	81000317 	ldw	r4,12(r16)
   859fc:	003fde06 	br	85978 <_malloc_r+0x27c>
   85a00:	81c5883a 	add	r2,r16,r7
   85a04:	11400117 	ldw	r5,4(r2)
   85a08:	9009883a 	mov	r4,r18
   85a0c:	29400054 	ori	r5,r5,1
   85a10:	11400115 	stw	r5,4(r2)
   85a14:	008d8f80 	call	8d8f8 <__malloc_unlock>
   85a18:	80800204 	addi	r2,r16,8
   85a1c:	003fe006 	br	859a0 <_malloc_r+0x2a4>
   85a20:	9c000217 	ldw	r16,8(r19)
   85a24:	00bfff04 	movi	r2,-4
   85a28:	85800117 	ldw	r22,4(r16)
   85a2c:	b0ac703a 	and	r22,r22,r2
   85a30:	b4400336 	bltu	r22,r17,85a40 <_malloc_r+0x344>
   85a34:	b445c83a 	sub	r2,r22,r17
   85a38:	00c003c4 	movi	r3,15
   85a3c:	18805d16 	blt	r3,r2,85bb4 <_malloc_r+0x4b8>
   85a40:	05c00134 	movhi	r23,4
   85a44:	00800134 	movhi	r2,4
   85a48:	10878d04 	addi	r2,r2,7732
   85a4c:	bdc77b04 	addi	r23,r23,7660
   85a50:	15400017 	ldw	r21,0(r2)
   85a54:	b8c00017 	ldw	r3,0(r23)
   85a58:	00bfffc4 	movi	r2,-1
   85a5c:	858d883a 	add	r6,r16,r22
   85a60:	8d6b883a 	add	r21,r17,r21
   85a64:	1880ea26 	beq	r3,r2,85e10 <_malloc_r+0x714>
   85a68:	ad4403c4 	addi	r21,r21,4111
   85a6c:	00bc0004 	movi	r2,-4096
   85a70:	a8aa703a 	and	r21,r21,r2
   85a74:	a80b883a 	mov	r5,r21
   85a78:	9009883a 	mov	r4,r18
   85a7c:	d9800015 	stw	r6,0(sp)
   85a80:	0087a480 	call	87a48 <_sbrk_r>
   85a84:	1029883a 	mov	r20,r2
   85a88:	00bfffc4 	movi	r2,-1
   85a8c:	d9800017 	ldw	r6,0(sp)
   85a90:	a080e826 	beq	r20,r2,85e34 <_malloc_r+0x738>
   85a94:	a180a636 	bltu	r20,r6,85d30 <_malloc_r+0x634>
   85a98:	07000134 	movhi	fp,4
   85a9c:	e7079604 	addi	fp,fp,7768
   85aa0:	e0800017 	ldw	r2,0(fp)
   85aa4:	a887883a 	add	r3,r21,r2
   85aa8:	e0c00015 	stw	r3,0(fp)
   85aac:	3500e626 	beq	r6,r20,85e48 <_malloc_r+0x74c>
   85ab0:	b9000017 	ldw	r4,0(r23)
   85ab4:	00bfffc4 	movi	r2,-1
   85ab8:	2080ee26 	beq	r4,r2,85e74 <_malloc_r+0x778>
   85abc:	a185c83a 	sub	r2,r20,r6
   85ac0:	10c5883a 	add	r2,r2,r3
   85ac4:	e0800015 	stw	r2,0(fp)
   85ac8:	a0c001cc 	andi	r3,r20,7
   85acc:	1800bc26 	beq	r3,zero,85dc0 <_malloc_r+0x6c4>
   85ad0:	a0e9c83a 	sub	r20,r20,r3
   85ad4:	00840204 	movi	r2,4104
   85ad8:	a5000204 	addi	r20,r20,8
   85adc:	10c7c83a 	sub	r3,r2,r3
   85ae0:	a545883a 	add	r2,r20,r21
   85ae4:	1083ffcc 	andi	r2,r2,4095
   85ae8:	18abc83a 	sub	r21,r3,r2
   85aec:	a80b883a 	mov	r5,r21
   85af0:	9009883a 	mov	r4,r18
   85af4:	0087a480 	call	87a48 <_sbrk_r>
   85af8:	00ffffc4 	movi	r3,-1
   85afc:	10c0e126 	beq	r2,r3,85e84 <_malloc_r+0x788>
   85b00:	1505c83a 	sub	r2,r2,r20
   85b04:	1545883a 	add	r2,r2,r21
   85b08:	10800054 	ori	r2,r2,1
   85b0c:	e0c00017 	ldw	r3,0(fp)
   85b10:	9d000215 	stw	r20,8(r19)
   85b14:	a0800115 	stw	r2,4(r20)
   85b18:	a8c7883a 	add	r3,r21,r3
   85b1c:	e0c00015 	stw	r3,0(fp)
   85b20:	84c00e26 	beq	r16,r19,85b5c <_malloc_r+0x460>
   85b24:	018003c4 	movi	r6,15
   85b28:	3580a72e 	bgeu	r6,r22,85dc8 <_malloc_r+0x6cc>
   85b2c:	81400117 	ldw	r5,4(r16)
   85b30:	013ffe04 	movi	r4,-8
   85b34:	b0bffd04 	addi	r2,r22,-12
   85b38:	1104703a 	and	r2,r2,r4
   85b3c:	2900004c 	andi	r4,r5,1
   85b40:	2088b03a 	or	r4,r4,r2
   85b44:	81000115 	stw	r4,4(r16)
   85b48:	01400144 	movi	r5,5
   85b4c:	8089883a 	add	r4,r16,r2
   85b50:	21400115 	stw	r5,4(r4)
   85b54:	21400215 	stw	r5,8(r4)
   85b58:	3080cd36 	bltu	r6,r2,85e90 <_malloc_r+0x794>
   85b5c:	00800134 	movhi	r2,4
   85b60:	10878c04 	addi	r2,r2,7728
   85b64:	11000017 	ldw	r4,0(r2)
   85b68:	20c0012e 	bgeu	r4,r3,85b70 <_malloc_r+0x474>
   85b6c:	10c00015 	stw	r3,0(r2)
   85b70:	00800134 	movhi	r2,4
   85b74:	10878b04 	addi	r2,r2,7724
   85b78:	11000017 	ldw	r4,0(r2)
   85b7c:	9c000217 	ldw	r16,8(r19)
   85b80:	20c0012e 	bgeu	r4,r3,85b88 <_malloc_r+0x48c>
   85b84:	10c00015 	stw	r3,0(r2)
   85b88:	80c00117 	ldw	r3,4(r16)
   85b8c:	00bfff04 	movi	r2,-4
   85b90:	1886703a 	and	r3,r3,r2
   85b94:	1c45c83a 	sub	r2,r3,r17
   85b98:	1c400236 	bltu	r3,r17,85ba4 <_malloc_r+0x4a8>
   85b9c:	00c003c4 	movi	r3,15
   85ba0:	18800416 	blt	r3,r2,85bb4 <_malloc_r+0x4b8>
   85ba4:	9009883a 	mov	r4,r18
   85ba8:	008d8f80 	call	8d8f8 <__malloc_unlock>
   85bac:	0005883a 	mov	r2,zero
   85bb0:	003f7b06 	br	859a0 <_malloc_r+0x2a4>
   85bb4:	88c00054 	ori	r3,r17,1
   85bb8:	80c00115 	stw	r3,4(r16)
   85bbc:	8463883a 	add	r17,r16,r17
   85bc0:	10800054 	ori	r2,r2,1
   85bc4:	9c400215 	stw	r17,8(r19)
   85bc8:	88800115 	stw	r2,4(r17)
   85bcc:	9009883a 	mov	r4,r18
   85bd0:	008d8f80 	call	8d8f8 <__malloc_unlock>
   85bd4:	80800204 	addi	r2,r16,8
   85bd8:	003f7106 	br	859a0 <_malloc_r+0x2a4>
   85bdc:	00c00504 	movi	r3,20
   85be0:	18804a2e 	bgeu	r3,r2,85d0c <_malloc_r+0x610>
   85be4:	00c01504 	movi	r3,84
   85be8:	18806e36 	bltu	r3,r2,85da4 <_malloc_r+0x6a8>
   85bec:	8804d33a 	srli	r2,r17,12
   85bf0:	12001bc4 	addi	r8,r2,111
   85bf4:	11c01b84 	addi	r7,r2,110
   85bf8:	4209883a 	add	r4,r8,r8
   85bfc:	003edd06 	br	85774 <_malloc_r+0x78>
   85c00:	3804d27a 	srli	r2,r7,9
   85c04:	00c00104 	movi	r3,4
   85c08:	1880442e 	bgeu	r3,r2,85d1c <_malloc_r+0x620>
   85c0c:	00c00504 	movi	r3,20
   85c10:	18808136 	bltu	r3,r2,85e18 <_malloc_r+0x71c>
   85c14:	11401704 	addi	r5,r2,92
   85c18:	10c016c4 	addi	r3,r2,91
   85c1c:	294b883a 	add	r5,r5,r5
   85c20:	294b883a 	add	r5,r5,r5
   85c24:	294b883a 	add	r5,r5,r5
   85c28:	994b883a 	add	r5,r19,r5
   85c2c:	28800017 	ldw	r2,0(r5)
   85c30:	01800134 	movhi	r6,4
   85c34:	297ffe04 	addi	r5,r5,-8
   85c38:	3181f304 	addi	r6,r6,1996
   85c3c:	28806526 	beq	r5,r2,85dd4 <_malloc_r+0x6d8>
   85c40:	01bfff04 	movi	r6,-4
   85c44:	10c00117 	ldw	r3,4(r2)
   85c48:	1986703a 	and	r3,r3,r6
   85c4c:	38c0022e 	bgeu	r7,r3,85c58 <_malloc_r+0x55c>
   85c50:	10800217 	ldw	r2,8(r2)
   85c54:	28bffb1e 	bne	r5,r2,85c44 <_malloc_r+0x548>
   85c58:	11400317 	ldw	r5,12(r2)
   85c5c:	98c00117 	ldw	r3,4(r19)
   85c60:	81400315 	stw	r5,12(r16)
   85c64:	80800215 	stw	r2,8(r16)
   85c68:	2c000215 	stw	r16,8(r5)
   85c6c:	14000315 	stw	r16,12(r2)
   85c70:	003ef806 	br	85854 <_malloc_r+0x158>
   85c74:	88c00054 	ori	r3,r17,1
   85c78:	80c00115 	stw	r3,4(r16)
   85c7c:	8463883a 	add	r17,r16,r17
   85c80:	34400515 	stw	r17,20(r6)
   85c84:	34400415 	stw	r17,16(r6)
   85c88:	10c00054 	ori	r3,r2,1
   85c8c:	8a000315 	stw	r8,12(r17)
   85c90:	8a000215 	stw	r8,8(r17)
   85c94:	88c00115 	stw	r3,4(r17)
   85c98:	88a3883a 	add	r17,r17,r2
   85c9c:	88800015 	stw	r2,0(r17)
   85ca0:	9009883a 	mov	r4,r18
   85ca4:	008d8f80 	call	8d8f8 <__malloc_unlock>
   85ca8:	80800204 	addi	r2,r16,8
   85cac:	003f3c06 	br	859a0 <_malloc_r+0x2a4>
   85cb0:	30c00117 	ldw	r3,4(r6)
   85cb4:	003ee706 	br	85854 <_malloc_r+0x158>
   85cb8:	5ac00044 	addi	r11,r11,1
   85cbc:	588000cc 	andi	r2,r11,3
   85cc0:	31800204 	addi	r6,r6,8
   85cc4:	103efd1e 	bne	r2,zero,858bc <_malloc_r+0x1c0>
   85cc8:	00002406 	br	85d5c <_malloc_r+0x660>
   85ccc:	14000317 	ldw	r16,12(r2)
   85cd0:	143f251e 	bne	r2,r16,85968 <_malloc_r+0x26c>
   85cd4:	21000084 	addi	r4,r4,2
   85cd8:	003ebc06 	br	857cc <_malloc_r+0xd0>
   85cdc:	8085883a 	add	r2,r16,r2
   85ce0:	10c00117 	ldw	r3,4(r2)
   85ce4:	81000317 	ldw	r4,12(r16)
   85ce8:	81400217 	ldw	r5,8(r16)
   85cec:	18c00054 	ori	r3,r3,1
   85cf0:	10c00115 	stw	r3,4(r2)
   85cf4:	29000315 	stw	r4,12(r5)
   85cf8:	21400215 	stw	r5,8(r4)
   85cfc:	9009883a 	mov	r4,r18
   85d00:	008d8f80 	call	8d8f8 <__malloc_unlock>
   85d04:	80800204 	addi	r2,r16,8
   85d08:	003f2506 	br	859a0 <_malloc_r+0x2a4>
   85d0c:	12001704 	addi	r8,r2,92
   85d10:	11c016c4 	addi	r7,r2,91
   85d14:	4209883a 	add	r4,r8,r8
   85d18:	003e9606 	br	85774 <_malloc_r+0x78>
   85d1c:	3804d1ba 	srli	r2,r7,6
   85d20:	11400e44 	addi	r5,r2,57
   85d24:	10c00e04 	addi	r3,r2,56
   85d28:	294b883a 	add	r5,r5,r5
   85d2c:	003fbc06 	br	85c20 <_malloc_r+0x524>
   85d30:	84ff5926 	beq	r16,r19,85a98 <_malloc_r+0x39c>
   85d34:	00800134 	movhi	r2,4
   85d38:	1081f304 	addi	r2,r2,1996
   85d3c:	14000217 	ldw	r16,8(r2)
   85d40:	00bfff04 	movi	r2,-4
   85d44:	80c00117 	ldw	r3,4(r16)
   85d48:	1886703a 	and	r3,r3,r2
   85d4c:	003f9106 	br	85b94 <_malloc_r+0x498>
   85d50:	60800217 	ldw	r2,8(r12)
   85d54:	213fffc4 	addi	r4,r4,-1
   85d58:	1300651e 	bne	r2,r12,85ef0 <_malloc_r+0x7f4>
   85d5c:	208000cc 	andi	r2,r4,3
   85d60:	633ffe04 	addi	r12,r12,-8
   85d64:	103ffa1e 	bne	r2,zero,85d50 <_malloc_r+0x654>
   85d68:	98800117 	ldw	r2,4(r19)
   85d6c:	0146303a 	nor	r3,zero,r5
   85d70:	1884703a 	and	r2,r3,r2
   85d74:	98800115 	stw	r2,4(r19)
   85d78:	294b883a 	add	r5,r5,r5
   85d7c:	117f2836 	bltu	r2,r5,85a20 <_malloc_r+0x324>
   85d80:	283f2726 	beq	r5,zero,85a20 <_malloc_r+0x324>
   85d84:	2886703a 	and	r3,r5,r2
   85d88:	5809883a 	mov	r4,r11
   85d8c:	183ec31e 	bne	r3,zero,8589c <_malloc_r+0x1a0>
   85d90:	294b883a 	add	r5,r5,r5
   85d94:	2886703a 	and	r3,r5,r2
   85d98:	21000104 	addi	r4,r4,4
   85d9c:	183ffc26 	beq	r3,zero,85d90 <_malloc_r+0x694>
   85da0:	003ebe06 	br	8589c <_malloc_r+0x1a0>
   85da4:	00c05504 	movi	r3,340
   85da8:	18801236 	bltu	r3,r2,85df4 <_malloc_r+0x6f8>
   85dac:	8804d3fa 	srli	r2,r17,15
   85db0:	12001e04 	addi	r8,r2,120
   85db4:	11c01dc4 	addi	r7,r2,119
   85db8:	4209883a 	add	r4,r8,r8
   85dbc:	003e6d06 	br	85774 <_malloc_r+0x78>
   85dc0:	00c40004 	movi	r3,4096
   85dc4:	003f4606 	br	85ae0 <_malloc_r+0x3e4>
   85dc8:	00800044 	movi	r2,1
   85dcc:	a0800115 	stw	r2,4(r20)
   85dd0:	003f7406 	br	85ba4 <_malloc_r+0x4a8>
   85dd4:	1805d0ba 	srai	r2,r3,2
   85dd8:	01c00044 	movi	r7,1
   85ddc:	30c00117 	ldw	r3,4(r6)
   85de0:	388e983a 	sll	r7,r7,r2
   85de4:	2805883a 	mov	r2,r5
   85de8:	38c6b03a 	or	r3,r7,r3
   85dec:	30c00115 	stw	r3,4(r6)
   85df0:	003f9b06 	br	85c60 <_malloc_r+0x564>
   85df4:	00c15504 	movi	r3,1364
   85df8:	18801a36 	bltu	r3,r2,85e64 <_malloc_r+0x768>
   85dfc:	8804d4ba 	srli	r2,r17,18
   85e00:	12001f44 	addi	r8,r2,125
   85e04:	11c01f04 	addi	r7,r2,124
   85e08:	4209883a 	add	r4,r8,r8
   85e0c:	003e5906 	br	85774 <_malloc_r+0x78>
   85e10:	ad400404 	addi	r21,r21,16
   85e14:	003f1706 	br	85a74 <_malloc_r+0x378>
   85e18:	00c01504 	movi	r3,84
   85e1c:	18802336 	bltu	r3,r2,85eac <_malloc_r+0x7b0>
   85e20:	3804d33a 	srli	r2,r7,12
   85e24:	11401bc4 	addi	r5,r2,111
   85e28:	10c01b84 	addi	r3,r2,110
   85e2c:	294b883a 	add	r5,r5,r5
   85e30:	003f7b06 	br	85c20 <_malloc_r+0x524>
   85e34:	9c000217 	ldw	r16,8(r19)
   85e38:	00bfff04 	movi	r2,-4
   85e3c:	80c00117 	ldw	r3,4(r16)
   85e40:	1886703a 	and	r3,r3,r2
   85e44:	003f5306 	br	85b94 <_malloc_r+0x498>
   85e48:	3083ffcc 	andi	r2,r6,4095
   85e4c:	103f181e 	bne	r2,zero,85ab0 <_malloc_r+0x3b4>
   85e50:	99000217 	ldw	r4,8(r19)
   85e54:	b545883a 	add	r2,r22,r21
   85e58:	10800054 	ori	r2,r2,1
   85e5c:	20800115 	stw	r2,4(r4)
   85e60:	003f3e06 	br	85b5c <_malloc_r+0x460>
   85e64:	01003f84 	movi	r4,254
   85e68:	02001fc4 	movi	r8,127
   85e6c:	01c01f84 	movi	r7,126
   85e70:	003e4006 	br	85774 <_malloc_r+0x78>
   85e74:	00800134 	movhi	r2,4
   85e78:	10877b04 	addi	r2,r2,7660
   85e7c:	15000015 	stw	r20,0(r2)
   85e80:	003f1106 	br	85ac8 <_malloc_r+0x3cc>
   85e84:	00800044 	movi	r2,1
   85e88:	002b883a 	mov	r21,zero
   85e8c:	003f1f06 	br	85b0c <_malloc_r+0x410>
   85e90:	81400204 	addi	r5,r16,8
   85e94:	9009883a 	mov	r4,r18
   85e98:	0084b040 	call	84b04 <_free_r>
   85e9c:	00800134 	movhi	r2,4
   85ea0:	10879604 	addi	r2,r2,7768
   85ea4:	10c00017 	ldw	r3,0(r2)
   85ea8:	003f2c06 	br	85b5c <_malloc_r+0x460>
   85eac:	00c05504 	movi	r3,340
   85eb0:	18800536 	bltu	r3,r2,85ec8 <_malloc_r+0x7cc>
   85eb4:	3804d3fa 	srli	r2,r7,15
   85eb8:	11401e04 	addi	r5,r2,120
   85ebc:	10c01dc4 	addi	r3,r2,119
   85ec0:	294b883a 	add	r5,r5,r5
   85ec4:	003f5606 	br	85c20 <_malloc_r+0x524>
   85ec8:	00c15504 	movi	r3,1364
   85ecc:	18800536 	bltu	r3,r2,85ee4 <_malloc_r+0x7e8>
   85ed0:	3804d4ba 	srli	r2,r7,18
   85ed4:	11401f44 	addi	r5,r2,125
   85ed8:	10c01f04 	addi	r3,r2,124
   85edc:	294b883a 	add	r5,r5,r5
   85ee0:	003f4f06 	br	85c20 <_malloc_r+0x524>
   85ee4:	01403f84 	movi	r5,254
   85ee8:	00c01f84 	movi	r3,126
   85eec:	003f4c06 	br	85c20 <_malloc_r+0x524>
   85ef0:	98800117 	ldw	r2,4(r19)
   85ef4:	003fa006 	br	85d78 <_malloc_r+0x67c>
   85ef8:	8808d0fa 	srli	r4,r17,3
   85efc:	20800044 	addi	r2,r4,1
   85f00:	1085883a 	add	r2,r2,r2
   85f04:	003e9006 	br	85948 <_malloc_r+0x24c>

00085f08 <memchr>:
   85f08:	208000cc 	andi	r2,r4,3
   85f0c:	280f883a 	mov	r7,r5
   85f10:	10003426 	beq	r2,zero,85fe4 <memchr+0xdc>
   85f14:	30bfffc4 	addi	r2,r6,-1
   85f18:	30001a26 	beq	r6,zero,85f84 <memchr+0x7c>
   85f1c:	20c00003 	ldbu	r3,0(r4)
   85f20:	29803fcc 	andi	r6,r5,255
   85f24:	30c0051e 	bne	r6,r3,85f3c <memchr+0x34>
   85f28:	00001806 	br	85f8c <memchr+0x84>
   85f2c:	10001526 	beq	r2,zero,85f84 <memchr+0x7c>
   85f30:	20c00003 	ldbu	r3,0(r4)
   85f34:	10bfffc4 	addi	r2,r2,-1
   85f38:	30c01426 	beq	r6,r3,85f8c <memchr+0x84>
   85f3c:	21000044 	addi	r4,r4,1
   85f40:	20c000cc 	andi	r3,r4,3
   85f44:	183ff91e 	bne	r3,zero,85f2c <memchr+0x24>
   85f48:	020000c4 	movi	r8,3
   85f4c:	40801136 	bltu	r8,r2,85f94 <memchr+0x8c>
   85f50:	10000c26 	beq	r2,zero,85f84 <memchr+0x7c>
   85f54:	20c00003 	ldbu	r3,0(r4)
   85f58:	29403fcc 	andi	r5,r5,255
   85f5c:	28c00b26 	beq	r5,r3,85f8c <memchr+0x84>
   85f60:	20c00044 	addi	r3,r4,1
   85f64:	39803fcc 	andi	r6,r7,255
   85f68:	2089883a 	add	r4,r4,r2
   85f6c:	00000306 	br	85f7c <memchr+0x74>
   85f70:	18c00044 	addi	r3,r3,1
   85f74:	197fffc3 	ldbu	r5,-1(r3)
   85f78:	31400526 	beq	r6,r5,85f90 <memchr+0x88>
   85f7c:	1805883a 	mov	r2,r3
   85f80:	20fffb1e 	bne	r4,r3,85f70 <memchr+0x68>
   85f84:	0005883a 	mov	r2,zero
   85f88:	f800283a 	ret
   85f8c:	2005883a 	mov	r2,r4
   85f90:	f800283a 	ret
   85f94:	28c03fcc 	andi	r3,r5,255
   85f98:	1812923a 	slli	r9,r3,8
   85f9c:	02ffbff4 	movhi	r11,65279
   85fa0:	02a02074 	movhi	r10,32897
   85fa4:	48d2b03a 	or	r9,r9,r3
   85fa8:	4806943a 	slli	r3,r9,16
   85fac:	5affbfc4 	addi	r11,r11,-257
   85fb0:	52a02004 	addi	r10,r10,-32640
   85fb4:	48d2b03a 	or	r9,r9,r3
   85fb8:	20c00017 	ldw	r3,0(r4)
   85fbc:	48c6f03a 	xor	r3,r9,r3
   85fc0:	1acd883a 	add	r6,r3,r11
   85fc4:	00c6303a 	nor	r3,zero,r3
   85fc8:	30c6703a 	and	r3,r6,r3
   85fcc:	1a86703a 	and	r3,r3,r10
   85fd0:	183fe01e 	bne	r3,zero,85f54 <memchr+0x4c>
   85fd4:	10bfff04 	addi	r2,r2,-4
   85fd8:	21000104 	addi	r4,r4,4
   85fdc:	40bff636 	bltu	r8,r2,85fb8 <memchr+0xb0>
   85fe0:	003fdb06 	br	85f50 <memchr+0x48>
   85fe4:	3005883a 	mov	r2,r6
   85fe8:	003fd706 	br	85f48 <memchr+0x40>

00085fec <memcpy>:
   85fec:	defffd04 	addi	sp,sp,-12
   85ff0:	dfc00215 	stw	ra,8(sp)
   85ff4:	dc400115 	stw	r17,4(sp)
   85ff8:	dc000015 	stw	r16,0(sp)
   85ffc:	00c003c4 	movi	r3,15
   86000:	2005883a 	mov	r2,r4
   86004:	1980452e 	bgeu	r3,r6,8611c <memcpy+0x130>
   86008:	2906b03a 	or	r3,r5,r4
   8600c:	18c000cc 	andi	r3,r3,3
   86010:	1800441e 	bne	r3,zero,86124 <memcpy+0x138>
   86014:	347ffc04 	addi	r17,r6,-16
   86018:	8822d13a 	srli	r17,r17,4
   8601c:	28c00104 	addi	r3,r5,4
   86020:	23400104 	addi	r13,r4,4
   86024:	8820913a 	slli	r16,r17,4
   86028:	2b000204 	addi	r12,r5,8
   8602c:	22c00204 	addi	r11,r4,8
   86030:	84000504 	addi	r16,r16,20
   86034:	2a800304 	addi	r10,r5,12
   86038:	22400304 	addi	r9,r4,12
   8603c:	2c21883a 	add	r16,r5,r16
   86040:	2811883a 	mov	r8,r5
   86044:	200f883a 	mov	r7,r4
   86048:	41000017 	ldw	r4,0(r8)
   8604c:	1fc00017 	ldw	ra,0(r3)
   86050:	63c00017 	ldw	r15,0(r12)
   86054:	39000015 	stw	r4,0(r7)
   86058:	53800017 	ldw	r14,0(r10)
   8605c:	6fc00015 	stw	ra,0(r13)
   86060:	5bc00015 	stw	r15,0(r11)
   86064:	4b800015 	stw	r14,0(r9)
   86068:	18c00404 	addi	r3,r3,16
   8606c:	39c00404 	addi	r7,r7,16
   86070:	42000404 	addi	r8,r8,16
   86074:	6b400404 	addi	r13,r13,16
   86078:	63000404 	addi	r12,r12,16
   8607c:	5ac00404 	addi	r11,r11,16
   86080:	52800404 	addi	r10,r10,16
   86084:	4a400404 	addi	r9,r9,16
   86088:	1c3fef1e 	bne	r3,r16,86048 <memcpy+0x5c>
   8608c:	89c00044 	addi	r7,r17,1
   86090:	380e913a 	slli	r7,r7,4
   86094:	310003cc 	andi	r4,r6,15
   86098:	02c000c4 	movi	r11,3
   8609c:	11c7883a 	add	r3,r2,r7
   860a0:	29cb883a 	add	r5,r5,r7
   860a4:	5900212e 	bgeu	r11,r4,8612c <memcpy+0x140>
   860a8:	1813883a 	mov	r9,r3
   860ac:	2811883a 	mov	r8,r5
   860b0:	200f883a 	mov	r7,r4
   860b4:	42800017 	ldw	r10,0(r8)
   860b8:	4a400104 	addi	r9,r9,4
   860bc:	39ffff04 	addi	r7,r7,-4
   860c0:	4abfff15 	stw	r10,-4(r9)
   860c4:	42000104 	addi	r8,r8,4
   860c8:	59fffa36 	bltu	r11,r7,860b4 <memcpy+0xc8>
   860cc:	213fff04 	addi	r4,r4,-4
   860d0:	2008d0ba 	srli	r4,r4,2
   860d4:	318000cc 	andi	r6,r6,3
   860d8:	21000044 	addi	r4,r4,1
   860dc:	2109883a 	add	r4,r4,r4
   860e0:	2109883a 	add	r4,r4,r4
   860e4:	1907883a 	add	r3,r3,r4
   860e8:	290b883a 	add	r5,r5,r4
   860ec:	30000626 	beq	r6,zero,86108 <memcpy+0x11c>
   860f0:	198d883a 	add	r6,r3,r6
   860f4:	29c00003 	ldbu	r7,0(r5)
   860f8:	18c00044 	addi	r3,r3,1
   860fc:	29400044 	addi	r5,r5,1
   86100:	19ffffc5 	stb	r7,-1(r3)
   86104:	19bffb1e 	bne	r3,r6,860f4 <memcpy+0x108>
   86108:	dfc00217 	ldw	ra,8(sp)
   8610c:	dc400117 	ldw	r17,4(sp)
   86110:	dc000017 	ldw	r16,0(sp)
   86114:	dec00304 	addi	sp,sp,12
   86118:	f800283a 	ret
   8611c:	2007883a 	mov	r3,r4
   86120:	003ff206 	br	860ec <memcpy+0x100>
   86124:	2007883a 	mov	r3,r4
   86128:	003ff106 	br	860f0 <memcpy+0x104>
   8612c:	200d883a 	mov	r6,r4
   86130:	003fee06 	br	860ec <memcpy+0x100>

00086134 <memmove>:
   86134:	2005883a 	mov	r2,r4
   86138:	29000b2e 	bgeu	r5,r4,86168 <memmove+0x34>
   8613c:	298f883a 	add	r7,r5,r6
   86140:	21c0092e 	bgeu	r4,r7,86168 <memmove+0x34>
   86144:	2187883a 	add	r3,r4,r6
   86148:	198bc83a 	sub	r5,r3,r6
   8614c:	30004826 	beq	r6,zero,86270 <memmove+0x13c>
   86150:	39ffffc4 	addi	r7,r7,-1
   86154:	39000003 	ldbu	r4,0(r7)
   86158:	18ffffc4 	addi	r3,r3,-1
   8615c:	19000005 	stb	r4,0(r3)
   86160:	28fffb1e 	bne	r5,r3,86150 <memmove+0x1c>
   86164:	f800283a 	ret
   86168:	00c003c4 	movi	r3,15
   8616c:	1980412e 	bgeu	r3,r6,86274 <memmove+0x140>
   86170:	2886b03a 	or	r3,r5,r2
   86174:	18c000cc 	andi	r3,r3,3
   86178:	1800401e 	bne	r3,zero,8627c <memmove+0x148>
   8617c:	33fffc04 	addi	r15,r6,-16
   86180:	781ed13a 	srli	r15,r15,4
   86184:	28c00104 	addi	r3,r5,4
   86188:	13400104 	addi	r13,r2,4
   8618c:	781c913a 	slli	r14,r15,4
   86190:	2b000204 	addi	r12,r5,8
   86194:	12c00204 	addi	r11,r2,8
   86198:	73800504 	addi	r14,r14,20
   8619c:	2a800304 	addi	r10,r5,12
   861a0:	12400304 	addi	r9,r2,12
   861a4:	2b9d883a 	add	r14,r5,r14
   861a8:	2811883a 	mov	r8,r5
   861ac:	100f883a 	mov	r7,r2
   861b0:	41000017 	ldw	r4,0(r8)
   861b4:	39c00404 	addi	r7,r7,16
   861b8:	18c00404 	addi	r3,r3,16
   861bc:	393ffc15 	stw	r4,-16(r7)
   861c0:	193ffc17 	ldw	r4,-16(r3)
   861c4:	6b400404 	addi	r13,r13,16
   861c8:	5ac00404 	addi	r11,r11,16
   861cc:	693ffc15 	stw	r4,-16(r13)
   861d0:	61000017 	ldw	r4,0(r12)
   861d4:	4a400404 	addi	r9,r9,16
   861d8:	42000404 	addi	r8,r8,16
   861dc:	593ffc15 	stw	r4,-16(r11)
   861e0:	51000017 	ldw	r4,0(r10)
   861e4:	63000404 	addi	r12,r12,16
   861e8:	52800404 	addi	r10,r10,16
   861ec:	493ffc15 	stw	r4,-16(r9)
   861f0:	1bbfef1e 	bne	r3,r14,861b0 <memmove+0x7c>
   861f4:	79000044 	addi	r4,r15,1
   861f8:	2008913a 	slli	r4,r4,4
   861fc:	328003cc 	andi	r10,r6,15
   86200:	02c000c4 	movi	r11,3
   86204:	1107883a 	add	r3,r2,r4
   86208:	290b883a 	add	r5,r5,r4
   8620c:	5a801e2e 	bgeu	r11,r10,86288 <memmove+0x154>
   86210:	1813883a 	mov	r9,r3
   86214:	2811883a 	mov	r8,r5
   86218:	500f883a 	mov	r7,r10
   8621c:	41000017 	ldw	r4,0(r8)
   86220:	4a400104 	addi	r9,r9,4
   86224:	39ffff04 	addi	r7,r7,-4
   86228:	493fff15 	stw	r4,-4(r9)
   8622c:	42000104 	addi	r8,r8,4
   86230:	59fffa36 	bltu	r11,r7,8621c <memmove+0xe8>
   86234:	513fff04 	addi	r4,r10,-4
   86238:	2008d0ba 	srli	r4,r4,2
   8623c:	318000cc 	andi	r6,r6,3
   86240:	21000044 	addi	r4,r4,1
   86244:	2109883a 	add	r4,r4,r4
   86248:	2109883a 	add	r4,r4,r4
   8624c:	1907883a 	add	r3,r3,r4
   86250:	290b883a 	add	r5,r5,r4
   86254:	30000b26 	beq	r6,zero,86284 <memmove+0x150>
   86258:	198d883a 	add	r6,r3,r6
   8625c:	29c00003 	ldbu	r7,0(r5)
   86260:	18c00044 	addi	r3,r3,1
   86264:	29400044 	addi	r5,r5,1
   86268:	19ffffc5 	stb	r7,-1(r3)
   8626c:	19bffb1e 	bne	r3,r6,8625c <memmove+0x128>
   86270:	f800283a 	ret
   86274:	1007883a 	mov	r3,r2
   86278:	003ff606 	br	86254 <memmove+0x120>
   8627c:	1007883a 	mov	r3,r2
   86280:	003ff506 	br	86258 <memmove+0x124>
   86284:	f800283a 	ret
   86288:	500d883a 	mov	r6,r10
   8628c:	003ff106 	br	86254 <memmove+0x120>

00086290 <memset>:
   86290:	20c000cc 	andi	r3,r4,3
   86294:	2005883a 	mov	r2,r4
   86298:	18004426 	beq	r3,zero,863ac <memset+0x11c>
   8629c:	31ffffc4 	addi	r7,r6,-1
   862a0:	30004026 	beq	r6,zero,863a4 <memset+0x114>
   862a4:	2813883a 	mov	r9,r5
   862a8:	200d883a 	mov	r6,r4
   862ac:	2007883a 	mov	r3,r4
   862b0:	00000406 	br	862c4 <memset+0x34>
   862b4:	3a3fffc4 	addi	r8,r7,-1
   862b8:	31800044 	addi	r6,r6,1
   862bc:	38003926 	beq	r7,zero,863a4 <memset+0x114>
   862c0:	400f883a 	mov	r7,r8
   862c4:	18c00044 	addi	r3,r3,1
   862c8:	32400005 	stb	r9,0(r6)
   862cc:	1a0000cc 	andi	r8,r3,3
   862d0:	403ff81e 	bne	r8,zero,862b4 <memset+0x24>
   862d4:	010000c4 	movi	r4,3
   862d8:	21c02d2e 	bgeu	r4,r7,86390 <memset+0x100>
   862dc:	29003fcc 	andi	r4,r5,255
   862e0:	200c923a 	slli	r6,r4,8
   862e4:	3108b03a 	or	r4,r6,r4
   862e8:	200c943a 	slli	r6,r4,16
   862ec:	218cb03a 	or	r6,r4,r6
   862f0:	010003c4 	movi	r4,15
   862f4:	21c0182e 	bgeu	r4,r7,86358 <memset+0xc8>
   862f8:	3b3ffc04 	addi	r12,r7,-16
   862fc:	6018d13a 	srli	r12,r12,4
   86300:	1a000104 	addi	r8,r3,4
   86304:	1ac00204 	addi	r11,r3,8
   86308:	6008913a 	slli	r4,r12,4
   8630c:	1a800304 	addi	r10,r3,12
   86310:	1813883a 	mov	r9,r3
   86314:	21000504 	addi	r4,r4,20
   86318:	1909883a 	add	r4,r3,r4
   8631c:	49800015 	stw	r6,0(r9)
   86320:	41800015 	stw	r6,0(r8)
   86324:	59800015 	stw	r6,0(r11)
   86328:	51800015 	stw	r6,0(r10)
   8632c:	42000404 	addi	r8,r8,16
   86330:	4a400404 	addi	r9,r9,16
   86334:	5ac00404 	addi	r11,r11,16
   86338:	52800404 	addi	r10,r10,16
   8633c:	413ff71e 	bne	r8,r4,8631c <memset+0x8c>
   86340:	63000044 	addi	r12,r12,1
   86344:	6018913a 	slli	r12,r12,4
   86348:	39c003cc 	andi	r7,r7,15
   8634c:	010000c4 	movi	r4,3
   86350:	1b07883a 	add	r3,r3,r12
   86354:	21c00e2e 	bgeu	r4,r7,86390 <memset+0x100>
   86358:	1813883a 	mov	r9,r3
   8635c:	3811883a 	mov	r8,r7
   86360:	010000c4 	movi	r4,3
   86364:	49800015 	stw	r6,0(r9)
   86368:	423fff04 	addi	r8,r8,-4
   8636c:	4a400104 	addi	r9,r9,4
   86370:	223ffc36 	bltu	r4,r8,86364 <memset+0xd4>
   86374:	393fff04 	addi	r4,r7,-4
   86378:	2008d0ba 	srli	r4,r4,2
   8637c:	39c000cc 	andi	r7,r7,3
   86380:	21000044 	addi	r4,r4,1
   86384:	2109883a 	add	r4,r4,r4
   86388:	2109883a 	add	r4,r4,r4
   8638c:	1907883a 	add	r3,r3,r4
   86390:	38000526 	beq	r7,zero,863a8 <memset+0x118>
   86394:	19cf883a 	add	r7,r3,r7
   86398:	19400005 	stb	r5,0(r3)
   8639c:	18c00044 	addi	r3,r3,1
   863a0:	38fffd1e 	bne	r7,r3,86398 <memset+0x108>
   863a4:	f800283a 	ret
   863a8:	f800283a 	ret
   863ac:	2007883a 	mov	r3,r4
   863b0:	300f883a 	mov	r7,r6
   863b4:	003fc706 	br	862d4 <memset+0x44>

000863b8 <_Balloc>:
   863b8:	20801317 	ldw	r2,76(r4)
   863bc:	defffc04 	addi	sp,sp,-16
   863c0:	dc400115 	stw	r17,4(sp)
   863c4:	dc000015 	stw	r16,0(sp)
   863c8:	dfc00315 	stw	ra,12(sp)
   863cc:	dc800215 	stw	r18,8(sp)
   863d0:	2023883a 	mov	r17,r4
   863d4:	2821883a 	mov	r16,r5
   863d8:	10000f26 	beq	r2,zero,86418 <_Balloc+0x60>
   863dc:	8407883a 	add	r3,r16,r16
   863e0:	18c7883a 	add	r3,r3,r3
   863e4:	10c7883a 	add	r3,r2,r3
   863e8:	18800017 	ldw	r2,0(r3)
   863ec:	10001126 	beq	r2,zero,86434 <_Balloc+0x7c>
   863f0:	11000017 	ldw	r4,0(r2)
   863f4:	19000015 	stw	r4,0(r3)
   863f8:	10000415 	stw	zero,16(r2)
   863fc:	10000315 	stw	zero,12(r2)
   86400:	dfc00317 	ldw	ra,12(sp)
   86404:	dc800217 	ldw	r18,8(sp)
   86408:	dc400117 	ldw	r17,4(sp)
   8640c:	dc000017 	ldw	r16,0(sp)
   86410:	dec00404 	addi	sp,sp,16
   86414:	f800283a 	ret
   86418:	01800844 	movi	r6,33
   8641c:	01400104 	movi	r5,4
   86420:	00894600 	call	89460 <_calloc_r>
   86424:	88801315 	stw	r2,76(r17)
   86428:	103fec1e 	bne	r2,zero,863dc <_Balloc+0x24>
   8642c:	0005883a 	mov	r2,zero
   86430:	003ff306 	br	86400 <_Balloc+0x48>
   86434:	01400044 	movi	r5,1
   86438:	2c24983a 	sll	r18,r5,r16
   8643c:	8809883a 	mov	r4,r17
   86440:	91800144 	addi	r6,r18,5
   86444:	318d883a 	add	r6,r6,r6
   86448:	318d883a 	add	r6,r6,r6
   8644c:	00894600 	call	89460 <_calloc_r>
   86450:	103ff626 	beq	r2,zero,8642c <_Balloc+0x74>
   86454:	14000115 	stw	r16,4(r2)
   86458:	14800215 	stw	r18,8(r2)
   8645c:	003fe606 	br	863f8 <_Balloc+0x40>

00086460 <_Bfree>:
   86460:	28000826 	beq	r5,zero,86484 <_Bfree+0x24>
   86464:	28c00117 	ldw	r3,4(r5)
   86468:	20801317 	ldw	r2,76(r4)
   8646c:	18c7883a 	add	r3,r3,r3
   86470:	18c7883a 	add	r3,r3,r3
   86474:	10c5883a 	add	r2,r2,r3
   86478:	10c00017 	ldw	r3,0(r2)
   8647c:	28c00015 	stw	r3,0(r5)
   86480:	11400015 	stw	r5,0(r2)
   86484:	f800283a 	ret

00086488 <__multadd>:
   86488:	defff704 	addi	sp,sp,-36
   8648c:	dc800215 	stw	r18,8(sp)
   86490:	2c800417 	ldw	r18,16(r5)
   86494:	dd800615 	stw	r22,24(sp)
   86498:	dd400515 	stw	r21,20(sp)
   8649c:	dd000415 	stw	r20,16(sp)
   864a0:	dcc00315 	stw	r19,12(sp)
   864a4:	dc400115 	stw	r17,4(sp)
   864a8:	dc000015 	stw	r16,0(sp)
   864ac:	dfc00815 	stw	ra,32(sp)
   864b0:	ddc00715 	stw	r23,28(sp)
   864b4:	2827883a 	mov	r19,r5
   864b8:	2029883a 	mov	r20,r4
   864bc:	3023883a 	mov	r17,r6
   864c0:	3821883a 	mov	r16,r7
   864c4:	2d400504 	addi	r21,r5,20
   864c8:	002d883a 	mov	r22,zero
   864cc:	adc00017 	ldw	r23,0(r21)
   864d0:	880b883a 	mov	r5,r17
   864d4:	ad400104 	addi	r21,r21,4
   864d8:	b93fffcc 	andi	r4,r23,65535
   864dc:	008aa6c0 	call	8aa6c <__mulsi3>
   864e0:	b808d43a 	srli	r4,r23,16
   864e4:	880b883a 	mov	r5,r17
   864e8:	1421883a 	add	r16,r2,r16
   864ec:	008aa6c0 	call	8aa6c <__mulsi3>
   864f0:	800ed43a 	srli	r7,r16,16
   864f4:	80ffffcc 	andi	r3,r16,65535
   864f8:	b5800044 	addi	r22,r22,1
   864fc:	11c5883a 	add	r2,r2,r7
   86500:	100e943a 	slli	r7,r2,16
   86504:	1020d43a 	srli	r16,r2,16
   86508:	38c7883a 	add	r3,r7,r3
   8650c:	a8ffff15 	stw	r3,-4(r21)
   86510:	b4bfee16 	blt	r22,r18,864cc <__multadd+0x44>
   86514:	80000926 	beq	r16,zero,8653c <__multadd+0xb4>
   86518:	98800217 	ldw	r2,8(r19)
   8651c:	9080130e 	bge	r18,r2,8656c <__multadd+0xe4>
   86520:	90800144 	addi	r2,r18,5
   86524:	1085883a 	add	r2,r2,r2
   86528:	1085883a 	add	r2,r2,r2
   8652c:	9885883a 	add	r2,r19,r2
   86530:	14000015 	stw	r16,0(r2)
   86534:	94800044 	addi	r18,r18,1
   86538:	9c800415 	stw	r18,16(r19)
   8653c:	9805883a 	mov	r2,r19
   86540:	dfc00817 	ldw	ra,32(sp)
   86544:	ddc00717 	ldw	r23,28(sp)
   86548:	dd800617 	ldw	r22,24(sp)
   8654c:	dd400517 	ldw	r21,20(sp)
   86550:	dd000417 	ldw	r20,16(sp)
   86554:	dcc00317 	ldw	r19,12(sp)
   86558:	dc800217 	ldw	r18,8(sp)
   8655c:	dc400117 	ldw	r17,4(sp)
   86560:	dc000017 	ldw	r16,0(sp)
   86564:	dec00904 	addi	sp,sp,36
   86568:	f800283a 	ret
   8656c:	99400117 	ldw	r5,4(r19)
   86570:	a009883a 	mov	r4,r20
   86574:	29400044 	addi	r5,r5,1
   86578:	00863b80 	call	863b8 <_Balloc>
   8657c:	99800417 	ldw	r6,16(r19)
   86580:	99400304 	addi	r5,r19,12
   86584:	11000304 	addi	r4,r2,12
   86588:	31800084 	addi	r6,r6,2
   8658c:	318d883a 	add	r6,r6,r6
   86590:	318d883a 	add	r6,r6,r6
   86594:	1023883a 	mov	r17,r2
   86598:	0085fec0 	call	85fec <memcpy>
   8659c:	98000a26 	beq	r19,zero,865c8 <__multadd+0x140>
   865a0:	98c00117 	ldw	r3,4(r19)
   865a4:	a0801317 	ldw	r2,76(r20)
   865a8:	18c7883a 	add	r3,r3,r3
   865ac:	18c7883a 	add	r3,r3,r3
   865b0:	10c5883a 	add	r2,r2,r3
   865b4:	10c00017 	ldw	r3,0(r2)
   865b8:	98c00015 	stw	r3,0(r19)
   865bc:	14c00015 	stw	r19,0(r2)
   865c0:	8827883a 	mov	r19,r17
   865c4:	003fd606 	br	86520 <__multadd+0x98>
   865c8:	8827883a 	mov	r19,r17
   865cc:	003fd406 	br	86520 <__multadd+0x98>

000865d0 <__s2b>:
   865d0:	defff904 	addi	sp,sp,-28
   865d4:	dc400115 	stw	r17,4(sp)
   865d8:	dc000015 	stw	r16,0(sp)
   865dc:	2023883a 	mov	r17,r4
   865e0:	2821883a 	mov	r16,r5
   865e4:	39000204 	addi	r4,r7,8
   865e8:	01400244 	movi	r5,9
   865ec:	dcc00315 	stw	r19,12(sp)
   865f0:	dc800215 	stw	r18,8(sp)
   865f4:	dfc00615 	stw	ra,24(sp)
   865f8:	dd400515 	stw	r21,20(sp)
   865fc:	dd000415 	stw	r20,16(sp)
   86600:	3825883a 	mov	r18,r7
   86604:	3027883a 	mov	r19,r6
   86608:	008a8b80 	call	8a8b8 <__divsi3>
   8660c:	00c00044 	movi	r3,1
   86610:	000b883a 	mov	r5,zero
   86614:	1880030e 	bge	r3,r2,86624 <__s2b+0x54>
   86618:	18c7883a 	add	r3,r3,r3
   8661c:	29400044 	addi	r5,r5,1
   86620:	18bffd16 	blt	r3,r2,86618 <__s2b+0x48>
   86624:	8809883a 	mov	r4,r17
   86628:	00863b80 	call	863b8 <_Balloc>
   8662c:	d8c00717 	ldw	r3,28(sp)
   86630:	10c00515 	stw	r3,20(r2)
   86634:	00c00044 	movi	r3,1
   86638:	10c00415 	stw	r3,16(r2)
   8663c:	00c00244 	movi	r3,9
   86640:	1cc0210e 	bge	r3,r19,866c8 <__s2b+0xf8>
   86644:	80eb883a 	add	r21,r16,r3
   86648:	a829883a 	mov	r20,r21
   8664c:	84e1883a 	add	r16,r16,r19
   86650:	a1c00007 	ldb	r7,0(r20)
   86654:	01800284 	movi	r6,10
   86658:	a5000044 	addi	r20,r20,1
   8665c:	100b883a 	mov	r5,r2
   86660:	39fff404 	addi	r7,r7,-48
   86664:	8809883a 	mov	r4,r17
   86668:	00864880 	call	86488 <__multadd>
   8666c:	a43ff81e 	bne	r20,r16,86650 <__s2b+0x80>
   86670:	ace1883a 	add	r16,r21,r19
   86674:	843ffe04 	addi	r16,r16,-8
   86678:	9c800a0e 	bge	r19,r18,866a4 <__s2b+0xd4>
   8667c:	94e5c83a 	sub	r18,r18,r19
   86680:	84a5883a 	add	r18,r16,r18
   86684:	81c00007 	ldb	r7,0(r16)
   86688:	01800284 	movi	r6,10
   8668c:	84000044 	addi	r16,r16,1
   86690:	100b883a 	mov	r5,r2
   86694:	39fff404 	addi	r7,r7,-48
   86698:	8809883a 	mov	r4,r17
   8669c:	00864880 	call	86488 <__multadd>
   866a0:	84bff81e 	bne	r16,r18,86684 <__s2b+0xb4>
   866a4:	dfc00617 	ldw	ra,24(sp)
   866a8:	dd400517 	ldw	r21,20(sp)
   866ac:	dd000417 	ldw	r20,16(sp)
   866b0:	dcc00317 	ldw	r19,12(sp)
   866b4:	dc800217 	ldw	r18,8(sp)
   866b8:	dc400117 	ldw	r17,4(sp)
   866bc:	dc000017 	ldw	r16,0(sp)
   866c0:	dec00704 	addi	sp,sp,28
   866c4:	f800283a 	ret
   866c8:	84000284 	addi	r16,r16,10
   866cc:	1827883a 	mov	r19,r3
   866d0:	003fe906 	br	86678 <__s2b+0xa8>

000866d4 <__hi0bits>:
   866d4:	20bfffec 	andhi	r2,r4,65535
   866d8:	1000141e 	bne	r2,zero,8672c <__hi0bits+0x58>
   866dc:	2008943a 	slli	r4,r4,16
   866e0:	00800404 	movi	r2,16
   866e4:	20ffc02c 	andhi	r3,r4,65280
   866e8:	1800021e 	bne	r3,zero,866f4 <__hi0bits+0x20>
   866ec:	2008923a 	slli	r4,r4,8
   866f0:	10800204 	addi	r2,r2,8
   866f4:	20fc002c 	andhi	r3,r4,61440
   866f8:	1800021e 	bne	r3,zero,86704 <__hi0bits+0x30>
   866fc:	2008913a 	slli	r4,r4,4
   86700:	10800104 	addi	r2,r2,4
   86704:	20f0002c 	andhi	r3,r4,49152
   86708:	1800031e 	bne	r3,zero,86718 <__hi0bits+0x44>
   8670c:	2109883a 	add	r4,r4,r4
   86710:	10800084 	addi	r2,r2,2
   86714:	2109883a 	add	r4,r4,r4
   86718:	20000316 	blt	r4,zero,86728 <__hi0bits+0x54>
   8671c:	2110002c 	andhi	r4,r4,16384
   86720:	2000041e 	bne	r4,zero,86734 <__hi0bits+0x60>
   86724:	00800804 	movi	r2,32
   86728:	f800283a 	ret
   8672c:	0005883a 	mov	r2,zero
   86730:	003fec06 	br	866e4 <__hi0bits+0x10>
   86734:	10800044 	addi	r2,r2,1
   86738:	f800283a 	ret

0008673c <__lo0bits>:
   8673c:	20c00017 	ldw	r3,0(r4)
   86740:	188001cc 	andi	r2,r3,7
   86744:	10000826 	beq	r2,zero,86768 <__lo0bits+0x2c>
   86748:	1880004c 	andi	r2,r3,1
   8674c:	1000211e 	bne	r2,zero,867d4 <__lo0bits+0x98>
   86750:	1880008c 	andi	r2,r3,2
   86754:	1000211e 	bne	r2,zero,867dc <__lo0bits+0xa0>
   86758:	1806d0ba 	srli	r3,r3,2
   8675c:	00800084 	movi	r2,2
   86760:	20c00015 	stw	r3,0(r4)
   86764:	f800283a 	ret
   86768:	18bfffcc 	andi	r2,r3,65535
   8676c:	10001326 	beq	r2,zero,867bc <__lo0bits+0x80>
   86770:	0005883a 	mov	r2,zero
   86774:	19403fcc 	andi	r5,r3,255
   86778:	2800021e 	bne	r5,zero,86784 <__lo0bits+0x48>
   8677c:	1806d23a 	srli	r3,r3,8
   86780:	10800204 	addi	r2,r2,8
   86784:	194003cc 	andi	r5,r3,15
   86788:	2800021e 	bne	r5,zero,86794 <__lo0bits+0x58>
   8678c:	1806d13a 	srli	r3,r3,4
   86790:	10800104 	addi	r2,r2,4
   86794:	194000cc 	andi	r5,r3,3
   86798:	2800021e 	bne	r5,zero,867a4 <__lo0bits+0x68>
   8679c:	1806d0ba 	srli	r3,r3,2
   867a0:	10800084 	addi	r2,r2,2
   867a4:	1940004c 	andi	r5,r3,1
   867a8:	2800081e 	bne	r5,zero,867cc <__lo0bits+0x90>
   867ac:	1806d07a 	srli	r3,r3,1
   867b0:	1800051e 	bne	r3,zero,867c8 <__lo0bits+0x8c>
   867b4:	00800804 	movi	r2,32
   867b8:	f800283a 	ret
   867bc:	1806d43a 	srli	r3,r3,16
   867c0:	00800404 	movi	r2,16
   867c4:	003feb06 	br	86774 <__lo0bits+0x38>
   867c8:	10800044 	addi	r2,r2,1
   867cc:	20c00015 	stw	r3,0(r4)
   867d0:	f800283a 	ret
   867d4:	0005883a 	mov	r2,zero
   867d8:	f800283a 	ret
   867dc:	1806d07a 	srli	r3,r3,1
   867e0:	00800044 	movi	r2,1
   867e4:	20c00015 	stw	r3,0(r4)
   867e8:	f800283a 	ret

000867ec <__i2b>:
   867ec:	defffd04 	addi	sp,sp,-12
   867f0:	dc000015 	stw	r16,0(sp)
   867f4:	04000044 	movi	r16,1
   867f8:	dc400115 	stw	r17,4(sp)
   867fc:	2823883a 	mov	r17,r5
   86800:	800b883a 	mov	r5,r16
   86804:	dfc00215 	stw	ra,8(sp)
   86808:	00863b80 	call	863b8 <_Balloc>
   8680c:	14400515 	stw	r17,20(r2)
   86810:	14000415 	stw	r16,16(r2)
   86814:	dfc00217 	ldw	ra,8(sp)
   86818:	dc400117 	ldw	r17,4(sp)
   8681c:	dc000017 	ldw	r16,0(sp)
   86820:	dec00304 	addi	sp,sp,12
   86824:	f800283a 	ret

00086828 <__multiply>:
   86828:	deffef04 	addi	sp,sp,-68
   8682c:	dc400815 	stw	r17,32(sp)
   86830:	dc000715 	stw	r16,28(sp)
   86834:	34400417 	ldw	r17,16(r6)
   86838:	2c000417 	ldw	r16,16(r5)
   8683c:	dd800d15 	stw	r22,52(sp)
   86840:	dc800915 	stw	r18,36(sp)
   86844:	dfc01015 	stw	ra,64(sp)
   86848:	df000f15 	stw	fp,60(sp)
   8684c:	ddc00e15 	stw	r23,56(sp)
   86850:	dd400c15 	stw	r21,48(sp)
   86854:	dd000b15 	stw	r20,44(sp)
   86858:	dcc00a15 	stw	r19,40(sp)
   8685c:	2825883a 	mov	r18,r5
   86860:	302d883a 	mov	r22,r6
   86864:	8440050e 	bge	r16,r17,8687c <__multiply+0x54>
   86868:	8007883a 	mov	r3,r16
   8686c:	3025883a 	mov	r18,r6
   86870:	8821883a 	mov	r16,r17
   86874:	282d883a 	mov	r22,r5
   86878:	1823883a 	mov	r17,r3
   8687c:	90800217 	ldw	r2,8(r18)
   86880:	8447883a 	add	r3,r16,r17
   86884:	d8c00215 	stw	r3,8(sp)
   86888:	91400117 	ldw	r5,4(r18)
   8688c:	10c0010e 	bge	r2,r3,86894 <__multiply+0x6c>
   86890:	29400044 	addi	r5,r5,1
   86894:	00863b80 	call	863b8 <_Balloc>
   86898:	d8c00217 	ldw	r3,8(sp)
   8689c:	d8800615 	stw	r2,24(sp)
   868a0:	18eb883a 	add	r21,r3,r3
   868a4:	ad6b883a 	add	r21,r21,r21
   868a8:	10c00504 	addi	r3,r2,20
   868ac:	1d6b883a 	add	r21,r3,r21
   868b0:	d8c00115 	stw	r3,4(sp)
   868b4:	dd400315 	stw	r21,12(sp)
   868b8:	1805883a 	mov	r2,r3
   868bc:	1d40042e 	bgeu	r3,r21,868d0 <__multiply+0xa8>
   868c0:	d8c00317 	ldw	r3,12(sp)
   868c4:	10000015 	stw	zero,0(r2)
   868c8:	10800104 	addi	r2,r2,4
   868cc:	10fffc36 	bltu	r2,r3,868c0 <__multiply+0x98>
   868d0:	8c63883a 	add	r17,r17,r17
   868d4:	b5800504 	addi	r22,r22,20
   868d8:	8c63883a 	add	r17,r17,r17
   868dc:	94800504 	addi	r18,r18,20
   868e0:	8421883a 	add	r16,r16,r16
   868e4:	b463883a 	add	r17,r22,r17
   868e8:	8421883a 	add	r16,r16,r16
   868ec:	dd800015 	stw	r22,0(sp)
   868f0:	dc800415 	stw	r18,16(sp)
   868f4:	dc400515 	stw	r17,20(sp)
   868f8:	9429883a 	add	r20,r18,r16
   868fc:	b4404f2e 	bgeu	r22,r17,86a3c <__multiply+0x214>
   86900:	d8c00017 	ldw	r3,0(sp)
   86904:	1c800017 	ldw	r18,0(r3)
   86908:	947fffcc 	andi	r17,r18,65535
   8690c:	88001e26 	beq	r17,zero,86988 <__multiply+0x160>
   86910:	dd800117 	ldw	r22,4(sp)
   86914:	dd400417 	ldw	r21,16(sp)
   86918:	0027883a 	mov	r19,zero
   8691c:	ac800017 	ldw	r18,0(r21)
   86920:	b4000017 	ldw	r16,0(r22)
   86924:	880b883a 	mov	r5,r17
   86928:	913fffcc 	andi	r4,r18,65535
   8692c:	008aa6c0 	call	8aa6c <__mulsi3>
   86930:	9008d43a 	srli	r4,r18,16
   86934:	84bfffcc 	andi	r18,r16,65535
   86938:	1485883a 	add	r2,r2,r18
   8693c:	14e5883a 	add	r18,r2,r19
   86940:	8020d43a 	srli	r16,r16,16
   86944:	9026d43a 	srli	r19,r18,16
   86948:	880b883a 	mov	r5,r17
   8694c:	008aa6c0 	call	8aa6c <__mulsi3>
   86950:	1405883a 	add	r2,r2,r16
   86954:	14e1883a 	add	r16,r2,r19
   86958:	90ffffcc 	andi	r3,r18,65535
   8695c:	8024943a 	slli	r18,r16,16
   86960:	ad400104 	addi	r21,r21,4
   86964:	b005883a 	mov	r2,r22
   86968:	90c6b03a 	or	r3,r18,r3
   8696c:	b0c00015 	stw	r3,0(r22)
   86970:	8026d43a 	srli	r19,r16,16
   86974:	b5800104 	addi	r22,r22,4
   86978:	ad3fe836 	bltu	r21,r20,8691c <__multiply+0xf4>
   8697c:	d8c00017 	ldw	r3,0(sp)
   86980:	14c00115 	stw	r19,4(r2)
   86984:	1c800017 	ldw	r18,0(r3)
   86988:	9024d43a 	srli	r18,r18,16
   8698c:	90002226 	beq	r18,zero,86a18 <__multiply+0x1f0>
   86990:	d8c00117 	ldw	r3,4(sp)
   86994:	dd800417 	ldw	r22,16(sp)
   86998:	002f883a 	mov	r23,zero
   8699c:	1f000017 	ldw	fp,0(r3)
   869a0:	1823883a 	mov	r17,r3
   869a4:	182b883a 	mov	r21,r3
   869a8:	e021883a 	mov	r16,fp
   869ac:	00000106 	br	869b4 <__multiply+0x18c>
   869b0:	982b883a 	mov	r21,r19
   869b4:	b100000b 	ldhu	r4,0(r22)
   869b8:	8020d43a 	srli	r16,r16,16
   869bc:	900b883a 	mov	r5,r18
   869c0:	008aa6c0 	call	8aa6c <__mulsi3>
   869c4:	1405883a 	add	r2,r2,r16
   869c8:	15ef883a 	add	r23,r2,r23
   869cc:	b804943a 	slli	r2,r23,16
   869d0:	e0ffffcc 	andi	r3,fp,65535
   869d4:	8c400104 	addi	r17,r17,4
   869d8:	10c6b03a 	or	r3,r2,r3
   869dc:	88ffff15 	stw	r3,-4(r17)
   869e0:	b5800104 	addi	r22,r22,4
   869e4:	b13fff17 	ldw	r4,-4(r22)
   869e8:	acc00104 	addi	r19,r21,4
   869ec:	900b883a 	mov	r5,r18
   869f0:	2008d43a 	srli	r4,r4,16
   869f4:	9c000017 	ldw	r16,0(r19)
   869f8:	008aa6c0 	call	8aa6c <__mulsi3>
   869fc:	b806d43a 	srli	r3,r23,16
   86a00:	813fffcc 	andi	r4,r16,65535
   86a04:	1105883a 	add	r2,r2,r4
   86a08:	10f9883a 	add	fp,r2,r3
   86a0c:	e02ed43a 	srli	r23,fp,16
   86a10:	b53fe736 	bltu	r22,r20,869b0 <__multiply+0x188>
   86a14:	af000115 	stw	fp,4(r21)
   86a18:	d8c00017 	ldw	r3,0(sp)
   86a1c:	d9000517 	ldw	r4,20(sp)
   86a20:	18c00104 	addi	r3,r3,4
   86a24:	d8c00015 	stw	r3,0(sp)
   86a28:	d8c00117 	ldw	r3,4(sp)
   86a2c:	18c00104 	addi	r3,r3,4
   86a30:	d8c00115 	stw	r3,4(sp)
   86a34:	d8c00017 	ldw	r3,0(sp)
   86a38:	193fb136 	bltu	r3,r4,86900 <__multiply+0xd8>
   86a3c:	d8c00217 	ldw	r3,8(sp)
   86a40:	00c00c0e 	bge	zero,r3,86a74 <__multiply+0x24c>
   86a44:	d8c00317 	ldw	r3,12(sp)
   86a48:	18bfff17 	ldw	r2,-4(r3)
   86a4c:	1d7fff04 	addi	r21,r3,-4
   86a50:	10000326 	beq	r2,zero,86a60 <__multiply+0x238>
   86a54:	00000706 	br	86a74 <__multiply+0x24c>
   86a58:	a8800017 	ldw	r2,0(r21)
   86a5c:	1000051e 	bne	r2,zero,86a74 <__multiply+0x24c>
   86a60:	d8c00217 	ldw	r3,8(sp)
   86a64:	ad7fff04 	addi	r21,r21,-4
   86a68:	18ffffc4 	addi	r3,r3,-1
   86a6c:	d8c00215 	stw	r3,8(sp)
   86a70:	183ff91e 	bne	r3,zero,86a58 <__multiply+0x230>
   86a74:	d8c00617 	ldw	r3,24(sp)
   86a78:	d9000217 	ldw	r4,8(sp)
   86a7c:	1805883a 	mov	r2,r3
   86a80:	19000415 	stw	r4,16(r3)
   86a84:	dfc01017 	ldw	ra,64(sp)
   86a88:	df000f17 	ldw	fp,60(sp)
   86a8c:	ddc00e17 	ldw	r23,56(sp)
   86a90:	dd800d17 	ldw	r22,52(sp)
   86a94:	dd400c17 	ldw	r21,48(sp)
   86a98:	dd000b17 	ldw	r20,44(sp)
   86a9c:	dcc00a17 	ldw	r19,40(sp)
   86aa0:	dc800917 	ldw	r18,36(sp)
   86aa4:	dc400817 	ldw	r17,32(sp)
   86aa8:	dc000717 	ldw	r16,28(sp)
   86aac:	dec01104 	addi	sp,sp,68
   86ab0:	f800283a 	ret

00086ab4 <__pow5mult>:
   86ab4:	defffa04 	addi	sp,sp,-24
   86ab8:	dcc00315 	stw	r19,12(sp)
   86abc:	dc000015 	stw	r16,0(sp)
   86ac0:	dfc00515 	stw	ra,20(sp)
   86ac4:	dd000415 	stw	r20,16(sp)
   86ac8:	dc800215 	stw	r18,8(sp)
   86acc:	dc400115 	stw	r17,4(sp)
   86ad0:	308000cc 	andi	r2,r6,3
   86ad4:	3021883a 	mov	r16,r6
   86ad8:	2027883a 	mov	r19,r4
   86adc:	10002f1e 	bne	r2,zero,86b9c <__pow5mult+0xe8>
   86ae0:	2825883a 	mov	r18,r5
   86ae4:	8021d0ba 	srai	r16,r16,2
   86ae8:	80001a26 	beq	r16,zero,86b54 <__pow5mult+0xa0>
   86aec:	9c401217 	ldw	r17,72(r19)
   86af0:	8800061e 	bne	r17,zero,86b0c <__pow5mult+0x58>
   86af4:	00003406 	br	86bc8 <__pow5mult+0x114>
   86af8:	8021d07a 	srai	r16,r16,1
   86afc:	80001526 	beq	r16,zero,86b54 <__pow5mult+0xa0>
   86b00:	88800017 	ldw	r2,0(r17)
   86b04:	10001c26 	beq	r2,zero,86b78 <__pow5mult+0xc4>
   86b08:	1023883a 	mov	r17,r2
   86b0c:	8080004c 	andi	r2,r16,1
   86b10:	103ff926 	beq	r2,zero,86af8 <__pow5mult+0x44>
   86b14:	880d883a 	mov	r6,r17
   86b18:	900b883a 	mov	r5,r18
   86b1c:	9809883a 	mov	r4,r19
   86b20:	00868280 	call	86828 <__multiply>
   86b24:	90001b26 	beq	r18,zero,86b94 <__pow5mult+0xe0>
   86b28:	91000117 	ldw	r4,4(r18)
   86b2c:	98c01317 	ldw	r3,76(r19)
   86b30:	8021d07a 	srai	r16,r16,1
   86b34:	2109883a 	add	r4,r4,r4
   86b38:	2109883a 	add	r4,r4,r4
   86b3c:	1907883a 	add	r3,r3,r4
   86b40:	19000017 	ldw	r4,0(r3)
   86b44:	91000015 	stw	r4,0(r18)
   86b48:	1c800015 	stw	r18,0(r3)
   86b4c:	1025883a 	mov	r18,r2
   86b50:	803feb1e 	bne	r16,zero,86b00 <__pow5mult+0x4c>
   86b54:	9005883a 	mov	r2,r18
   86b58:	dfc00517 	ldw	ra,20(sp)
   86b5c:	dd000417 	ldw	r20,16(sp)
   86b60:	dcc00317 	ldw	r19,12(sp)
   86b64:	dc800217 	ldw	r18,8(sp)
   86b68:	dc400117 	ldw	r17,4(sp)
   86b6c:	dc000017 	ldw	r16,0(sp)
   86b70:	dec00604 	addi	sp,sp,24
   86b74:	f800283a 	ret
   86b78:	880d883a 	mov	r6,r17
   86b7c:	880b883a 	mov	r5,r17
   86b80:	9809883a 	mov	r4,r19
   86b84:	00868280 	call	86828 <__multiply>
   86b88:	88800015 	stw	r2,0(r17)
   86b8c:	10000015 	stw	zero,0(r2)
   86b90:	003fdd06 	br	86b08 <__pow5mult+0x54>
   86b94:	1025883a 	mov	r18,r2
   86b98:	003fd706 	br	86af8 <__pow5mult+0x44>
   86b9c:	10bfffc4 	addi	r2,r2,-1
   86ba0:	1085883a 	add	r2,r2,r2
   86ba4:	00c00134 	movhi	r3,4
   86ba8:	18c02e04 	addi	r3,r3,184
   86bac:	1085883a 	add	r2,r2,r2
   86bb0:	1885883a 	add	r2,r3,r2
   86bb4:	11800017 	ldw	r6,0(r2)
   86bb8:	000f883a 	mov	r7,zero
   86bbc:	00864880 	call	86488 <__multadd>
   86bc0:	1025883a 	mov	r18,r2
   86bc4:	003fc706 	br	86ae4 <__pow5mult+0x30>
   86bc8:	05000044 	movi	r20,1
   86bcc:	a00b883a 	mov	r5,r20
   86bd0:	9809883a 	mov	r4,r19
   86bd4:	00863b80 	call	863b8 <_Balloc>
   86bd8:	1023883a 	mov	r17,r2
   86bdc:	00809c44 	movi	r2,625
   86be0:	88800515 	stw	r2,20(r17)
   86be4:	8d000415 	stw	r20,16(r17)
   86be8:	9c401215 	stw	r17,72(r19)
   86bec:	88000015 	stw	zero,0(r17)
   86bf0:	003fc606 	br	86b0c <__pow5mult+0x58>

00086bf4 <__lshift>:
   86bf4:	defff904 	addi	sp,sp,-28
   86bf8:	dd400515 	stw	r21,20(sp)
   86bfc:	dcc00315 	stw	r19,12(sp)
   86c00:	302bd17a 	srai	r21,r6,5
   86c04:	2cc00417 	ldw	r19,16(r5)
   86c08:	28800217 	ldw	r2,8(r5)
   86c0c:	dd000415 	stw	r20,16(sp)
   86c10:	ace7883a 	add	r19,r21,r19
   86c14:	dc800215 	stw	r18,8(sp)
   86c18:	dc400115 	stw	r17,4(sp)
   86c1c:	dc000015 	stw	r16,0(sp)
   86c20:	dfc00615 	stw	ra,24(sp)
   86c24:	9c000044 	addi	r16,r19,1
   86c28:	2823883a 	mov	r17,r5
   86c2c:	3029883a 	mov	r20,r6
   86c30:	2025883a 	mov	r18,r4
   86c34:	29400117 	ldw	r5,4(r5)
   86c38:	1400030e 	bge	r2,r16,86c48 <__lshift+0x54>
   86c3c:	1085883a 	add	r2,r2,r2
   86c40:	29400044 	addi	r5,r5,1
   86c44:	143ffd16 	blt	r2,r16,86c3c <__lshift+0x48>
   86c48:	9009883a 	mov	r4,r18
   86c4c:	00863b80 	call	863b8 <_Balloc>
   86c50:	10c00504 	addi	r3,r2,20
   86c54:	0540070e 	bge	zero,r21,86c74 <__lshift+0x80>
   86c58:	ad6b883a 	add	r21,r21,r21
   86c5c:	ad6b883a 	add	r21,r21,r21
   86c60:	1809883a 	mov	r4,r3
   86c64:	1d47883a 	add	r3,r3,r21
   86c68:	20000015 	stw	zero,0(r4)
   86c6c:	21000104 	addi	r4,r4,4
   86c70:	193ffd1e 	bne	r3,r4,86c68 <__lshift+0x74>
   86c74:	8a000417 	ldw	r8,16(r17)
   86c78:	89000504 	addi	r4,r17,20
   86c7c:	a18007cc 	andi	r6,r20,31
   86c80:	4211883a 	add	r8,r8,r8
   86c84:	4211883a 	add	r8,r8,r8
   86c88:	2211883a 	add	r8,r4,r8
   86c8c:	30002326 	beq	r6,zero,86d1c <__lshift+0x128>
   86c90:	02400804 	movi	r9,32
   86c94:	4993c83a 	sub	r9,r9,r6
   86c98:	000b883a 	mov	r5,zero
   86c9c:	21c00017 	ldw	r7,0(r4)
   86ca0:	1815883a 	mov	r10,r3
   86ca4:	18c00104 	addi	r3,r3,4
   86ca8:	398e983a 	sll	r7,r7,r6
   86cac:	21000104 	addi	r4,r4,4
   86cb0:	394ab03a 	or	r5,r7,r5
   86cb4:	197fff15 	stw	r5,-4(r3)
   86cb8:	217fff17 	ldw	r5,-4(r4)
   86cbc:	2a4ad83a 	srl	r5,r5,r9
   86cc0:	223ff636 	bltu	r4,r8,86c9c <__lshift+0xa8>
   86cc4:	51400115 	stw	r5,4(r10)
   86cc8:	28001a1e 	bne	r5,zero,86d34 <__lshift+0x140>
   86ccc:	843fffc4 	addi	r16,r16,-1
   86cd0:	14000415 	stw	r16,16(r2)
   86cd4:	88000826 	beq	r17,zero,86cf8 <__lshift+0x104>
   86cd8:	89000117 	ldw	r4,4(r17)
   86cdc:	90c01317 	ldw	r3,76(r18)
   86ce0:	2109883a 	add	r4,r4,r4
   86ce4:	2109883a 	add	r4,r4,r4
   86ce8:	1907883a 	add	r3,r3,r4
   86cec:	19000017 	ldw	r4,0(r3)
   86cf0:	89000015 	stw	r4,0(r17)
   86cf4:	1c400015 	stw	r17,0(r3)
   86cf8:	dfc00617 	ldw	ra,24(sp)
   86cfc:	dd400517 	ldw	r21,20(sp)
   86d00:	dd000417 	ldw	r20,16(sp)
   86d04:	dcc00317 	ldw	r19,12(sp)
   86d08:	dc800217 	ldw	r18,8(sp)
   86d0c:	dc400117 	ldw	r17,4(sp)
   86d10:	dc000017 	ldw	r16,0(sp)
   86d14:	dec00704 	addi	sp,sp,28
   86d18:	f800283a 	ret
   86d1c:	21400017 	ldw	r5,0(r4)
   86d20:	18c00104 	addi	r3,r3,4
   86d24:	21000104 	addi	r4,r4,4
   86d28:	197fff15 	stw	r5,-4(r3)
   86d2c:	223ffb36 	bltu	r4,r8,86d1c <__lshift+0x128>
   86d30:	003fe606 	br	86ccc <__lshift+0xd8>
   86d34:	9c000084 	addi	r16,r19,2
   86d38:	003fe406 	br	86ccc <__lshift+0xd8>

00086d3c <__mcmp>:
   86d3c:	20800417 	ldw	r2,16(r4)
   86d40:	28c00417 	ldw	r3,16(r5)
   86d44:	10c5c83a 	sub	r2,r2,r3
   86d48:	1000111e 	bne	r2,zero,86d90 <__mcmp+0x54>
   86d4c:	18c7883a 	add	r3,r3,r3
   86d50:	18c7883a 	add	r3,r3,r3
   86d54:	21000504 	addi	r4,r4,20
   86d58:	29400504 	addi	r5,r5,20
   86d5c:	20c5883a 	add	r2,r4,r3
   86d60:	28cb883a 	add	r5,r5,r3
   86d64:	00000106 	br	86d6c <__mcmp+0x30>
   86d68:	20800a2e 	bgeu	r4,r2,86d94 <__mcmp+0x58>
   86d6c:	10bfff04 	addi	r2,r2,-4
   86d70:	297fff04 	addi	r5,r5,-4
   86d74:	11800017 	ldw	r6,0(r2)
   86d78:	28c00017 	ldw	r3,0(r5)
   86d7c:	30fffa26 	beq	r6,r3,86d68 <__mcmp+0x2c>
   86d80:	30c00236 	bltu	r6,r3,86d8c <__mcmp+0x50>
   86d84:	00800044 	movi	r2,1
   86d88:	f800283a 	ret
   86d8c:	00bfffc4 	movi	r2,-1
   86d90:	f800283a 	ret
   86d94:	0005883a 	mov	r2,zero
   86d98:	f800283a 	ret

00086d9c <__mdiff>:
   86d9c:	28c00417 	ldw	r3,16(r5)
   86da0:	30800417 	ldw	r2,16(r6)
   86da4:	defffa04 	addi	sp,sp,-24
   86da8:	dcc00315 	stw	r19,12(sp)
   86dac:	dc800215 	stw	r18,8(sp)
   86db0:	dfc00515 	stw	ra,20(sp)
   86db4:	dd000415 	stw	r20,16(sp)
   86db8:	dc400115 	stw	r17,4(sp)
   86dbc:	dc000015 	stw	r16,0(sp)
   86dc0:	1887c83a 	sub	r3,r3,r2
   86dc4:	2825883a 	mov	r18,r5
   86dc8:	3027883a 	mov	r19,r6
   86dcc:	1800141e 	bne	r3,zero,86e20 <__mdiff+0x84>
   86dd0:	1085883a 	add	r2,r2,r2
   86dd4:	1085883a 	add	r2,r2,r2
   86dd8:	2a000504 	addi	r8,r5,20
   86ddc:	34000504 	addi	r16,r6,20
   86de0:	4087883a 	add	r3,r8,r2
   86de4:	8085883a 	add	r2,r16,r2
   86de8:	00000106 	br	86df0 <__mdiff+0x54>
   86dec:	40c0592e 	bgeu	r8,r3,86f54 <__mdiff+0x1b8>
   86df0:	18ffff04 	addi	r3,r3,-4
   86df4:	10bfff04 	addi	r2,r2,-4
   86df8:	19c00017 	ldw	r7,0(r3)
   86dfc:	11400017 	ldw	r5,0(r2)
   86e00:	397ffa26 	beq	r7,r5,86dec <__mdiff+0x50>
   86e04:	3940592e 	bgeu	r7,r5,86f6c <__mdiff+0x1d0>
   86e08:	9005883a 	mov	r2,r18
   86e0c:	4023883a 	mov	r17,r8
   86e10:	9825883a 	mov	r18,r19
   86e14:	05000044 	movi	r20,1
   86e18:	1027883a 	mov	r19,r2
   86e1c:	00000406 	br	86e30 <__mdiff+0x94>
   86e20:	18005616 	blt	r3,zero,86f7c <__mdiff+0x1e0>
   86e24:	34400504 	addi	r17,r6,20
   86e28:	2c000504 	addi	r16,r5,20
   86e2c:	0029883a 	mov	r20,zero
   86e30:	91400117 	ldw	r5,4(r18)
   86e34:	00863b80 	call	863b8 <_Balloc>
   86e38:	92400417 	ldw	r9,16(r18)
   86e3c:	9b000417 	ldw	r12,16(r19)
   86e40:	12c00504 	addi	r11,r2,20
   86e44:	4a51883a 	add	r8,r9,r9
   86e48:	6319883a 	add	r12,r12,r12
   86e4c:	4211883a 	add	r8,r8,r8
   86e50:	6319883a 	add	r12,r12,r12
   86e54:	15000315 	stw	r20,12(r2)
   86e58:	8211883a 	add	r8,r16,r8
   86e5c:	8b19883a 	add	r12,r17,r12
   86e60:	0007883a 	mov	r3,zero
   86e64:	81400017 	ldw	r5,0(r16)
   86e68:	89c00017 	ldw	r7,0(r17)
   86e6c:	59800104 	addi	r6,r11,4
   86e70:	293fffcc 	andi	r4,r5,65535
   86e74:	20c7883a 	add	r3,r4,r3
   86e78:	393fffcc 	andi	r4,r7,65535
   86e7c:	1909c83a 	sub	r4,r3,r4
   86e80:	280ad43a 	srli	r5,r5,16
   86e84:	380ed43a 	srli	r7,r7,16
   86e88:	2007d43a 	srai	r3,r4,16
   86e8c:	213fffcc 	andi	r4,r4,65535
   86e90:	29cbc83a 	sub	r5,r5,r7
   86e94:	28c7883a 	add	r3,r5,r3
   86e98:	180a943a 	slli	r5,r3,16
   86e9c:	8c400104 	addi	r17,r17,4
   86ea0:	84000104 	addi	r16,r16,4
   86ea4:	2908b03a 	or	r4,r5,r4
   86ea8:	59000015 	stw	r4,0(r11)
   86eac:	1807d43a 	srai	r3,r3,16
   86eb0:	3015883a 	mov	r10,r6
   86eb4:	3017883a 	mov	r11,r6
   86eb8:	8b3fea36 	bltu	r17,r12,86e64 <__mdiff+0xc8>
   86ebc:	8200162e 	bgeu	r16,r8,86f18 <__mdiff+0x17c>
   86ec0:	8017883a 	mov	r11,r16
   86ec4:	59400017 	ldw	r5,0(r11)
   86ec8:	31800104 	addi	r6,r6,4
   86ecc:	5ac00104 	addi	r11,r11,4
   86ed0:	293fffcc 	andi	r4,r5,65535
   86ed4:	20c7883a 	add	r3,r4,r3
   86ed8:	280ed43a 	srli	r7,r5,16
   86edc:	180bd43a 	srai	r5,r3,16
   86ee0:	193fffcc 	andi	r4,r3,65535
   86ee4:	3947883a 	add	r3,r7,r5
   86ee8:	180a943a 	slli	r5,r3,16
   86eec:	1807d43a 	srai	r3,r3,16
   86ef0:	2908b03a 	or	r4,r5,r4
   86ef4:	313fff15 	stw	r4,-4(r6)
   86ef8:	5a3ff236 	bltu	r11,r8,86ec4 <__mdiff+0x128>
   86efc:	0406303a 	nor	r3,zero,r16
   86f00:	1a07883a 	add	r3,r3,r8
   86f04:	1806d0ba 	srli	r3,r3,2
   86f08:	18c00044 	addi	r3,r3,1
   86f0c:	18c7883a 	add	r3,r3,r3
   86f10:	18c7883a 	add	r3,r3,r3
   86f14:	50d5883a 	add	r10,r10,r3
   86f18:	50ffff04 	addi	r3,r10,-4
   86f1c:	2000041e 	bne	r4,zero,86f30 <__mdiff+0x194>
   86f20:	18ffff04 	addi	r3,r3,-4
   86f24:	19000017 	ldw	r4,0(r3)
   86f28:	4a7fffc4 	addi	r9,r9,-1
   86f2c:	203ffc26 	beq	r4,zero,86f20 <__mdiff+0x184>
   86f30:	12400415 	stw	r9,16(r2)
   86f34:	dfc00517 	ldw	ra,20(sp)
   86f38:	dd000417 	ldw	r20,16(sp)
   86f3c:	dcc00317 	ldw	r19,12(sp)
   86f40:	dc800217 	ldw	r18,8(sp)
   86f44:	dc400117 	ldw	r17,4(sp)
   86f48:	dc000017 	ldw	r16,0(sp)
   86f4c:	dec00604 	addi	sp,sp,24
   86f50:	f800283a 	ret
   86f54:	000b883a 	mov	r5,zero
   86f58:	00863b80 	call	863b8 <_Balloc>
   86f5c:	00c00044 	movi	r3,1
   86f60:	10c00415 	stw	r3,16(r2)
   86f64:	10000515 	stw	zero,20(r2)
   86f68:	003ff206 	br	86f34 <__mdiff+0x198>
   86f6c:	8023883a 	mov	r17,r16
   86f70:	0029883a 	mov	r20,zero
   86f74:	4021883a 	mov	r16,r8
   86f78:	003fad06 	br	86e30 <__mdiff+0x94>
   86f7c:	9005883a 	mov	r2,r18
   86f80:	94400504 	addi	r17,r18,20
   86f84:	9c000504 	addi	r16,r19,20
   86f88:	9825883a 	mov	r18,r19
   86f8c:	05000044 	movi	r20,1
   86f90:	1027883a 	mov	r19,r2
   86f94:	003fa606 	br	86e30 <__mdiff+0x94>

00086f98 <__ulp>:
   86f98:	295ffc2c 	andhi	r5,r5,32752
   86f9c:	00bf3034 	movhi	r2,64704
   86fa0:	2887883a 	add	r3,r5,r2
   86fa4:	00c0020e 	bge	zero,r3,86fb0 <__ulp+0x18>
   86fa8:	0005883a 	mov	r2,zero
   86fac:	f800283a 	ret
   86fb0:	00c7c83a 	sub	r3,zero,r3
   86fb4:	1807d53a 	srai	r3,r3,20
   86fb8:	008004c4 	movi	r2,19
   86fbc:	10c00b0e 	bge	r2,r3,86fec <__ulp+0x54>
   86fc0:	18bffb04 	addi	r2,r3,-20
   86fc4:	01000784 	movi	r4,30
   86fc8:	0007883a 	mov	r3,zero
   86fcc:	20800516 	blt	r4,r2,86fe4 <__ulp+0x4c>
   86fd0:	010007c4 	movi	r4,31
   86fd4:	2089c83a 	sub	r4,r4,r2
   86fd8:	00800044 	movi	r2,1
   86fdc:	1104983a 	sll	r2,r2,r4
   86fe0:	f800283a 	ret
   86fe4:	00800044 	movi	r2,1
   86fe8:	f800283a 	ret
   86fec:	01400234 	movhi	r5,8
   86ff0:	28c7d83a 	sra	r3,r5,r3
   86ff4:	0005883a 	mov	r2,zero
   86ff8:	f800283a 	ret

00086ffc <__b2d>:
   86ffc:	defffa04 	addi	sp,sp,-24
   87000:	dc000015 	stw	r16,0(sp)
   87004:	24000417 	ldw	r16,16(r4)
   87008:	dc400115 	stw	r17,4(sp)
   8700c:	24400504 	addi	r17,r4,20
   87010:	8421883a 	add	r16,r16,r16
   87014:	8421883a 	add	r16,r16,r16
   87018:	8c21883a 	add	r16,r17,r16
   8701c:	dc800215 	stw	r18,8(sp)
   87020:	84bfff17 	ldw	r18,-4(r16)
   87024:	dd000415 	stw	r20,16(sp)
   87028:	dcc00315 	stw	r19,12(sp)
   8702c:	9009883a 	mov	r4,r18
   87030:	2829883a 	mov	r20,r5
   87034:	dfc00515 	stw	ra,20(sp)
   87038:	00866d40 	call	866d4 <__hi0bits>
   8703c:	00c00804 	movi	r3,32
   87040:	1889c83a 	sub	r4,r3,r2
   87044:	a1000015 	stw	r4,0(r20)
   87048:	01000284 	movi	r4,10
   8704c:	84ffff04 	addi	r19,r16,-4
   87050:	20801216 	blt	r4,r2,8709c <__b2d+0xa0>
   87054:	018002c4 	movi	r6,11
   87058:	308dc83a 	sub	r6,r6,r2
   8705c:	9186d83a 	srl	r3,r18,r6
   87060:	18cffc34 	orhi	r3,r3,16368
   87064:	8cc0212e 	bgeu	r17,r19,870ec <__b2d+0xf0>
   87068:	813ffe17 	ldw	r4,-8(r16)
   8706c:	218cd83a 	srl	r6,r4,r6
   87070:	10800544 	addi	r2,r2,21
   87074:	9084983a 	sll	r2,r18,r2
   87078:	1184b03a 	or	r2,r2,r6
   8707c:	dfc00517 	ldw	ra,20(sp)
   87080:	dd000417 	ldw	r20,16(sp)
   87084:	dcc00317 	ldw	r19,12(sp)
   87088:	dc800217 	ldw	r18,8(sp)
   8708c:	dc400117 	ldw	r17,4(sp)
   87090:	dc000017 	ldw	r16,0(sp)
   87094:	dec00604 	addi	sp,sp,24
   87098:	f800283a 	ret
   8709c:	8cc00f2e 	bgeu	r17,r19,870dc <__b2d+0xe0>
   870a0:	117ffd44 	addi	r5,r2,-11
   870a4:	80bffe17 	ldw	r2,-8(r16)
   870a8:	28000e26 	beq	r5,zero,870e4 <__b2d+0xe8>
   870ac:	1949c83a 	sub	r4,r3,r5
   870b0:	9164983a 	sll	r18,r18,r5
   870b4:	1106d83a 	srl	r3,r2,r4
   870b8:	81bffe04 	addi	r6,r16,-8
   870bc:	948ffc34 	orhi	r18,r18,16368
   870c0:	90c6b03a 	or	r3,r18,r3
   870c4:	89800e2e 	bgeu	r17,r6,87100 <__b2d+0x104>
   870c8:	81bffd17 	ldw	r6,-12(r16)
   870cc:	1144983a 	sll	r2,r2,r5
   870d0:	310ad83a 	srl	r5,r6,r4
   870d4:	2884b03a 	or	r2,r5,r2
   870d8:	003fe806 	br	8707c <__b2d+0x80>
   870dc:	10bffd44 	addi	r2,r2,-11
   870e0:	1000041e 	bne	r2,zero,870f4 <__b2d+0xf8>
   870e4:	90cffc34 	orhi	r3,r18,16368
   870e8:	003fe406 	br	8707c <__b2d+0x80>
   870ec:	000d883a 	mov	r6,zero
   870f0:	003fdf06 	br	87070 <__b2d+0x74>
   870f4:	90a4983a 	sll	r18,r18,r2
   870f8:	0005883a 	mov	r2,zero
   870fc:	003ff906 	br	870e4 <__b2d+0xe8>
   87100:	1144983a 	sll	r2,r2,r5
   87104:	003fdd06 	br	8707c <__b2d+0x80>

00087108 <__d2b>:
   87108:	defff804 	addi	sp,sp,-32
   8710c:	dc000215 	stw	r16,8(sp)
   87110:	3021883a 	mov	r16,r6
   87114:	dc400315 	stw	r17,12(sp)
   87118:	8022907a 	slli	r17,r16,1
   8711c:	dd000615 	stw	r20,24(sp)
   87120:	2829883a 	mov	r20,r5
   87124:	01400044 	movi	r5,1
   87128:	dcc00515 	stw	r19,20(sp)
   8712c:	dc800415 	stw	r18,16(sp)
   87130:	dfc00715 	stw	ra,28(sp)
   87134:	3825883a 	mov	r18,r7
   87138:	8822d57a 	srli	r17,r17,21
   8713c:	00863b80 	call	863b8 <_Balloc>
   87140:	1027883a 	mov	r19,r2
   87144:	00800434 	movhi	r2,16
   87148:	10bfffc4 	addi	r2,r2,-1
   8714c:	808c703a 	and	r6,r16,r2
   87150:	88000126 	beq	r17,zero,87158 <__d2b+0x50>
   87154:	31800434 	orhi	r6,r6,16
   87158:	d9800015 	stw	r6,0(sp)
   8715c:	a0002426 	beq	r20,zero,871f0 <__d2b+0xe8>
   87160:	d9000104 	addi	r4,sp,4
   87164:	dd000115 	stw	r20,4(sp)
   87168:	008673c0 	call	8673c <__lo0bits>
   8716c:	d8c00017 	ldw	r3,0(sp)
   87170:	10002f1e 	bne	r2,zero,87230 <__d2b+0x128>
   87174:	d9000117 	ldw	r4,4(sp)
   87178:	99000515 	stw	r4,20(r19)
   8717c:	1821003a 	cmpeq	r16,r3,zero
   87180:	01000084 	movi	r4,2
   87184:	2421c83a 	sub	r16,r4,r16
   87188:	98c00615 	stw	r3,24(r19)
   8718c:	9c000415 	stw	r16,16(r19)
   87190:	88001f1e 	bne	r17,zero,87210 <__d2b+0x108>
   87194:	10bef384 	addi	r2,r2,-1074
   87198:	90800015 	stw	r2,0(r18)
   8719c:	00900034 	movhi	r2,16384
   871a0:	10bfffc4 	addi	r2,r2,-1
   871a4:	8085883a 	add	r2,r16,r2
   871a8:	1085883a 	add	r2,r2,r2
   871ac:	1085883a 	add	r2,r2,r2
   871b0:	9885883a 	add	r2,r19,r2
   871b4:	11000517 	ldw	r4,20(r2)
   871b8:	8020917a 	slli	r16,r16,5
   871bc:	00866d40 	call	866d4 <__hi0bits>
   871c0:	d8c00817 	ldw	r3,32(sp)
   871c4:	8085c83a 	sub	r2,r16,r2
   871c8:	18800015 	stw	r2,0(r3)
   871cc:	9805883a 	mov	r2,r19
   871d0:	dfc00717 	ldw	ra,28(sp)
   871d4:	dd000617 	ldw	r20,24(sp)
   871d8:	dcc00517 	ldw	r19,20(sp)
   871dc:	dc800417 	ldw	r18,16(sp)
   871e0:	dc400317 	ldw	r17,12(sp)
   871e4:	dc000217 	ldw	r16,8(sp)
   871e8:	dec00804 	addi	sp,sp,32
   871ec:	f800283a 	ret
   871f0:	d809883a 	mov	r4,sp
   871f4:	008673c0 	call	8673c <__lo0bits>
   871f8:	d8c00017 	ldw	r3,0(sp)
   871fc:	04000044 	movi	r16,1
   87200:	9c000415 	stw	r16,16(r19)
   87204:	98c00515 	stw	r3,20(r19)
   87208:	10800804 	addi	r2,r2,32
   8720c:	883fe126 	beq	r17,zero,87194 <__d2b+0x8c>
   87210:	00c00d44 	movi	r3,53
   87214:	8c7ef344 	addi	r17,r17,-1075
   87218:	88a3883a 	add	r17,r17,r2
   8721c:	1885c83a 	sub	r2,r3,r2
   87220:	d8c00817 	ldw	r3,32(sp)
   87224:	94400015 	stw	r17,0(r18)
   87228:	18800015 	stw	r2,0(r3)
   8722c:	003fe706 	br	871cc <__d2b+0xc4>
   87230:	01000804 	movi	r4,32
   87234:	2089c83a 	sub	r4,r4,r2
   87238:	1908983a 	sll	r4,r3,r4
   8723c:	d9400117 	ldw	r5,4(sp)
   87240:	1886d83a 	srl	r3,r3,r2
   87244:	2148b03a 	or	r4,r4,r5
   87248:	99000515 	stw	r4,20(r19)
   8724c:	d8c00015 	stw	r3,0(sp)
   87250:	003fca06 	br	8717c <__d2b+0x74>

00087254 <__ratio>:
   87254:	defff904 	addi	sp,sp,-28
   87258:	dc400315 	stw	r17,12(sp)
   8725c:	2823883a 	mov	r17,r5
   87260:	d9400104 	addi	r5,sp,4
   87264:	dfc00615 	stw	ra,24(sp)
   87268:	dcc00515 	stw	r19,20(sp)
   8726c:	dc800415 	stw	r18,16(sp)
   87270:	2027883a 	mov	r19,r4
   87274:	dc000215 	stw	r16,8(sp)
   87278:	0086ffc0 	call	86ffc <__b2d>
   8727c:	d80b883a 	mov	r5,sp
   87280:	8809883a 	mov	r4,r17
   87284:	1025883a 	mov	r18,r2
   87288:	1821883a 	mov	r16,r3
   8728c:	0086ffc0 	call	86ffc <__b2d>
   87290:	8a000417 	ldw	r8,16(r17)
   87294:	99000417 	ldw	r4,16(r19)
   87298:	d9400117 	ldw	r5,4(sp)
   8729c:	2209c83a 	sub	r4,r4,r8
   872a0:	2010917a 	slli	r8,r4,5
   872a4:	d9000017 	ldw	r4,0(sp)
   872a8:	2909c83a 	sub	r4,r5,r4
   872ac:	4109883a 	add	r4,r8,r4
   872b0:	01000e0e 	bge	zero,r4,872ec <__ratio+0x98>
   872b4:	2008953a 	slli	r4,r4,20
   872b8:	2421883a 	add	r16,r4,r16
   872bc:	100d883a 	mov	r6,r2
   872c0:	180f883a 	mov	r7,r3
   872c4:	9009883a 	mov	r4,r18
   872c8:	800b883a 	mov	r5,r16
   872cc:	008b3400 	call	8b340 <__divdf3>
   872d0:	dfc00617 	ldw	ra,24(sp)
   872d4:	dcc00517 	ldw	r19,20(sp)
   872d8:	dc800417 	ldw	r18,16(sp)
   872dc:	dc400317 	ldw	r17,12(sp)
   872e0:	dc000217 	ldw	r16,8(sp)
   872e4:	dec00704 	addi	sp,sp,28
   872e8:	f800283a 	ret
   872ec:	2008953a 	slli	r4,r4,20
   872f0:	1907c83a 	sub	r3,r3,r4
   872f4:	003ff106 	br	872bc <__ratio+0x68>

000872f8 <_mprec_log10>:
   872f8:	defffe04 	addi	sp,sp,-8
   872fc:	dc000015 	stw	r16,0(sp)
   87300:	dfc00115 	stw	ra,4(sp)
   87304:	008005c4 	movi	r2,23
   87308:	2021883a 	mov	r16,r4
   8730c:	11000d0e 	bge	r2,r4,87344 <_mprec_log10+0x4c>
   87310:	0005883a 	mov	r2,zero
   87314:	00cffc34 	movhi	r3,16368
   87318:	843fffc4 	addi	r16,r16,-1
   8731c:	000d883a 	mov	r6,zero
   87320:	01d00934 	movhi	r7,16420
   87324:	1009883a 	mov	r4,r2
   87328:	180b883a 	mov	r5,r3
   8732c:	008bf680 	call	8bf68 <__muldf3>
   87330:	803ff91e 	bne	r16,zero,87318 <_mprec_log10+0x20>
   87334:	dfc00117 	ldw	ra,4(sp)
   87338:	dc000017 	ldw	r16,0(sp)
   8733c:	dec00204 	addi	sp,sp,8
   87340:	f800283a 	ret
   87344:	202090fa 	slli	r16,r4,3
   87348:	00800134 	movhi	r2,4
   8734c:	10804504 	addi	r2,r2,276
   87350:	1421883a 	add	r16,r2,r16
   87354:	80800017 	ldw	r2,0(r16)
   87358:	80c00117 	ldw	r3,4(r16)
   8735c:	dfc00117 	ldw	ra,4(sp)
   87360:	dc000017 	ldw	r16,0(sp)
   87364:	dec00204 	addi	sp,sp,8
   87368:	f800283a 	ret

0008736c <__copybits>:
   8736c:	297fffc4 	addi	r5,r5,-1
   87370:	280fd17a 	srai	r7,r5,5
   87374:	30c00417 	ldw	r3,16(r6)
   87378:	30800504 	addi	r2,r6,20
   8737c:	39c00044 	addi	r7,r7,1
   87380:	18c7883a 	add	r3,r3,r3
   87384:	39cf883a 	add	r7,r7,r7
   87388:	18c7883a 	add	r3,r3,r3
   8738c:	39cf883a 	add	r7,r7,r7
   87390:	10c7883a 	add	r3,r2,r3
   87394:	21cf883a 	add	r7,r4,r7
   87398:	10c00d2e 	bgeu	r2,r3,873d0 <__copybits+0x64>
   8739c:	200b883a 	mov	r5,r4
   873a0:	12000017 	ldw	r8,0(r2)
   873a4:	29400104 	addi	r5,r5,4
   873a8:	10800104 	addi	r2,r2,4
   873ac:	2a3fff15 	stw	r8,-4(r5)
   873b0:	10fffb36 	bltu	r2,r3,873a0 <__copybits+0x34>
   873b4:	1985c83a 	sub	r2,r3,r6
   873b8:	10bffac4 	addi	r2,r2,-21
   873bc:	1004d0ba 	srli	r2,r2,2
   873c0:	10800044 	addi	r2,r2,1
   873c4:	1085883a 	add	r2,r2,r2
   873c8:	1085883a 	add	r2,r2,r2
   873cc:	2089883a 	add	r4,r4,r2
   873d0:	21c0032e 	bgeu	r4,r7,873e0 <__copybits+0x74>
   873d4:	20000015 	stw	zero,0(r4)
   873d8:	21000104 	addi	r4,r4,4
   873dc:	21fffd36 	bltu	r4,r7,873d4 <__copybits+0x68>
   873e0:	f800283a 	ret

000873e4 <__any_on>:
   873e4:	20c00417 	ldw	r3,16(r4)
   873e8:	2805d17a 	srai	r2,r5,5
   873ec:	21000504 	addi	r4,r4,20
   873f0:	18800d0e 	bge	r3,r2,87428 <__any_on+0x44>
   873f4:	18c7883a 	add	r3,r3,r3
   873f8:	18c7883a 	add	r3,r3,r3
   873fc:	20c7883a 	add	r3,r4,r3
   87400:	20c0192e 	bgeu	r4,r3,87468 <__any_on+0x84>
   87404:	18bfff17 	ldw	r2,-4(r3)
   87408:	18ffff04 	addi	r3,r3,-4
   8740c:	1000041e 	bne	r2,zero,87420 <__any_on+0x3c>
   87410:	20c0142e 	bgeu	r4,r3,87464 <__any_on+0x80>
   87414:	18ffff04 	addi	r3,r3,-4
   87418:	19400017 	ldw	r5,0(r3)
   8741c:	283ffc26 	beq	r5,zero,87410 <__any_on+0x2c>
   87420:	00800044 	movi	r2,1
   87424:	f800283a 	ret
   87428:	10c00a0e 	bge	r2,r3,87454 <__any_on+0x70>
   8742c:	1085883a 	add	r2,r2,r2
   87430:	1085883a 	add	r2,r2,r2
   87434:	294007cc 	andi	r5,r5,31
   87438:	2087883a 	add	r3,r4,r2
   8743c:	283ff026 	beq	r5,zero,87400 <__any_on+0x1c>
   87440:	19800017 	ldw	r6,0(r3)
   87444:	3144d83a 	srl	r2,r6,r5
   87448:	114a983a 	sll	r5,r2,r5
   8744c:	317ff41e 	bne	r6,r5,87420 <__any_on+0x3c>
   87450:	003feb06 	br	87400 <__any_on+0x1c>
   87454:	1085883a 	add	r2,r2,r2
   87458:	1085883a 	add	r2,r2,r2
   8745c:	2087883a 	add	r3,r4,r2
   87460:	003fe706 	br	87400 <__any_on+0x1c>
   87464:	f800283a 	ret
   87468:	0005883a 	mov	r2,zero
   8746c:	f800283a 	ret

00087470 <_realloc_r>:
   87470:	defff604 	addi	sp,sp,-40
   87474:	dc800215 	stw	r18,8(sp)
   87478:	dfc00915 	stw	ra,36(sp)
   8747c:	df000815 	stw	fp,32(sp)
   87480:	ddc00715 	stw	r23,28(sp)
   87484:	dd800615 	stw	r22,24(sp)
   87488:	dd400515 	stw	r21,20(sp)
   8748c:	dd000415 	stw	r20,16(sp)
   87490:	dcc00315 	stw	r19,12(sp)
   87494:	dc400115 	stw	r17,4(sp)
   87498:	dc000015 	stw	r16,0(sp)
   8749c:	3025883a 	mov	r18,r6
   874a0:	2800b726 	beq	r5,zero,87780 <_realloc_r+0x310>
   874a4:	282b883a 	mov	r21,r5
   874a8:	2029883a 	mov	r20,r4
   874ac:	008d8d40 	call	8d8d4 <__malloc_lock>
   874b0:	a8bfff17 	ldw	r2,-4(r21)
   874b4:	043fff04 	movi	r16,-4
   874b8:	90c002c4 	addi	r3,r18,11
   874bc:	01000584 	movi	r4,22
   874c0:	acfffe04 	addi	r19,r21,-8
   874c4:	1420703a 	and	r16,r2,r16
   874c8:	20c0332e 	bgeu	r4,r3,87598 <_realloc_r+0x128>
   874cc:	047ffe04 	movi	r17,-8
   874d0:	1c62703a 	and	r17,r3,r17
   874d4:	8807883a 	mov	r3,r17
   874d8:	88005816 	blt	r17,zero,8763c <_realloc_r+0x1cc>
   874dc:	8c805736 	bltu	r17,r18,8763c <_realloc_r+0x1cc>
   874e0:	80c0300e 	bge	r16,r3,875a4 <_realloc_r+0x134>
   874e4:	07000134 	movhi	fp,4
   874e8:	e701f304 	addi	fp,fp,1996
   874ec:	e1c00217 	ldw	r7,8(fp)
   874f0:	9c09883a 	add	r4,r19,r16
   874f4:	22000117 	ldw	r8,4(r4)
   874f8:	21c06326 	beq	r4,r7,87688 <_realloc_r+0x218>
   874fc:	017fff84 	movi	r5,-2
   87500:	414a703a 	and	r5,r8,r5
   87504:	214b883a 	add	r5,r4,r5
   87508:	29800117 	ldw	r6,4(r5)
   8750c:	3180004c 	andi	r6,r6,1
   87510:	30003f26 	beq	r6,zero,87610 <_realloc_r+0x1a0>
   87514:	1080004c 	andi	r2,r2,1
   87518:	10008326 	beq	r2,zero,87728 <_realloc_r+0x2b8>
   8751c:	900b883a 	mov	r5,r18
   87520:	a009883a 	mov	r4,r20
   87524:	00856fc0 	call	856fc <_malloc_r>
   87528:	1025883a 	mov	r18,r2
   8752c:	10011e26 	beq	r2,zero,879a8 <_realloc_r+0x538>
   87530:	a93fff17 	ldw	r4,-4(r21)
   87534:	10fffe04 	addi	r3,r2,-8
   87538:	00bfff84 	movi	r2,-2
   8753c:	2084703a 	and	r2,r4,r2
   87540:	9885883a 	add	r2,r19,r2
   87544:	1880ee26 	beq	r3,r2,87900 <_realloc_r+0x490>
   87548:	81bfff04 	addi	r6,r16,-4
   8754c:	00800904 	movi	r2,36
   87550:	1180b836 	bltu	r2,r6,87834 <_realloc_r+0x3c4>
   87554:	00c004c4 	movi	r3,19
   87558:	19809636 	bltu	r3,r6,877b4 <_realloc_r+0x344>
   8755c:	9005883a 	mov	r2,r18
   87560:	a807883a 	mov	r3,r21
   87564:	19000017 	ldw	r4,0(r3)
   87568:	11000015 	stw	r4,0(r2)
   8756c:	19000117 	ldw	r4,4(r3)
   87570:	11000115 	stw	r4,4(r2)
   87574:	18c00217 	ldw	r3,8(r3)
   87578:	10c00215 	stw	r3,8(r2)
   8757c:	a80b883a 	mov	r5,r21
   87580:	a009883a 	mov	r4,r20
   87584:	0084b040 	call	84b04 <_free_r>
   87588:	a009883a 	mov	r4,r20
   8758c:	008d8f80 	call	8d8f8 <__malloc_unlock>
   87590:	9005883a 	mov	r2,r18
   87594:	00001206 	br	875e0 <_realloc_r+0x170>
   87598:	00c00404 	movi	r3,16
   8759c:	1823883a 	mov	r17,r3
   875a0:	003fce06 	br	874dc <_realloc_r+0x6c>
   875a4:	a825883a 	mov	r18,r21
   875a8:	8445c83a 	sub	r2,r16,r17
   875ac:	00c003c4 	movi	r3,15
   875b0:	18802636 	bltu	r3,r2,8764c <_realloc_r+0x1dc>
   875b4:	99800117 	ldw	r6,4(r19)
   875b8:	9c07883a 	add	r3,r19,r16
   875bc:	3180004c 	andi	r6,r6,1
   875c0:	3420b03a 	or	r16,r6,r16
   875c4:	9c000115 	stw	r16,4(r19)
   875c8:	18800117 	ldw	r2,4(r3)
   875cc:	10800054 	ori	r2,r2,1
   875d0:	18800115 	stw	r2,4(r3)
   875d4:	a009883a 	mov	r4,r20
   875d8:	008d8f80 	call	8d8f8 <__malloc_unlock>
   875dc:	9005883a 	mov	r2,r18
   875e0:	dfc00917 	ldw	ra,36(sp)
   875e4:	df000817 	ldw	fp,32(sp)
   875e8:	ddc00717 	ldw	r23,28(sp)
   875ec:	dd800617 	ldw	r22,24(sp)
   875f0:	dd400517 	ldw	r21,20(sp)
   875f4:	dd000417 	ldw	r20,16(sp)
   875f8:	dcc00317 	ldw	r19,12(sp)
   875fc:	dc800217 	ldw	r18,8(sp)
   87600:	dc400117 	ldw	r17,4(sp)
   87604:	dc000017 	ldw	r16,0(sp)
   87608:	dec00a04 	addi	sp,sp,40
   8760c:	f800283a 	ret
   87610:	017fff04 	movi	r5,-4
   87614:	414a703a 	and	r5,r8,r5
   87618:	814d883a 	add	r6,r16,r5
   8761c:	30c01f16 	blt	r6,r3,8769c <_realloc_r+0x22c>
   87620:	20800317 	ldw	r2,12(r4)
   87624:	20c00217 	ldw	r3,8(r4)
   87628:	a825883a 	mov	r18,r21
   8762c:	3021883a 	mov	r16,r6
   87630:	18800315 	stw	r2,12(r3)
   87634:	10c00215 	stw	r3,8(r2)
   87638:	003fdb06 	br	875a8 <_realloc_r+0x138>
   8763c:	00800304 	movi	r2,12
   87640:	a0800015 	stw	r2,0(r20)
   87644:	0005883a 	mov	r2,zero
   87648:	003fe506 	br	875e0 <_realloc_r+0x170>
   8764c:	98c00117 	ldw	r3,4(r19)
   87650:	9c4b883a 	add	r5,r19,r17
   87654:	11000054 	ori	r4,r2,1
   87658:	18c0004c 	andi	r3,r3,1
   8765c:	1c62b03a 	or	r17,r3,r17
   87660:	9c400115 	stw	r17,4(r19)
   87664:	29000115 	stw	r4,4(r5)
   87668:	2885883a 	add	r2,r5,r2
   8766c:	10c00117 	ldw	r3,4(r2)
   87670:	29400204 	addi	r5,r5,8
   87674:	a009883a 	mov	r4,r20
   87678:	18c00054 	ori	r3,r3,1
   8767c:	10c00115 	stw	r3,4(r2)
   87680:	0084b040 	call	84b04 <_free_r>
   87684:	003fd306 	br	875d4 <_realloc_r+0x164>
   87688:	017fff04 	movi	r5,-4
   8768c:	414a703a 	and	r5,r8,r5
   87690:	89800404 	addi	r6,r17,16
   87694:	8151883a 	add	r8,r16,r5
   87698:	4180590e 	bge	r8,r6,87800 <_realloc_r+0x390>
   8769c:	1080004c 	andi	r2,r2,1
   876a0:	103f9e1e 	bne	r2,zero,8751c <_realloc_r+0xac>
   876a4:	adbffe17 	ldw	r22,-8(r21)
   876a8:	00bfff04 	movi	r2,-4
   876ac:	9dadc83a 	sub	r22,r19,r22
   876b0:	b1800117 	ldw	r6,4(r22)
   876b4:	3084703a 	and	r2,r6,r2
   876b8:	20002026 	beq	r4,zero,8773c <_realloc_r+0x2cc>
   876bc:	80af883a 	add	r23,r16,r2
   876c0:	b96f883a 	add	r23,r23,r5
   876c4:	21c05f26 	beq	r4,r7,87844 <_realloc_r+0x3d4>
   876c8:	b8c01c16 	blt	r23,r3,8773c <_realloc_r+0x2cc>
   876cc:	20800317 	ldw	r2,12(r4)
   876d0:	20c00217 	ldw	r3,8(r4)
   876d4:	81bfff04 	addi	r6,r16,-4
   876d8:	01000904 	movi	r4,36
   876dc:	18800315 	stw	r2,12(r3)
   876e0:	10c00215 	stw	r3,8(r2)
   876e4:	b0c00217 	ldw	r3,8(r22)
   876e8:	b0800317 	ldw	r2,12(r22)
   876ec:	b4800204 	addi	r18,r22,8
   876f0:	18800315 	stw	r2,12(r3)
   876f4:	10c00215 	stw	r3,8(r2)
   876f8:	21801b36 	bltu	r4,r6,87768 <_realloc_r+0x2f8>
   876fc:	008004c4 	movi	r2,19
   87700:	1180352e 	bgeu	r2,r6,877d8 <_realloc_r+0x368>
   87704:	a8800017 	ldw	r2,0(r21)
   87708:	b0800215 	stw	r2,8(r22)
   8770c:	a8800117 	ldw	r2,4(r21)
   87710:	b0800315 	stw	r2,12(r22)
   87714:	008006c4 	movi	r2,27
   87718:	11807f36 	bltu	r2,r6,87918 <_realloc_r+0x4a8>
   8771c:	b0800404 	addi	r2,r22,16
   87720:	ad400204 	addi	r21,r21,8
   87724:	00002d06 	br	877dc <_realloc_r+0x36c>
   87728:	adbffe17 	ldw	r22,-8(r21)
   8772c:	00bfff04 	movi	r2,-4
   87730:	9dadc83a 	sub	r22,r19,r22
   87734:	b1000117 	ldw	r4,4(r22)
   87738:	2084703a 	and	r2,r4,r2
   8773c:	b03f7726 	beq	r22,zero,8751c <_realloc_r+0xac>
   87740:	80af883a 	add	r23,r16,r2
   87744:	b8ff7516 	blt	r23,r3,8751c <_realloc_r+0xac>
   87748:	b0800317 	ldw	r2,12(r22)
   8774c:	b0c00217 	ldw	r3,8(r22)
   87750:	81bfff04 	addi	r6,r16,-4
   87754:	01000904 	movi	r4,36
   87758:	18800315 	stw	r2,12(r3)
   8775c:	10c00215 	stw	r3,8(r2)
   87760:	b4800204 	addi	r18,r22,8
   87764:	21bfe52e 	bgeu	r4,r6,876fc <_realloc_r+0x28c>
   87768:	a80b883a 	mov	r5,r21
   8776c:	9009883a 	mov	r4,r18
   87770:	00861340 	call	86134 <memmove>
   87774:	b821883a 	mov	r16,r23
   87778:	b027883a 	mov	r19,r22
   8777c:	003f8a06 	br	875a8 <_realloc_r+0x138>
   87780:	300b883a 	mov	r5,r6
   87784:	dfc00917 	ldw	ra,36(sp)
   87788:	df000817 	ldw	fp,32(sp)
   8778c:	ddc00717 	ldw	r23,28(sp)
   87790:	dd800617 	ldw	r22,24(sp)
   87794:	dd400517 	ldw	r21,20(sp)
   87798:	dd000417 	ldw	r20,16(sp)
   8779c:	dcc00317 	ldw	r19,12(sp)
   877a0:	dc800217 	ldw	r18,8(sp)
   877a4:	dc400117 	ldw	r17,4(sp)
   877a8:	dc000017 	ldw	r16,0(sp)
   877ac:	dec00a04 	addi	sp,sp,40
   877b0:	00856fc1 	jmpi	856fc <_malloc_r>
   877b4:	a8c00017 	ldw	r3,0(r21)
   877b8:	90c00015 	stw	r3,0(r18)
   877bc:	a8c00117 	ldw	r3,4(r21)
   877c0:	90c00115 	stw	r3,4(r18)
   877c4:	00c006c4 	movi	r3,27
   877c8:	19804536 	bltu	r3,r6,878e0 <_realloc_r+0x470>
   877cc:	90800204 	addi	r2,r18,8
   877d0:	a8c00204 	addi	r3,r21,8
   877d4:	003f6306 	br	87564 <_realloc_r+0xf4>
   877d8:	9005883a 	mov	r2,r18
   877dc:	a8c00017 	ldw	r3,0(r21)
   877e0:	b821883a 	mov	r16,r23
   877e4:	b027883a 	mov	r19,r22
   877e8:	10c00015 	stw	r3,0(r2)
   877ec:	a8c00117 	ldw	r3,4(r21)
   877f0:	10c00115 	stw	r3,4(r2)
   877f4:	a8c00217 	ldw	r3,8(r21)
   877f8:	10c00215 	stw	r3,8(r2)
   877fc:	003f6a06 	br	875a8 <_realloc_r+0x138>
   87800:	9c67883a 	add	r19,r19,r17
   87804:	4445c83a 	sub	r2,r8,r17
   87808:	e4c00215 	stw	r19,8(fp)
   8780c:	10800054 	ori	r2,r2,1
   87810:	98800115 	stw	r2,4(r19)
   87814:	a8bfff17 	ldw	r2,-4(r21)
   87818:	a009883a 	mov	r4,r20
   8781c:	1080004c 	andi	r2,r2,1
   87820:	1462b03a 	or	r17,r2,r17
   87824:	ac7fff15 	stw	r17,-4(r21)
   87828:	008d8f80 	call	8d8f8 <__malloc_unlock>
   8782c:	a805883a 	mov	r2,r21
   87830:	003f6b06 	br	875e0 <_realloc_r+0x170>
   87834:	a80b883a 	mov	r5,r21
   87838:	9009883a 	mov	r4,r18
   8783c:	00861340 	call	86134 <memmove>
   87840:	003f4e06 	br	8757c <_realloc_r+0x10c>
   87844:	89000404 	addi	r4,r17,16
   87848:	b93fbc16 	blt	r23,r4,8773c <_realloc_r+0x2cc>
   8784c:	b0800317 	ldw	r2,12(r22)
   87850:	b0c00217 	ldw	r3,8(r22)
   87854:	81bfff04 	addi	r6,r16,-4
   87858:	01000904 	movi	r4,36
   8785c:	18800315 	stw	r2,12(r3)
   87860:	10c00215 	stw	r3,8(r2)
   87864:	b4800204 	addi	r18,r22,8
   87868:	21804336 	bltu	r4,r6,87978 <_realloc_r+0x508>
   8786c:	008004c4 	movi	r2,19
   87870:	11803f2e 	bgeu	r2,r6,87970 <_realloc_r+0x500>
   87874:	a8800017 	ldw	r2,0(r21)
   87878:	b0800215 	stw	r2,8(r22)
   8787c:	a8800117 	ldw	r2,4(r21)
   87880:	b0800315 	stw	r2,12(r22)
   87884:	008006c4 	movi	r2,27
   87888:	11803f36 	bltu	r2,r6,87988 <_realloc_r+0x518>
   8788c:	b0800404 	addi	r2,r22,16
   87890:	ad400204 	addi	r21,r21,8
   87894:	a8c00017 	ldw	r3,0(r21)
   87898:	10c00015 	stw	r3,0(r2)
   8789c:	a8c00117 	ldw	r3,4(r21)
   878a0:	10c00115 	stw	r3,4(r2)
   878a4:	a8c00217 	ldw	r3,8(r21)
   878a8:	10c00215 	stw	r3,8(r2)
   878ac:	b447883a 	add	r3,r22,r17
   878b0:	bc45c83a 	sub	r2,r23,r17
   878b4:	e0c00215 	stw	r3,8(fp)
   878b8:	10800054 	ori	r2,r2,1
   878bc:	18800115 	stw	r2,4(r3)
   878c0:	b0800117 	ldw	r2,4(r22)
   878c4:	a009883a 	mov	r4,r20
   878c8:	1080004c 	andi	r2,r2,1
   878cc:	1462b03a 	or	r17,r2,r17
   878d0:	b4400115 	stw	r17,4(r22)
   878d4:	008d8f80 	call	8d8f8 <__malloc_unlock>
   878d8:	9005883a 	mov	r2,r18
   878dc:	003f4006 	br	875e0 <_realloc_r+0x170>
   878e0:	a8c00217 	ldw	r3,8(r21)
   878e4:	90c00215 	stw	r3,8(r18)
   878e8:	a8c00317 	ldw	r3,12(r21)
   878ec:	90c00315 	stw	r3,12(r18)
   878f0:	30801126 	beq	r6,r2,87938 <_realloc_r+0x4c8>
   878f4:	90800404 	addi	r2,r18,16
   878f8:	a8c00404 	addi	r3,r21,16
   878fc:	003f1906 	br	87564 <_realloc_r+0xf4>
   87900:	90ffff17 	ldw	r3,-4(r18)
   87904:	00bfff04 	movi	r2,-4
   87908:	a825883a 	mov	r18,r21
   8790c:	1884703a 	and	r2,r3,r2
   87910:	80a1883a 	add	r16,r16,r2
   87914:	003f2406 	br	875a8 <_realloc_r+0x138>
   87918:	a8800217 	ldw	r2,8(r21)
   8791c:	b0800415 	stw	r2,16(r22)
   87920:	a8800317 	ldw	r2,12(r21)
   87924:	b0800515 	stw	r2,20(r22)
   87928:	31000a26 	beq	r6,r4,87954 <_realloc_r+0x4e4>
   8792c:	b0800604 	addi	r2,r22,24
   87930:	ad400404 	addi	r21,r21,16
   87934:	003fa906 	br	877dc <_realloc_r+0x36c>
   87938:	a9000417 	ldw	r4,16(r21)
   8793c:	90800604 	addi	r2,r18,24
   87940:	a8c00604 	addi	r3,r21,24
   87944:	91000415 	stw	r4,16(r18)
   87948:	a9000517 	ldw	r4,20(r21)
   8794c:	91000515 	stw	r4,20(r18)
   87950:	003f0406 	br	87564 <_realloc_r+0xf4>
   87954:	a8c00417 	ldw	r3,16(r21)
   87958:	ad400604 	addi	r21,r21,24
   8795c:	b0800804 	addi	r2,r22,32
   87960:	b0c00615 	stw	r3,24(r22)
   87964:	a8ffff17 	ldw	r3,-4(r21)
   87968:	b0c00715 	stw	r3,28(r22)
   8796c:	003f9b06 	br	877dc <_realloc_r+0x36c>
   87970:	9005883a 	mov	r2,r18
   87974:	003fc706 	br	87894 <_realloc_r+0x424>
   87978:	a80b883a 	mov	r5,r21
   8797c:	9009883a 	mov	r4,r18
   87980:	00861340 	call	86134 <memmove>
   87984:	003fc906 	br	878ac <_realloc_r+0x43c>
   87988:	a8800217 	ldw	r2,8(r21)
   8798c:	b0800415 	stw	r2,16(r22)
   87990:	a8800317 	ldw	r2,12(r21)
   87994:	b0800515 	stw	r2,20(r22)
   87998:	31000726 	beq	r6,r4,879b8 <_realloc_r+0x548>
   8799c:	b0800604 	addi	r2,r22,24
   879a0:	ad400404 	addi	r21,r21,16
   879a4:	003fbb06 	br	87894 <_realloc_r+0x424>
   879a8:	a009883a 	mov	r4,r20
   879ac:	008d8f80 	call	8d8f8 <__malloc_unlock>
   879b0:	0005883a 	mov	r2,zero
   879b4:	003f0a06 	br	875e0 <_realloc_r+0x170>
   879b8:	a8c00417 	ldw	r3,16(r21)
   879bc:	ad400604 	addi	r21,r21,24
   879c0:	b0800804 	addi	r2,r22,32
   879c4:	b0c00615 	stw	r3,24(r22)
   879c8:	a8ffff17 	ldw	r3,-4(r21)
   879cc:	b0c00715 	stw	r3,28(r22)
   879d0:	003fb006 	br	87894 <_realloc_r+0x424>

000879d4 <__fpclassifyd>:
   879d4:	00a00034 	movhi	r2,32768
   879d8:	10bfffc4 	addi	r2,r2,-1
   879dc:	2884703a 	and	r2,r5,r2
   879e0:	10000726 	beq	r2,zero,87a00 <__fpclassifyd+0x2c>
   879e4:	00fffc34 	movhi	r3,65520
   879e8:	019ff834 	movhi	r6,32736
   879ec:	28c7883a 	add	r3,r5,r3
   879f0:	31bfffc4 	addi	r6,r6,-1
   879f4:	30c00536 	bltu	r6,r3,87a0c <__fpclassifyd+0x38>
   879f8:	00800104 	movi	r2,4
   879fc:	f800283a 	ret
   87a00:	2000021e 	bne	r4,zero,87a0c <__fpclassifyd+0x38>
   87a04:	00800084 	movi	r2,2
   87a08:	f800283a 	ret
   87a0c:	00dffc34 	movhi	r3,32752
   87a10:	019ff834 	movhi	r6,32736
   87a14:	28cb883a 	add	r5,r5,r3
   87a18:	31bfffc4 	addi	r6,r6,-1
   87a1c:	317ff62e 	bgeu	r6,r5,879f8 <__fpclassifyd+0x24>
   87a20:	01400434 	movhi	r5,16
   87a24:	297fffc4 	addi	r5,r5,-1
   87a28:	28800236 	bltu	r5,r2,87a34 <__fpclassifyd+0x60>
   87a2c:	008000c4 	movi	r2,3
   87a30:	f800283a 	ret
   87a34:	10c00226 	beq	r2,r3,87a40 <__fpclassifyd+0x6c>
   87a38:	0005883a 	mov	r2,zero
   87a3c:	f800283a 	ret
   87a40:	2005003a 	cmpeq	r2,r4,zero
   87a44:	f800283a 	ret

00087a48 <_sbrk_r>:
   87a48:	defffd04 	addi	sp,sp,-12
   87a4c:	dc000015 	stw	r16,0(sp)
   87a50:	04000134 	movhi	r16,4
   87a54:	dc400115 	stw	r17,4(sp)
   87a58:	84078e04 	addi	r16,r16,7736
   87a5c:	2023883a 	mov	r17,r4
   87a60:	2809883a 	mov	r4,r5
   87a64:	dfc00215 	stw	ra,8(sp)
   87a68:	80000015 	stw	zero,0(r16)
   87a6c:	008dae00 	call	8dae0 <sbrk>
   87a70:	00ffffc4 	movi	r3,-1
   87a74:	10c00526 	beq	r2,r3,87a8c <_sbrk_r+0x44>
   87a78:	dfc00217 	ldw	ra,8(sp)
   87a7c:	dc400117 	ldw	r17,4(sp)
   87a80:	dc000017 	ldw	r16,0(sp)
   87a84:	dec00304 	addi	sp,sp,12
   87a88:	f800283a 	ret
   87a8c:	80c00017 	ldw	r3,0(r16)
   87a90:	183ff926 	beq	r3,zero,87a78 <_sbrk_r+0x30>
   87a94:	88c00015 	stw	r3,0(r17)
   87a98:	003ff706 	br	87a78 <_sbrk_r+0x30>

00087a9c <__sread>:
   87a9c:	defffe04 	addi	sp,sp,-8
   87aa0:	dc000015 	stw	r16,0(sp)
   87aa4:	2821883a 	mov	r16,r5
   87aa8:	2940038f 	ldh	r5,14(r5)
   87aac:	dfc00115 	stw	ra,4(sp)
   87ab0:	00899580 	call	89958 <_read_r>
   87ab4:	10000716 	blt	r2,zero,87ad4 <__sread+0x38>
   87ab8:	80c01417 	ldw	r3,80(r16)
   87abc:	1887883a 	add	r3,r3,r2
   87ac0:	80c01415 	stw	r3,80(r16)
   87ac4:	dfc00117 	ldw	ra,4(sp)
   87ac8:	dc000017 	ldw	r16,0(sp)
   87acc:	dec00204 	addi	sp,sp,8
   87ad0:	f800283a 	ret
   87ad4:	80c0030b 	ldhu	r3,12(r16)
   87ad8:	18fbffcc 	andi	r3,r3,61439
   87adc:	80c0030d 	sth	r3,12(r16)
   87ae0:	dfc00117 	ldw	ra,4(sp)
   87ae4:	dc000017 	ldw	r16,0(sp)
   87ae8:	dec00204 	addi	sp,sp,8
   87aec:	f800283a 	ret

00087af0 <__seofread>:
   87af0:	0005883a 	mov	r2,zero
   87af4:	f800283a 	ret

00087af8 <__swrite>:
   87af8:	2880030b 	ldhu	r2,12(r5)
   87afc:	defffb04 	addi	sp,sp,-20
   87b00:	dcc00315 	stw	r19,12(sp)
   87b04:	dc800215 	stw	r18,8(sp)
   87b08:	dc400115 	stw	r17,4(sp)
   87b0c:	dc000015 	stw	r16,0(sp)
   87b10:	dfc00415 	stw	ra,16(sp)
   87b14:	10c0400c 	andi	r3,r2,256
   87b18:	2821883a 	mov	r16,r5
   87b1c:	2023883a 	mov	r17,r4
   87b20:	3025883a 	mov	r18,r6
   87b24:	3827883a 	mov	r19,r7
   87b28:	18000526 	beq	r3,zero,87b40 <__swrite+0x48>
   87b2c:	2940038f 	ldh	r5,14(r5)
   87b30:	01c00084 	movi	r7,2
   87b34:	000d883a 	mov	r6,zero
   87b38:	00898f80 	call	898f8 <_lseek_r>
   87b3c:	8080030b 	ldhu	r2,12(r16)
   87b40:	8140038f 	ldh	r5,14(r16)
   87b44:	10bbffcc 	andi	r2,r2,61439
   87b48:	980f883a 	mov	r7,r19
   87b4c:	900d883a 	mov	r6,r18
   87b50:	8809883a 	mov	r4,r17
   87b54:	8080030d 	sth	r2,12(r16)
   87b58:	dfc00417 	ldw	ra,16(sp)
   87b5c:	dcc00317 	ldw	r19,12(sp)
   87b60:	dc800217 	ldw	r18,8(sp)
   87b64:	dc400117 	ldw	r17,4(sp)
   87b68:	dc000017 	ldw	r16,0(sp)
   87b6c:	dec00504 	addi	sp,sp,20
   87b70:	00893ac1 	jmpi	893ac <_write_r>

00087b74 <__sseek>:
   87b74:	defffe04 	addi	sp,sp,-8
   87b78:	dc000015 	stw	r16,0(sp)
   87b7c:	2821883a 	mov	r16,r5
   87b80:	2940038f 	ldh	r5,14(r5)
   87b84:	dfc00115 	stw	ra,4(sp)
   87b88:	00898f80 	call	898f8 <_lseek_r>
   87b8c:	00ffffc4 	movi	r3,-1
   87b90:	10c00826 	beq	r2,r3,87bb4 <__sseek+0x40>
   87b94:	80c0030b 	ldhu	r3,12(r16)
   87b98:	80801415 	stw	r2,80(r16)
   87b9c:	18c40014 	ori	r3,r3,4096
   87ba0:	80c0030d 	sth	r3,12(r16)
   87ba4:	dfc00117 	ldw	ra,4(sp)
   87ba8:	dc000017 	ldw	r16,0(sp)
   87bac:	dec00204 	addi	sp,sp,8
   87bb0:	f800283a 	ret
   87bb4:	80c0030b 	ldhu	r3,12(r16)
   87bb8:	18fbffcc 	andi	r3,r3,61439
   87bbc:	80c0030d 	sth	r3,12(r16)
   87bc0:	dfc00117 	ldw	ra,4(sp)
   87bc4:	dc000017 	ldw	r16,0(sp)
   87bc8:	dec00204 	addi	sp,sp,8
   87bcc:	f800283a 	ret

00087bd0 <__sclose>:
   87bd0:	2940038f 	ldh	r5,14(r5)
   87bd4:	008940c1 	jmpi	8940c <_close_r>

00087bd8 <strcmp>:
   87bd8:	2144b03a 	or	r2,r4,r5
   87bdc:	108000cc 	andi	r2,r2,3
   87be0:	1000171e 	bne	r2,zero,87c40 <strcmp+0x68>
   87be4:	20800017 	ldw	r2,0(r4)
   87be8:	28c00017 	ldw	r3,0(r5)
   87bec:	10c0141e 	bne	r2,r3,87c40 <strcmp+0x68>
   87bf0:	027fbff4 	movhi	r9,65279
   87bf4:	4a7fbfc4 	addi	r9,r9,-257
   87bf8:	0086303a 	nor	r3,zero,r2
   87bfc:	02202074 	movhi	r8,32897
   87c00:	1245883a 	add	r2,r2,r9
   87c04:	42202004 	addi	r8,r8,-32640
   87c08:	10c4703a 	and	r2,r2,r3
   87c0c:	1204703a 	and	r2,r2,r8
   87c10:	10000226 	beq	r2,zero,87c1c <strcmp+0x44>
   87c14:	00002306 	br	87ca4 <strcmp+0xcc>
   87c18:	1000221e 	bne	r2,zero,87ca4 <strcmp+0xcc>
   87c1c:	21000104 	addi	r4,r4,4
   87c20:	20c00017 	ldw	r3,0(r4)
   87c24:	29400104 	addi	r5,r5,4
   87c28:	29800017 	ldw	r6,0(r5)
   87c2c:	1a4f883a 	add	r7,r3,r9
   87c30:	00c4303a 	nor	r2,zero,r3
   87c34:	3884703a 	and	r2,r7,r2
   87c38:	1204703a 	and	r2,r2,r8
   87c3c:	19bff626 	beq	r3,r6,87c18 <strcmp+0x40>
   87c40:	20800003 	ldbu	r2,0(r4)
   87c44:	10c03fcc 	andi	r3,r2,255
   87c48:	18c0201c 	xori	r3,r3,128
   87c4c:	18ffe004 	addi	r3,r3,-128
   87c50:	18000c26 	beq	r3,zero,87c84 <strcmp+0xac>
   87c54:	29800007 	ldb	r6,0(r5)
   87c58:	19800326 	beq	r3,r6,87c68 <strcmp+0x90>
   87c5c:	00001306 	br	87cac <strcmp+0xd4>
   87c60:	29800007 	ldb	r6,0(r5)
   87c64:	11800b1e 	bne	r2,r6,87c94 <strcmp+0xbc>
   87c68:	21000044 	addi	r4,r4,1
   87c6c:	20c00003 	ldbu	r3,0(r4)
   87c70:	29400044 	addi	r5,r5,1
   87c74:	18803fcc 	andi	r2,r3,255
   87c78:	1080201c 	xori	r2,r2,128
   87c7c:	10bfe004 	addi	r2,r2,-128
   87c80:	103ff71e 	bne	r2,zero,87c60 <strcmp+0x88>
   87c84:	0007883a 	mov	r3,zero
   87c88:	28800003 	ldbu	r2,0(r5)
   87c8c:	1885c83a 	sub	r2,r3,r2
   87c90:	f800283a 	ret
   87c94:	28800003 	ldbu	r2,0(r5)
   87c98:	18c03fcc 	andi	r3,r3,255
   87c9c:	1885c83a 	sub	r2,r3,r2
   87ca0:	f800283a 	ret
   87ca4:	0005883a 	mov	r2,zero
   87ca8:	f800283a 	ret
   87cac:	10c03fcc 	andi	r3,r2,255
   87cb0:	003ff506 	br	87c88 <strcmp+0xb0>

00087cb4 <__sprint_r.part.0>:
   87cb4:	28801917 	ldw	r2,100(r5)
   87cb8:	defff604 	addi	sp,sp,-40
   87cbc:	dd400515 	stw	r21,20(sp)
   87cc0:	dfc00915 	stw	ra,36(sp)
   87cc4:	df000815 	stw	fp,32(sp)
   87cc8:	ddc00715 	stw	r23,28(sp)
   87ccc:	dd800615 	stw	r22,24(sp)
   87cd0:	dd000415 	stw	r20,16(sp)
   87cd4:	dcc00315 	stw	r19,12(sp)
   87cd8:	dc800215 	stw	r18,8(sp)
   87cdc:	dc400115 	stw	r17,4(sp)
   87ce0:	dc000015 	stw	r16,0(sp)
   87ce4:	1088000c 	andi	r2,r2,8192
   87ce8:	302b883a 	mov	r21,r6
   87cec:	10002e26 	beq	r2,zero,87da8 <__sprint_r.part.0+0xf4>
   87cf0:	30800217 	ldw	r2,8(r6)
   87cf4:	35800017 	ldw	r22,0(r6)
   87cf8:	10002926 	beq	r2,zero,87da0 <__sprint_r.part.0+0xec>
   87cfc:	2827883a 	mov	r19,r5
   87d00:	2029883a 	mov	r20,r4
   87d04:	b5c00104 	addi	r23,r22,4
   87d08:	04bfffc4 	movi	r18,-1
   87d0c:	bc400017 	ldw	r17,0(r23)
   87d10:	b4000017 	ldw	r16,0(r22)
   87d14:	0039883a 	mov	fp,zero
   87d18:	8822d0ba 	srli	r17,r17,2
   87d1c:	8800031e 	bne	r17,zero,87d2c <__sprint_r.part.0+0x78>
   87d20:	00001806 	br	87d84 <__sprint_r.part.0+0xd0>
   87d24:	84000104 	addi	r16,r16,4
   87d28:	8f001526 	beq	r17,fp,87d80 <__sprint_r.part.0+0xcc>
   87d2c:	81400017 	ldw	r5,0(r16)
   87d30:	980d883a 	mov	r6,r19
   87d34:	a009883a 	mov	r4,r20
   87d38:	00897a40 	call	897a4 <_fputwc_r>
   87d3c:	e7000044 	addi	fp,fp,1
   87d40:	14bff81e 	bne	r2,r18,87d24 <__sprint_r.part.0+0x70>
   87d44:	9005883a 	mov	r2,r18
   87d48:	a8000215 	stw	zero,8(r21)
   87d4c:	a8000115 	stw	zero,4(r21)
   87d50:	dfc00917 	ldw	ra,36(sp)
   87d54:	df000817 	ldw	fp,32(sp)
   87d58:	ddc00717 	ldw	r23,28(sp)
   87d5c:	dd800617 	ldw	r22,24(sp)
   87d60:	dd400517 	ldw	r21,20(sp)
   87d64:	dd000417 	ldw	r20,16(sp)
   87d68:	dcc00317 	ldw	r19,12(sp)
   87d6c:	dc800217 	ldw	r18,8(sp)
   87d70:	dc400117 	ldw	r17,4(sp)
   87d74:	dc000017 	ldw	r16,0(sp)
   87d78:	dec00a04 	addi	sp,sp,40
   87d7c:	f800283a 	ret
   87d80:	a8800217 	ldw	r2,8(r21)
   87d84:	8c63883a 	add	r17,r17,r17
   87d88:	8c63883a 	add	r17,r17,r17
   87d8c:	1445c83a 	sub	r2,r2,r17
   87d90:	a8800215 	stw	r2,8(r21)
   87d94:	b5800204 	addi	r22,r22,8
   87d98:	bdc00204 	addi	r23,r23,8
   87d9c:	103fdb1e 	bne	r2,zero,87d0c <__sprint_r.part.0+0x58>
   87da0:	0005883a 	mov	r2,zero
   87da4:	003fe806 	br	87d48 <__sprint_r.part.0+0x94>
   87da8:	0084e140 	call	84e14 <__sfvwrite_r>
   87dac:	003fe606 	br	87d48 <__sprint_r.part.0+0x94>

00087db0 <__sprint_r>:
   87db0:	30c00217 	ldw	r3,8(r6)
   87db4:	18000126 	beq	r3,zero,87dbc <__sprint_r+0xc>
   87db8:	0087cb41 	jmpi	87cb4 <__sprint_r.part.0>
   87dbc:	30000115 	stw	zero,4(r6)
   87dc0:	0005883a 	mov	r2,zero
   87dc4:	f800283a 	ret

00087dc8 <___vfiprintf_internal_r>:
   87dc8:	deffca04 	addi	sp,sp,-216
   87dcc:	dd403115 	stw	r21,196(sp)
   87dd0:	dfc03515 	stw	ra,212(sp)
   87dd4:	df003415 	stw	fp,208(sp)
   87dd8:	ddc03315 	stw	r23,204(sp)
   87ddc:	dd803215 	stw	r22,200(sp)
   87de0:	dd003015 	stw	r20,192(sp)
   87de4:	dcc02f15 	stw	r19,188(sp)
   87de8:	dc802e15 	stw	r18,184(sp)
   87dec:	dc402d15 	stw	r17,180(sp)
   87df0:	dc002c15 	stw	r16,176(sp)
   87df4:	d9002115 	stw	r4,132(sp)
   87df8:	d9402015 	stw	r5,128(sp)
   87dfc:	d9c02215 	stw	r7,136(sp)
   87e00:	302b883a 	mov	r21,r6
   87e04:	20000226 	beq	r4,zero,87e10 <___vfiprintf_internal_r+0x48>
   87e08:	20800e17 	ldw	r2,56(r4)
   87e0c:	1000cf26 	beq	r2,zero,8814c <___vfiprintf_internal_r+0x384>
   87e10:	d8c02017 	ldw	r3,128(sp)
   87e14:	1880030b 	ldhu	r2,12(r3)
   87e18:	10c8000c 	andi	r3,r2,8192
   87e1c:	1800071e 	bne	r3,zero,87e3c <___vfiprintf_internal_r+0x74>
   87e20:	d9402017 	ldw	r5,128(sp)
   87e24:	00f7ffc4 	movi	r3,-8193
   87e28:	10880014 	ori	r2,r2,8192
   87e2c:	29001917 	ldw	r4,100(r5)
   87e30:	2880030d 	sth	r2,12(r5)
   87e34:	20c6703a 	and	r3,r4,r3
   87e38:	28c01915 	stw	r3,100(r5)
   87e3c:	10c0020c 	andi	r3,r2,8
   87e40:	1800a526 	beq	r3,zero,880d8 <___vfiprintf_internal_r+0x310>
   87e44:	d9002017 	ldw	r4,128(sp)
   87e48:	20c00417 	ldw	r3,16(r4)
   87e4c:	1800a226 	beq	r3,zero,880d8 <___vfiprintf_internal_r+0x310>
   87e50:	1080068c 	andi	r2,r2,26
   87e54:	00c00284 	movi	r3,10
   87e58:	10c0a826 	beq	r2,r3,880fc <___vfiprintf_internal_r+0x334>
   87e5c:	d9001a04 	addi	r4,sp,104
   87e60:	d94019c4 	addi	r5,sp,103
   87e64:	04800134 	movhi	r18,4
   87e68:	2145c83a 	sub	r2,r4,r5
   87e6c:	94807704 	addi	r18,r18,476
   87e70:	d9001e15 	stw	r4,120(sp)
   87e74:	d9401f15 	stw	r5,124(sp)
   87e78:	dec01a15 	stw	sp,104(sp)
   87e7c:	d8001c15 	stw	zero,112(sp)
   87e80:	d8001b15 	stw	zero,108(sp)
   87e84:	d811883a 	mov	r8,sp
   87e88:	d8002615 	stw	zero,152(sp)
   87e8c:	d8002415 	stw	zero,144(sp)
   87e90:	d8802815 	stw	r2,160(sp)
   87e94:	a82d883a 	mov	r22,r21
   87e98:	b0800007 	ldb	r2,0(r22)
   87e9c:	10040d26 	beq	r2,zero,88ed4 <___vfiprintf_internal_r+0x110c>
   87ea0:	00c00944 	movi	r3,37
   87ea4:	b029883a 	mov	r20,r22
   87ea8:	10c0021e 	bne	r2,r3,87eb4 <___vfiprintf_internal_r+0xec>
   87eac:	00001606 	br	87f08 <___vfiprintf_internal_r+0x140>
   87eb0:	10c00326 	beq	r2,r3,87ec0 <___vfiprintf_internal_r+0xf8>
   87eb4:	a5000044 	addi	r20,r20,1
   87eb8:	a0800007 	ldb	r2,0(r20)
   87ebc:	103ffc1e 	bne	r2,zero,87eb0 <___vfiprintf_internal_r+0xe8>
   87ec0:	a5a1c83a 	sub	r16,r20,r22
   87ec4:	80001026 	beq	r16,zero,87f08 <___vfiprintf_internal_r+0x140>
   87ec8:	d8c01c17 	ldw	r3,112(sp)
   87ecc:	d8801b17 	ldw	r2,108(sp)
   87ed0:	45800015 	stw	r22,0(r8)
   87ed4:	80c7883a 	add	r3,r16,r3
   87ed8:	10800044 	addi	r2,r2,1
   87edc:	44000115 	stw	r16,4(r8)
   87ee0:	d8c01c15 	stw	r3,112(sp)
   87ee4:	d8801b15 	stw	r2,108(sp)
   87ee8:	010001c4 	movi	r4,7
   87eec:	2080750e 	bge	r4,r2,880c4 <___vfiprintf_internal_r+0x2fc>
   87ef0:	1803951e 	bne	r3,zero,88d48 <___vfiprintf_internal_r+0xf80>
   87ef4:	d8c02417 	ldw	r3,144(sp)
   87ef8:	d8001b15 	stw	zero,108(sp)
   87efc:	d811883a 	mov	r8,sp
   87f00:	1c07883a 	add	r3,r3,r16
   87f04:	d8c02415 	stw	r3,144(sp)
   87f08:	a0800007 	ldb	r2,0(r20)
   87f0c:	1002e026 	beq	r2,zero,88a90 <___vfiprintf_internal_r+0xcc8>
   87f10:	a5800044 	addi	r22,r20,1
   87f14:	a0c00047 	ldb	r3,1(r20)
   87f18:	d8001d85 	stb	zero,118(sp)
   87f1c:	0027883a 	mov	r19,zero
   87f20:	d8002305 	stb	zero,140(sp)
   87f24:	043fffc4 	movi	r16,-1
   87f28:	d8002515 	stw	zero,148(sp)
   87f2c:	0023883a 	mov	r17,zero
   87f30:	05001604 	movi	r20,88
   87f34:	05400244 	movi	r21,9
   87f38:	402f883a 	mov	r23,r8
   87f3c:	b5800044 	addi	r22,r22,1
   87f40:	18bff804 	addi	r2,r3,-32
   87f44:	a0827736 	bltu	r20,r2,88924 <___vfiprintf_internal_r+0xb5c>
   87f48:	100490ba 	slli	r2,r2,2
   87f4c:	01000234 	movhi	r4,8
   87f50:	211fd804 	addi	r4,r4,32608
   87f54:	1105883a 	add	r2,r2,r4
   87f58:	10800017 	ldw	r2,0(r2)
   87f5c:	1000683a 	jmp	r2
   87f60:	00088624 	muli	zero,zero,8728
   87f64:	00088924 	muli	zero,zero,8740
   87f68:	00088924 	muli	zero,zero,8740
   87f6c:	00088640 	call	8864 <__alt_mem_onchip_memory2_0-0x3779c>
   87f70:	00088924 	muli	zero,zero,8740
   87f74:	00088924 	muli	zero,zero,8740
   87f78:	00088924 	muli	zero,zero,8740
   87f7c:	00088924 	muli	zero,zero,8740
   87f80:	00088924 	muli	zero,zero,8740
   87f84:	00088924 	muli	zero,zero,8740
   87f88:	00088848 	cmpgei	zero,zero,8737
   87f8c:	0008886c 	andhi	zero,zero,8737
   87f90:	00088924 	muli	zero,zero,8740
   87f94:	00088164 	muli	zero,zero,8709
   87f98:	00088880 	call	8888 <__alt_mem_onchip_memory2_0-0x37778>
   87f9c:	00088924 	muli	zero,zero,8740
   87fa0:	0008864c 	andi	zero,zero,8729
   87fa4:	00088658 	cmpnei	zero,zero,8729
   87fa8:	00088658 	cmpnei	zero,zero,8729
   87fac:	00088658 	cmpnei	zero,zero,8729
   87fb0:	00088658 	cmpnei	zero,zero,8729
   87fb4:	00088658 	cmpnei	zero,zero,8729
   87fb8:	00088658 	cmpnei	zero,zero,8729
   87fbc:	00088658 	cmpnei	zero,zero,8729
   87fc0:	00088658 	cmpnei	zero,zero,8729
   87fc4:	00088658 	cmpnei	zero,zero,8729
   87fc8:	00088924 	muli	zero,zero,8740
   87fcc:	00088924 	muli	zero,zero,8740
   87fd0:	00088924 	muli	zero,zero,8740
   87fd4:	00088924 	muli	zero,zero,8740
   87fd8:	00088924 	muli	zero,zero,8740
   87fdc:	00088924 	muli	zero,zero,8740
   87fe0:	00088924 	muli	zero,zero,8740
   87fe4:	00088924 	muli	zero,zero,8740
   87fe8:	00088924 	muli	zero,zero,8740
   87fec:	00088924 	muli	zero,zero,8740
   87ff0:	00088698 	cmpnei	zero,zero,8730
   87ff4:	00088924 	muli	zero,zero,8740
   87ff8:	00088924 	muli	zero,zero,8740
   87ffc:	00088924 	muli	zero,zero,8740
   88000:	00088924 	muli	zero,zero,8740
   88004:	00088924 	muli	zero,zero,8740
   88008:	00088924 	muli	zero,zero,8740
   8800c:	00088924 	muli	zero,zero,8740
   88010:	00088924 	muli	zero,zero,8740
   88014:	00088924 	muli	zero,zero,8740
   88018:	00088924 	muli	zero,zero,8740
   8801c:	000886d4 	movui	zero,8731
   88020:	00088924 	muli	zero,zero,8740
   88024:	00088924 	muli	zero,zero,8740
   88028:	00088924 	muli	zero,zero,8740
   8802c:	00088924 	muli	zero,zero,8740
   88030:	00088924 	muli	zero,zero,8740
   88034:	00088730 	cmpltui	zero,zero,8732
   88038:	00088924 	muli	zero,zero,8740
   8803c:	00088924 	muli	zero,zero,8740
   88040:	000887a4 	muli	zero,zero,8734
   88044:	00088924 	muli	zero,zero,8740
   88048:	00088924 	muli	zero,zero,8740
   8804c:	00088924 	muli	zero,zero,8740
   88050:	00088924 	muli	zero,zero,8740
   88054:	00088924 	muli	zero,zero,8740
   88058:	00088924 	muli	zero,zero,8740
   8805c:	00088924 	muli	zero,zero,8740
   88060:	00088924 	muli	zero,zero,8740
   88064:	00088924 	muli	zero,zero,8740
   88068:	00088924 	muli	zero,zero,8740
   8806c:	0008854c 	andi	zero,zero,8725
   88070:	0008857c 	xorhi	zero,zero,8725
   88074:	00088924 	muli	zero,zero,8740
   88078:	00088924 	muli	zero,zero,8740
   8807c:	00088924 	muli	zero,zero,8740
   88080:	000888cc 	andi	zero,zero,8739
   88084:	0008857c 	xorhi	zero,zero,8725
   88088:	00088924 	muli	zero,zero,8740
   8808c:	00088924 	muli	zero,zero,8740
   88090:	00088424 	muli	zero,zero,8720
   88094:	00088924 	muli	zero,zero,8740
   88098:	00088438 	rdprs	zero,zero,8720
   8809c:	00088470 	cmpltui	zero,zero,8721
   880a0:	00088170 	cmpltui	zero,zero,8709
   880a4:	00088418 	cmpnei	zero,zero,8720
   880a8:	00088924 	muli	zero,zero,8740
   880ac:	000887e4 	muli	zero,zero,8735
   880b0:	00088924 	muli	zero,zero,8740
   880b4:	00088830 	cmpltui	zero,zero,8736
   880b8:	00088924 	muli	zero,zero,8740
   880bc:	00088924 	muli	zero,zero,8740
   880c0:	000884f4 	movhi	zero,8723
   880c4:	42000204 	addi	r8,r8,8
   880c8:	d8c02417 	ldw	r3,144(sp)
   880cc:	1c07883a 	add	r3,r3,r16
   880d0:	d8c02415 	stw	r3,144(sp)
   880d4:	003f8c06 	br	87f08 <___vfiprintf_internal_r+0x140>
   880d8:	d9402017 	ldw	r5,128(sp)
   880dc:	d9002117 	ldw	r4,132(sp)
   880e0:	00829840 	call	82984 <__swsetup_r>
   880e4:	1003c11e 	bne	r2,zero,88fec <___vfiprintf_internal_r+0x1224>
   880e8:	d9402017 	ldw	r5,128(sp)
   880ec:	00c00284 	movi	r3,10
   880f0:	2880030b 	ldhu	r2,12(r5)
   880f4:	1080068c 	andi	r2,r2,26
   880f8:	10ff581e 	bne	r2,r3,87e5c <___vfiprintf_internal_r+0x94>
   880fc:	d8c02017 	ldw	r3,128(sp)
   88100:	1880038f 	ldh	r2,14(r3)
   88104:	103f5516 	blt	r2,zero,87e5c <___vfiprintf_internal_r+0x94>
   88108:	d9c02217 	ldw	r7,136(sp)
   8810c:	d9002117 	ldw	r4,132(sp)
   88110:	a80d883a 	mov	r6,r21
   88114:	180b883a 	mov	r5,r3
   88118:	00892f00 	call	892f0 <__sbprintf>
   8811c:	dfc03517 	ldw	ra,212(sp)
   88120:	df003417 	ldw	fp,208(sp)
   88124:	ddc03317 	ldw	r23,204(sp)
   88128:	dd803217 	ldw	r22,200(sp)
   8812c:	dd403117 	ldw	r21,196(sp)
   88130:	dd003017 	ldw	r20,192(sp)
   88134:	dcc02f17 	ldw	r19,188(sp)
   88138:	dc802e17 	ldw	r18,184(sp)
   8813c:	dc402d17 	ldw	r17,180(sp)
   88140:	dc002c17 	ldw	r16,176(sp)
   88144:	dec03604 	addi	sp,sp,216
   88148:	f800283a 	ret
   8814c:	00849900 	call	84990 <__sinit>
   88150:	003f2f06 	br	87e10 <___vfiprintf_internal_r+0x48>
   88154:	d8c02517 	ldw	r3,148(sp)
   88158:	d8802215 	stw	r2,136(sp)
   8815c:	00c7c83a 	sub	r3,zero,r3
   88160:	d8c02515 	stw	r3,148(sp)
   88164:	8c400114 	ori	r17,r17,4
   88168:	b0c00007 	ldb	r3,0(r22)
   8816c:	003f7306 	br	87f3c <___vfiprintf_internal_r+0x174>
   88170:	00800c04 	movi	r2,48
   88174:	d9402217 	ldw	r5,136(sp)
   88178:	d8801d05 	stb	r2,116(sp)
   8817c:	00801e04 	movi	r2,120
   88180:	d8801d45 	stb	r2,117(sp)
   88184:	d8001d85 	stb	zero,118(sp)
   88188:	b811883a 	mov	r8,r23
   8818c:	28c00104 	addi	r3,r5,4
   88190:	2cc00017 	ldw	r19,0(r5)
   88194:	0029883a 	mov	r20,zero
   88198:	88800094 	ori	r2,r17,2
   8819c:	80032516 	blt	r16,zero,88e34 <___vfiprintf_internal_r+0x106c>
   881a0:	00bfdfc4 	movi	r2,-129
   881a4:	88a2703a 	and	r17,r17,r2
   881a8:	d8c02215 	stw	r3,136(sp)
   881ac:	8c400094 	ori	r17,r17,2
   881b0:	98032a1e 	bne	r19,zero,88e5c <___vfiprintf_internal_r+0x1094>
   881b4:	00800134 	movhi	r2,4
   881b8:	10801604 	addi	r2,r2,88
   881bc:	d8802615 	stw	r2,152(sp)
   881c0:	002b883a 	mov	r21,zero
   881c4:	8001741e 	bne	r16,zero,88798 <___vfiprintf_internal_r+0x9d0>
   881c8:	0021883a 	mov	r16,zero
   881cc:	0029883a 	mov	r20,zero
   881d0:	ddc01a04 	addi	r23,sp,104
   881d4:	8027883a 	mov	r19,r16
   881d8:	8500010e 	bge	r16,r20,881e0 <___vfiprintf_internal_r+0x418>
   881dc:	a027883a 	mov	r19,r20
   881e0:	ad403fcc 	andi	r21,r21,255
   881e4:	ad40201c 	xori	r21,r21,128
   881e8:	ad7fe004 	addi	r21,r21,-128
   881ec:	a8000126 	beq	r21,zero,881f4 <___vfiprintf_internal_r+0x42c>
   881f0:	9cc00044 	addi	r19,r19,1
   881f4:	89c0008c 	andi	r7,r17,2
   881f8:	38000126 	beq	r7,zero,88200 <___vfiprintf_internal_r+0x438>
   881fc:	9cc00084 	addi	r19,r19,2
   88200:	88c0210c 	andi	r3,r17,132
   88204:	1801dd1e 	bne	r3,zero,8897c <___vfiprintf_internal_r+0xbb4>
   88208:	d9402517 	ldw	r5,148(sp)
   8820c:	2cebc83a 	sub	r21,r5,r19
   88210:	0541da0e 	bge	zero,r21,8897c <___vfiprintf_internal_r+0xbb4>
   88214:	07000404 	movi	fp,16
   88218:	d8801c17 	ldw	r2,112(sp)
   8821c:	e543be0e 	bge	fp,r21,89118 <___vfiprintf_internal_r+0x1350>
   88220:	01400134 	movhi	r5,4
   88224:	29407b04 	addi	r5,r5,492
   88228:	dc002715 	stw	r16,156(sp)
   8822c:	d9801b17 	ldw	r6,108(sp)
   88230:	a821883a 	mov	r16,r21
   88234:	d9402315 	stw	r5,140(sp)
   88238:	028001c4 	movi	r10,7
   8823c:	d9c02915 	stw	r7,164(sp)
   88240:	182b883a 	mov	r21,r3
   88244:	00000506 	br	8825c <___vfiprintf_internal_r+0x494>
   88248:	31000084 	addi	r4,r6,2
   8824c:	42000204 	addi	r8,r8,8
   88250:	180d883a 	mov	r6,r3
   88254:	843ffc04 	addi	r16,r16,-16
   88258:	e4000f0e 	bge	fp,r16,88298 <___vfiprintf_internal_r+0x4d0>
   8825c:	01000134 	movhi	r4,4
   88260:	10800404 	addi	r2,r2,16
   88264:	30c00044 	addi	r3,r6,1
   88268:	21007b04 	addi	r4,r4,492
   8826c:	41000015 	stw	r4,0(r8)
   88270:	47000115 	stw	fp,4(r8)
   88274:	d8801c15 	stw	r2,112(sp)
   88278:	d8c01b15 	stw	r3,108(sp)
   8827c:	50fff20e 	bge	r10,r3,88248 <___vfiprintf_internal_r+0x480>
   88280:	1001b21e 	bne	r2,zero,8894c <___vfiprintf_internal_r+0xb84>
   88284:	843ffc04 	addi	r16,r16,-16
   88288:	000d883a 	mov	r6,zero
   8828c:	01000044 	movi	r4,1
   88290:	d811883a 	mov	r8,sp
   88294:	e43ff116 	blt	fp,r16,8825c <___vfiprintf_internal_r+0x494>
   88298:	a807883a 	mov	r3,r21
   8829c:	d9c02917 	ldw	r7,164(sp)
   882a0:	802b883a 	mov	r21,r16
   882a4:	dc002717 	ldw	r16,156(sp)
   882a8:	d9402317 	ldw	r5,140(sp)
   882ac:	a885883a 	add	r2,r21,r2
   882b0:	45400115 	stw	r21,4(r8)
   882b4:	41400015 	stw	r5,0(r8)
   882b8:	d8801c15 	stw	r2,112(sp)
   882bc:	d9001b15 	stw	r4,108(sp)
   882c0:	014001c4 	movi	r5,7
   882c4:	29026216 	blt	r5,r4,88c50 <___vfiprintf_internal_r+0xe88>
   882c8:	d9801d87 	ldb	r6,118(sp)
   882cc:	42000204 	addi	r8,r8,8
   882d0:	21400044 	addi	r5,r4,1
   882d4:	3001ae1e 	bne	r6,zero,88990 <___vfiprintf_internal_r+0xbc8>
   882d8:	3801bb26 	beq	r7,zero,889c8 <___vfiprintf_internal_r+0xc00>
   882dc:	d9001d04 	addi	r4,sp,116
   882e0:	10800084 	addi	r2,r2,2
   882e4:	41000015 	stw	r4,0(r8)
   882e8:	01000084 	movi	r4,2
   882ec:	41000115 	stw	r4,4(r8)
   882f0:	d8801c15 	stw	r2,112(sp)
   882f4:	d9401b15 	stw	r5,108(sp)
   882f8:	010001c4 	movi	r4,7
   882fc:	2142680e 	bge	r4,r5,88ca0 <___vfiprintf_internal_r+0xed8>
   88300:	1002b11e 	bne	r2,zero,88dc8 <___vfiprintf_internal_r+0x1000>
   88304:	01802004 	movi	r6,128
   88308:	01400044 	movi	r5,1
   8830c:	0009883a 	mov	r4,zero
   88310:	d811883a 	mov	r8,sp
   88314:	1981ae1e 	bne	r3,r6,889d0 <___vfiprintf_internal_r+0xc08>
   88318:	d8c02517 	ldw	r3,148(sp)
   8831c:	1cf9c83a 	sub	fp,r3,r19
   88320:	0701ab0e 	bge	zero,fp,889d0 <___vfiprintf_internal_r+0xc08>
   88324:	05400404 	movi	r21,16
   88328:	af03a90e 	bge	r21,fp,891d0 <___vfiprintf_internal_r+0x1408>
   8832c:	01400134 	movhi	r5,4
   88330:	29407704 	addi	r5,r5,476
   88334:	d9402315 	stw	r5,140(sp)
   88338:	01c001c4 	movi	r7,7
   8833c:	00000506 	br	88354 <___vfiprintf_internal_r+0x58c>
   88340:	21800084 	addi	r6,r4,2
   88344:	42000204 	addi	r8,r8,8
   88348:	1809883a 	mov	r4,r3
   8834c:	e73ffc04 	addi	fp,fp,-16
   88350:	af000d0e 	bge	r21,fp,88388 <___vfiprintf_internal_r+0x5c0>
   88354:	10800404 	addi	r2,r2,16
   88358:	20c00044 	addi	r3,r4,1
   8835c:	44800015 	stw	r18,0(r8)
   88360:	45400115 	stw	r21,4(r8)
   88364:	d8801c15 	stw	r2,112(sp)
   88368:	d8c01b15 	stw	r3,108(sp)
   8836c:	38fff40e 	bge	r7,r3,88340 <___vfiprintf_internal_r+0x578>
   88370:	10022b1e 	bne	r2,zero,88c20 <___vfiprintf_internal_r+0xe58>
   88374:	e73ffc04 	addi	fp,fp,-16
   88378:	01800044 	movi	r6,1
   8837c:	0009883a 	mov	r4,zero
   88380:	d811883a 	mov	r8,sp
   88384:	af3ff316 	blt	r21,fp,88354 <___vfiprintf_internal_r+0x58c>
   88388:	d8c02317 	ldw	r3,140(sp)
   8838c:	1705883a 	add	r2,r2,fp
   88390:	47000115 	stw	fp,4(r8)
   88394:	40c00015 	stw	r3,0(r8)
   88398:	d8801c15 	stw	r2,112(sp)
   8839c:	d9801b15 	stw	r6,108(sp)
   883a0:	00c001c4 	movi	r3,7
   883a4:	19829416 	blt	r3,r6,88df8 <___vfiprintf_internal_r+0x1030>
   883a8:	8521c83a 	sub	r16,r16,r20
   883ac:	42000204 	addi	r8,r8,8
   883b0:	31400044 	addi	r5,r6,1
   883b4:	3009883a 	mov	r4,r6
   883b8:	04018716 	blt	zero,r16,889d8 <___vfiprintf_internal_r+0xc10>
   883bc:	a085883a 	add	r2,r20,r2
   883c0:	45c00015 	stw	r23,0(r8)
   883c4:	45000115 	stw	r20,4(r8)
   883c8:	d8801c15 	stw	r2,112(sp)
   883cc:	d9401b15 	stw	r5,108(sp)
   883d0:	00c001c4 	movi	r3,7
   883d4:	1941c20e 	bge	r3,r5,88ae0 <___vfiprintf_internal_r+0xd18>
   883d8:	1002531e 	bne	r2,zero,88d28 <___vfiprintf_internal_r+0xf60>
   883dc:	d8001b15 	stw	zero,108(sp)
   883e0:	8c40010c 	andi	r17,r17,4
   883e4:	88023226 	beq	r17,zero,88cb0 <___vfiprintf_internal_r+0xee8>
   883e8:	d9002517 	ldw	r4,148(sp)
   883ec:	24e3c83a 	sub	r17,r4,r19
   883f0:	04432916 	blt	zero,r17,89098 <___vfiprintf_internal_r+0x12d0>
   883f4:	d8802517 	ldw	r2,148(sp)
   883f8:	14c0010e 	bge	r2,r19,88400 <___vfiprintf_internal_r+0x638>
   883fc:	9805883a 	mov	r2,r19
   88400:	d8c02417 	ldw	r3,144(sp)
   88404:	1887883a 	add	r3,r3,r2
   88408:	d8c02415 	stw	r3,144(sp)
   8840c:	d8001b15 	stw	zero,108(sp)
   88410:	d811883a 	mov	r8,sp
   88414:	003ea006 	br	87e98 <___vfiprintf_internal_r+0xd0>
   88418:	8c400814 	ori	r17,r17,32
   8841c:	b0c00007 	ldb	r3,0(r22)
   88420:	003ec606 	br	87f3c <___vfiprintf_internal_r+0x174>
   88424:	b0c00007 	ldb	r3,0(r22)
   88428:	00801b04 	movi	r2,108
   8842c:	18832026 	beq	r3,r2,890b0 <___vfiprintf_internal_r+0x12e8>
   88430:	8c400414 	ori	r17,r17,16
   88434:	003ec106 	br	87f3c <___vfiprintf_internal_r+0x174>
   88438:	9cc03fcc 	andi	r19,r19,255
   8843c:	b811883a 	mov	r8,r23
   88440:	9803981e 	bne	r19,zero,892a4 <___vfiprintf_internal_r+0x14dc>
   88444:	8880080c 	andi	r2,r17,32
   88448:	1002be26 	beq	r2,zero,88f44 <___vfiprintf_internal_r+0x117c>
   8844c:	d9002217 	ldw	r4,136(sp)
   88450:	d9402417 	ldw	r5,144(sp)
   88454:	20800017 	ldw	r2,0(r4)
   88458:	2807d7fa 	srai	r3,r5,31
   8845c:	21000104 	addi	r4,r4,4
   88460:	d9002215 	stw	r4,136(sp)
   88464:	11400015 	stw	r5,0(r2)
   88468:	10c00115 	stw	r3,4(r2)
   8846c:	003e8a06 	br	87e98 <___vfiprintf_internal_r+0xd0>
   88470:	9cc03fcc 	andi	r19,r19,255
   88474:	b811883a 	mov	r8,r23
   88478:	9803871e 	bne	r19,zero,89298 <___vfiprintf_internal_r+0x14d0>
   8847c:	8880080c 	andi	r2,r17,32
   88480:	10009a26 	beq	r2,zero,886ec <___vfiprintf_internal_r+0x924>
   88484:	d9002217 	ldw	r4,136(sp)
   88488:	d8001d85 	stb	zero,118(sp)
   8848c:	20800204 	addi	r2,r4,8
   88490:	24c00017 	ldw	r19,0(r4)
   88494:	25000117 	ldw	r20,4(r4)
   88498:	8002a416 	blt	r16,zero,88f2c <___vfiprintf_internal_r+0x1164>
   8849c:	013fdfc4 	movi	r4,-129
   884a0:	9d06b03a 	or	r3,r19,r20
   884a4:	d8802215 	stw	r2,136(sp)
   884a8:	8922703a 	and	r17,r17,r4
   884ac:	18009b26 	beq	r3,zero,8871c <___vfiprintf_internal_r+0x954>
   884b0:	002b883a 	mov	r21,zero
   884b4:	ddc01a04 	addi	r23,sp,104
   884b8:	9806d0fa 	srli	r3,r19,3
   884bc:	a008977a 	slli	r4,r20,29
   884c0:	a028d0fa 	srli	r20,r20,3
   884c4:	9cc001cc 	andi	r19,r19,7
   884c8:	98800c04 	addi	r2,r19,48
   884cc:	bdffffc4 	addi	r23,r23,-1
   884d0:	20e6b03a 	or	r19,r4,r3
   884d4:	b8800005 	stb	r2,0(r23)
   884d8:	9d06b03a 	or	r3,r19,r20
   884dc:	183ff61e 	bne	r3,zero,884b8 <___vfiprintf_internal_r+0x6f0>
   884e0:	88c0004c 	andi	r3,r17,1
   884e4:	18021f1e 	bne	r3,zero,88d64 <___vfiprintf_internal_r+0xf9c>
   884e8:	d9401e17 	ldw	r5,120(sp)
   884ec:	2de9c83a 	sub	r20,r5,r23
   884f0:	003f3806 	br	881d4 <___vfiprintf_internal_r+0x40c>
   884f4:	9cc03fcc 	andi	r19,r19,255
   884f8:	b811883a 	mov	r8,r23
   884fc:	98034f1e 	bne	r19,zero,8923c <___vfiprintf_internal_r+0x1474>
   88500:	00800134 	movhi	r2,4
   88504:	10801604 	addi	r2,r2,88
   88508:	d8802615 	stw	r2,152(sp)
   8850c:	8880080c 	andi	r2,r17,32
   88510:	1000ac26 	beq	r2,zero,887c4 <___vfiprintf_internal_r+0x9fc>
   88514:	d9002217 	ldw	r4,136(sp)
   88518:	24c00017 	ldw	r19,0(r4)
   8851c:	25000117 	ldw	r20,4(r4)
   88520:	21000204 	addi	r4,r4,8
   88524:	d9002215 	stw	r4,136(sp)
   88528:	8880004c 	andi	r2,r17,1
   8852c:	1001e726 	beq	r2,zero,88ccc <___vfiprintf_internal_r+0xf04>
   88530:	9d04b03a 	or	r2,r19,r20
   88534:	10025c1e 	bne	r2,zero,88ea8 <___vfiprintf_internal_r+0x10e0>
   88538:	d8001d85 	stb	zero,118(sp)
   8853c:	80024416 	blt	r16,zero,88e50 <___vfiprintf_internal_r+0x1088>
   88540:	00bfdfc4 	movi	r2,-129
   88544:	88a2703a 	and	r17,r17,r2
   88548:	003f1d06 	br	881c0 <___vfiprintf_internal_r+0x3f8>
   8854c:	d8c02217 	ldw	r3,136(sp)
   88550:	04c00044 	movi	r19,1
   88554:	b811883a 	mov	r8,r23
   88558:	18800017 	ldw	r2,0(r3)
   8855c:	18c00104 	addi	r3,r3,4
   88560:	d8001d85 	stb	zero,118(sp)
   88564:	d8801005 	stb	r2,64(sp)
   88568:	d8c02215 	stw	r3,136(sp)
   8856c:	9829883a 	mov	r20,r19
   88570:	ddc01004 	addi	r23,sp,64
   88574:	0021883a 	mov	r16,zero
   88578:	003f1e06 	br	881f4 <___vfiprintf_internal_r+0x42c>
   8857c:	9cc03fcc 	andi	r19,r19,255
   88580:	b811883a 	mov	r8,r23
   88584:	9803331e 	bne	r19,zero,89254 <___vfiprintf_internal_r+0x148c>
   88588:	8880080c 	andi	r2,r17,32
   8858c:	10004826 	beq	r2,zero,886b0 <___vfiprintf_internal_r+0x8e8>
   88590:	d9002217 	ldw	r4,136(sp)
   88594:	20800117 	ldw	r2,4(r4)
   88598:	24c00017 	ldw	r19,0(r4)
   8859c:	21000204 	addi	r4,r4,8
   885a0:	d9002215 	stw	r4,136(sp)
   885a4:	1029883a 	mov	r20,r2
   885a8:	10024c16 	blt	r2,zero,88edc <___vfiprintf_internal_r+0x1114>
   885ac:	dd401d83 	ldbu	r21,118(sp)
   885b0:	80007116 	blt	r16,zero,88778 <___vfiprintf_internal_r+0x9b0>
   885b4:	00ffdfc4 	movi	r3,-129
   885b8:	9d04b03a 	or	r2,r19,r20
   885bc:	88e2703a 	and	r17,r17,r3
   885c0:	1000d126 	beq	r2,zero,88908 <___vfiprintf_internal_r+0xb40>
   885c4:	a0023526 	beq	r20,zero,88e9c <___vfiprintf_internal_r+0x10d4>
   885c8:	ddc01a04 	addi	r23,sp,104
   885cc:	4039883a 	mov	fp,r8
   885d0:	9809883a 	mov	r4,r19
   885d4:	a00b883a 	mov	r5,r20
   885d8:	01800284 	movi	r6,10
   885dc:	000f883a 	mov	r7,zero
   885e0:	008a2f40 	call	8a2f4 <__umoddi3>
   885e4:	10800c04 	addi	r2,r2,48
   885e8:	bdffffc4 	addi	r23,r23,-1
   885ec:	9809883a 	mov	r4,r19
   885f0:	a00b883a 	mov	r5,r20
   885f4:	b8800005 	stb	r2,0(r23)
   885f8:	01800284 	movi	r6,10
   885fc:	000f883a 	mov	r7,zero
   88600:	0089cf80 	call	89cf8 <__udivdi3>
   88604:	1027883a 	mov	r19,r2
   88608:	10c4b03a 	or	r2,r2,r3
   8860c:	1829883a 	mov	r20,r3
   88610:	103fef1e 	bne	r2,zero,885d0 <___vfiprintf_internal_r+0x808>
   88614:	d9001e17 	ldw	r4,120(sp)
   88618:	e011883a 	mov	r8,fp
   8861c:	25e9c83a 	sub	r20,r4,r23
   88620:	003eec06 	br	881d4 <___vfiprintf_internal_r+0x40c>
   88624:	d8802307 	ldb	r2,140(sp)
   88628:	1002361e 	bne	r2,zero,88f04 <___vfiprintf_internal_r+0x113c>
   8862c:	00c00804 	movi	r3,32
   88630:	d8c02305 	stb	r3,140(sp)
   88634:	04c00044 	movi	r19,1
   88638:	b0c00007 	ldb	r3,0(r22)
   8863c:	003e3f06 	br	87f3c <___vfiprintf_internal_r+0x174>
   88640:	8c400054 	ori	r17,r17,1
   88644:	b0c00007 	ldb	r3,0(r22)
   88648:	003e3c06 	br	87f3c <___vfiprintf_internal_r+0x174>
   8864c:	8c402014 	ori	r17,r17,128
   88650:	b0c00007 	ldb	r3,0(r22)
   88654:	003e3906 	br	87f3c <___vfiprintf_internal_r+0x174>
   88658:	dc002715 	stw	r16,156(sp)
   8865c:	d8002515 	stw	zero,148(sp)
   88660:	1f3ff404 	addi	fp,r3,-48
   88664:	0009883a 	mov	r4,zero
   88668:	b021883a 	mov	r16,r22
   8866c:	01400284 	movi	r5,10
   88670:	008aa6c0 	call	8aa6c <__mulsi3>
   88674:	80c00007 	ldb	r3,0(r16)
   88678:	e089883a 	add	r4,fp,r2
   8867c:	b5800044 	addi	r22,r22,1
   88680:	1f3ff404 	addi	fp,r3,-48
   88684:	b021883a 	mov	r16,r22
   88688:	af3ff82e 	bgeu	r21,fp,8866c <___vfiprintf_internal_r+0x8a4>
   8868c:	d9002515 	stw	r4,148(sp)
   88690:	dc002717 	ldw	r16,156(sp)
   88694:	003e2a06 	br	87f40 <___vfiprintf_internal_r+0x178>
   88698:	9cc03fcc 	andi	r19,r19,255
   8869c:	b811883a 	mov	r8,r23
   886a0:	9802e91e 	bne	r19,zero,89248 <___vfiprintf_internal_r+0x1480>
   886a4:	8c400414 	ori	r17,r17,16
   886a8:	8880080c 	andi	r2,r17,32
   886ac:	103fb81e 	bne	r2,zero,88590 <___vfiprintf_internal_r+0x7c8>
   886b0:	8880040c 	andi	r2,r17,16
   886b4:	10022e26 	beq	r2,zero,88f70 <___vfiprintf_internal_r+0x11a8>
   886b8:	d9402217 	ldw	r5,136(sp)
   886bc:	2cc00017 	ldw	r19,0(r5)
   886c0:	29400104 	addi	r5,r5,4
   886c4:	d9402215 	stw	r5,136(sp)
   886c8:	9829d7fa 	srai	r20,r19,31
   886cc:	a005883a 	mov	r2,r20
   886d0:	003fb506 	br	885a8 <___vfiprintf_internal_r+0x7e0>
   886d4:	9cc03fcc 	andi	r19,r19,255
   886d8:	b811883a 	mov	r8,r23
   886dc:	9802fa1e 	bne	r19,zero,892c8 <___vfiprintf_internal_r+0x1500>
   886e0:	8c400414 	ori	r17,r17,16
   886e4:	8880080c 	andi	r2,r17,32
   886e8:	103f661e 	bne	r2,zero,88484 <___vfiprintf_internal_r+0x6bc>
   886ec:	8880040c 	andi	r2,r17,16
   886f0:	10020626 	beq	r2,zero,88f0c <___vfiprintf_internal_r+0x1144>
   886f4:	d9402217 	ldw	r5,136(sp)
   886f8:	d8001d85 	stb	zero,118(sp)
   886fc:	0029883a 	mov	r20,zero
   88700:	28800104 	addi	r2,r5,4
   88704:	2cc00017 	ldw	r19,0(r5)
   88708:	80020816 	blt	r16,zero,88f2c <___vfiprintf_internal_r+0x1164>
   8870c:	00ffdfc4 	movi	r3,-129
   88710:	d8802215 	stw	r2,136(sp)
   88714:	88e2703a 	and	r17,r17,r3
   88718:	983f651e 	bne	r19,zero,884b0 <___vfiprintf_internal_r+0x6e8>
   8871c:	002b883a 	mov	r21,zero
   88720:	8002cf26 	beq	r16,zero,89260 <___vfiprintf_internal_r+0x1498>
   88724:	0027883a 	mov	r19,zero
   88728:	0029883a 	mov	r20,zero
   8872c:	003f6106 	br	884b4 <___vfiprintf_internal_r+0x6ec>
   88730:	9cc03fcc 	andi	r19,r19,255
   88734:	b811883a 	mov	r8,r23
   88738:	9802e01e 	bne	r19,zero,892bc <___vfiprintf_internal_r+0x14f4>
   8873c:	8c400414 	ori	r17,r17,16
   88740:	8880080c 	andi	r2,r17,32
   88744:	1000641e 	bne	r2,zero,888d8 <___vfiprintf_internal_r+0xb10>
   88748:	8880040c 	andi	r2,r17,16
   8874c:	1001c81e 	bne	r2,zero,88e70 <___vfiprintf_internal_r+0x10a8>
   88750:	8880100c 	andi	r2,r17,64
   88754:	d8001d85 	stb	zero,118(sp)
   88758:	1002281e 	bne	r2,zero,88ffc <___vfiprintf_internal_r+0x1234>
   8875c:	d9002217 	ldw	r4,136(sp)
   88760:	0029883a 	mov	r20,zero
   88764:	20800104 	addi	r2,r4,4
   88768:	24c00017 	ldw	r19,0(r4)
   8876c:	8001c60e 	bge	r16,zero,88e88 <___vfiprintf_internal_r+0x10c0>
   88770:	d8802215 	stw	r2,136(sp)
   88774:	002b883a 	mov	r21,zero
   88778:	9d04b03a 	or	r2,r19,r20
   8877c:	103f911e 	bne	r2,zero,885c4 <___vfiprintf_internal_r+0x7fc>
   88780:	00800044 	movi	r2,1
   88784:	10803fcc 	andi	r2,r2,255
   88788:	00c00044 	movi	r3,1
   8878c:	10c05f26 	beq	r2,r3,8890c <___vfiprintf_internal_r+0xb44>
   88790:	00c00084 	movi	r3,2
   88794:	10ffe31e 	bne	r2,r3,88724 <___vfiprintf_internal_r+0x95c>
   88798:	0027883a 	mov	r19,zero
   8879c:	0029883a 	mov	r20,zero
   887a0:	00015106 	br	88ce8 <___vfiprintf_internal_r+0xf20>
   887a4:	9cc03fcc 	andi	r19,r19,255
   887a8:	b811883a 	mov	r8,r23
   887ac:	9802c01e 	bne	r19,zero,892b0 <___vfiprintf_internal_r+0x14e8>
   887b0:	01400134 	movhi	r5,4
   887b4:	29401104 	addi	r5,r5,68
   887b8:	d9402615 	stw	r5,152(sp)
   887bc:	8880080c 	andi	r2,r17,32
   887c0:	103f541e 	bne	r2,zero,88514 <___vfiprintf_internal_r+0x74c>
   887c4:	8880040c 	andi	r2,r17,16
   887c8:	1001f226 	beq	r2,zero,88f94 <___vfiprintf_internal_r+0x11cc>
   887cc:	d9402217 	ldw	r5,136(sp)
   887d0:	0029883a 	mov	r20,zero
   887d4:	2cc00017 	ldw	r19,0(r5)
   887d8:	29400104 	addi	r5,r5,4
   887dc:	d9402215 	stw	r5,136(sp)
   887e0:	003f5106 	br	88528 <___vfiprintf_internal_r+0x760>
   887e4:	d8c02217 	ldw	r3,136(sp)
   887e8:	b811883a 	mov	r8,r23
   887ec:	d8001d85 	stb	zero,118(sp)
   887f0:	1dc00017 	ldw	r23,0(r3)
   887f4:	1f000104 	addi	fp,r3,4
   887f8:	b8025926 	beq	r23,zero,89160 <___vfiprintf_internal_r+0x1398>
   887fc:	80023316 	blt	r16,zero,890cc <___vfiprintf_internal_r+0x1304>
   88800:	800d883a 	mov	r6,r16
   88804:	000b883a 	mov	r5,zero
   88808:	b809883a 	mov	r4,r23
   8880c:	da002a15 	stw	r8,168(sp)
   88810:	0085f080 	call	85f08 <memchr>
   88814:	da002a17 	ldw	r8,168(sp)
   88818:	10026826 	beq	r2,zero,891bc <___vfiprintf_internal_r+0x13f4>
   8881c:	15e9c83a 	sub	r20,r2,r23
   88820:	dd401d83 	ldbu	r21,118(sp)
   88824:	df002215 	stw	fp,136(sp)
   88828:	0021883a 	mov	r16,zero
   8882c:	003e6906 	br	881d4 <___vfiprintf_internal_r+0x40c>
   88830:	9cc03fcc 	andi	r19,r19,255
   88834:	b811883a 	mov	r8,r23
   88838:	983fc126 	beq	r19,zero,88740 <___vfiprintf_internal_r+0x978>
   8883c:	d8c02303 	ldbu	r3,140(sp)
   88840:	d8c01d85 	stb	r3,118(sp)
   88844:	003fbe06 	br	88740 <___vfiprintf_internal_r+0x978>
   88848:	d9002217 	ldw	r4,136(sp)
   8884c:	d9402217 	ldw	r5,136(sp)
   88850:	21000017 	ldw	r4,0(r4)
   88854:	28800104 	addi	r2,r5,4
   88858:	d9002515 	stw	r4,148(sp)
   8885c:	203e3d16 	blt	r4,zero,88154 <___vfiprintf_internal_r+0x38c>
   88860:	d8802215 	stw	r2,136(sp)
   88864:	b0c00007 	ldb	r3,0(r22)
   88868:	003db406 	br	87f3c <___vfiprintf_internal_r+0x174>
   8886c:	00c00ac4 	movi	r3,43
   88870:	d8c02305 	stb	r3,140(sp)
   88874:	04c00044 	movi	r19,1
   88878:	b0c00007 	ldb	r3,0(r22)
   8887c:	003daf06 	br	87f3c <___vfiprintf_internal_r+0x174>
   88880:	b0c00007 	ldb	r3,0(r22)
   88884:	01000a84 	movi	r4,42
   88888:	b4000044 	addi	r16,r22,1
   8888c:	19025e26 	beq	r3,r4,89208 <___vfiprintf_internal_r+0x1440>
   88890:	1f3ff404 	addi	fp,r3,-48
   88894:	0009883a 	mov	r4,zero
   88898:	af025236 	bltu	r21,fp,891e4 <___vfiprintf_internal_r+0x141c>
   8889c:	01400284 	movi	r5,10
   888a0:	008aa6c0 	call	8aa6c <__mulsi3>
   888a4:	80c00007 	ldb	r3,0(r16)
   888a8:	1709883a 	add	r4,r2,fp
   888ac:	85800044 	addi	r22,r16,1
   888b0:	1f3ff404 	addi	fp,r3,-48
   888b4:	b021883a 	mov	r16,r22
   888b8:	af3ff82e 	bgeu	r21,fp,8889c <___vfiprintf_internal_r+0xad4>
   888bc:	2021883a 	mov	r16,r4
   888c0:	203d9f0e 	bge	r4,zero,87f40 <___vfiprintf_internal_r+0x178>
   888c4:	043fffc4 	movi	r16,-1
   888c8:	003d9d06 	br	87f40 <___vfiprintf_internal_r+0x178>
   888cc:	8c401014 	ori	r17,r17,64
   888d0:	b0c00007 	ldb	r3,0(r22)
   888d4:	003d9906 	br	87f3c <___vfiprintf_internal_r+0x174>
   888d8:	d9002217 	ldw	r4,136(sp)
   888dc:	d8001d85 	stb	zero,118(sp)
   888e0:	20c00204 	addi	r3,r4,8
   888e4:	24c00017 	ldw	r19,0(r4)
   888e8:	25000117 	ldw	r20,4(r4)
   888ec:	8001e716 	blt	r16,zero,8908c <___vfiprintf_internal_r+0x12c4>
   888f0:	013fdfc4 	movi	r4,-129
   888f4:	9d04b03a 	or	r2,r19,r20
   888f8:	d8c02215 	stw	r3,136(sp)
   888fc:	8922703a 	and	r17,r17,r4
   88900:	002b883a 	mov	r21,zero
   88904:	103f2f1e 	bne	r2,zero,885c4 <___vfiprintf_internal_r+0x7fc>
   88908:	803e2f26 	beq	r16,zero,881c8 <___vfiprintf_internal_r+0x400>
   8890c:	0027883a 	mov	r19,zero
   88910:	9cc00c04 	addi	r19,r19,48
   88914:	dcc019c5 	stb	r19,103(sp)
   88918:	dd002817 	ldw	r20,160(sp)
   8891c:	ddc019c4 	addi	r23,sp,103
   88920:	003e2c06 	br	881d4 <___vfiprintf_internal_r+0x40c>
   88924:	9cc03fcc 	andi	r19,r19,255
   88928:	b811883a 	mov	r8,r23
   8892c:	9802571e 	bne	r19,zero,8928c <___vfiprintf_internal_r+0x14c4>
   88930:	18005726 	beq	r3,zero,88a90 <___vfiprintf_internal_r+0xcc8>
   88934:	04c00044 	movi	r19,1
   88938:	d8c01005 	stb	r3,64(sp)
   8893c:	d8001d85 	stb	zero,118(sp)
   88940:	9829883a 	mov	r20,r19
   88944:	ddc01004 	addi	r23,sp,64
   88948:	003f0a06 	br	88574 <___vfiprintf_internal_r+0x7ac>
   8894c:	d9402017 	ldw	r5,128(sp)
   88950:	d9002117 	ldw	r4,132(sp)
   88954:	d9801a04 	addi	r6,sp,104
   88958:	da802a15 	stw	r10,168(sp)
   8895c:	0087cb40 	call	87cb4 <__sprint_r.part.0>
   88960:	da802a17 	ldw	r10,168(sp)
   88964:	1000501e 	bne	r2,zero,88aa8 <___vfiprintf_internal_r+0xce0>
   88968:	d9801b17 	ldw	r6,108(sp)
   8896c:	d8801c17 	ldw	r2,112(sp)
   88970:	d811883a 	mov	r8,sp
   88974:	31000044 	addi	r4,r6,1
   88978:	003e3606 	br	88254 <___vfiprintf_internal_r+0x48c>
   8897c:	d9001b17 	ldw	r4,108(sp)
   88980:	d8801c17 	ldw	r2,112(sp)
   88984:	21400044 	addi	r5,r4,1
   88988:	d9801d87 	ldb	r6,118(sp)
   8898c:	303e5226 	beq	r6,zero,882d8 <___vfiprintf_internal_r+0x510>
   88990:	01800044 	movi	r6,1
   88994:	d9001d84 	addi	r4,sp,118
   88998:	1185883a 	add	r2,r2,r6
   8899c:	41000015 	stw	r4,0(r8)
   889a0:	41800115 	stw	r6,4(r8)
   889a4:	d8801c15 	stw	r2,112(sp)
   889a8:	d9401b15 	stw	r5,108(sp)
   889ac:	010001c4 	movi	r4,7
   889b0:	2140b00e 	bge	r4,r5,88c74 <___vfiprintf_internal_r+0xeac>
   889b4:	1000f61e 	bne	r2,zero,88d90 <___vfiprintf_internal_r+0xfc8>
   889b8:	3800b31e 	bne	r7,zero,88c88 <___vfiprintf_internal_r+0xec0>
   889bc:	0009883a 	mov	r4,zero
   889c0:	300b883a 	mov	r5,r6
   889c4:	d811883a 	mov	r8,sp
   889c8:	01802004 	movi	r6,128
   889cc:	19be5226 	beq	r3,r6,88318 <___vfiprintf_internal_r+0x550>
   889d0:	8521c83a 	sub	r16,r16,r20
   889d4:	043e790e 	bge	zero,r16,883bc <___vfiprintf_internal_r+0x5f4>
   889d8:	05400404 	movi	r21,16
   889dc:	ac01b00e 	bge	r21,r16,890a0 <___vfiprintf_internal_r+0x12d8>
   889e0:	01400134 	movhi	r5,4
   889e4:	29407704 	addi	r5,r5,476
   889e8:	d9402315 	stw	r5,140(sp)
   889ec:	070001c4 	movi	fp,7
   889f0:	00000506 	br	88a08 <___vfiprintf_internal_r+0xc40>
   889f4:	21400084 	addi	r5,r4,2
   889f8:	42000204 	addi	r8,r8,8
   889fc:	1809883a 	mov	r4,r3
   88a00:	843ffc04 	addi	r16,r16,-16
   88a04:	ac000d0e 	bge	r21,r16,88a3c <___vfiprintf_internal_r+0xc74>
   88a08:	10800404 	addi	r2,r2,16
   88a0c:	20c00044 	addi	r3,r4,1
   88a10:	44800015 	stw	r18,0(r8)
   88a14:	45400115 	stw	r21,4(r8)
   88a18:	d8801c15 	stw	r2,112(sp)
   88a1c:	d8c01b15 	stw	r3,108(sp)
   88a20:	e0fff40e 	bge	fp,r3,889f4 <___vfiprintf_internal_r+0xc2c>
   88a24:	1000101e 	bne	r2,zero,88a68 <___vfiprintf_internal_r+0xca0>
   88a28:	843ffc04 	addi	r16,r16,-16
   88a2c:	01400044 	movi	r5,1
   88a30:	0009883a 	mov	r4,zero
   88a34:	d811883a 	mov	r8,sp
   88a38:	ac3ff316 	blt	r21,r16,88a08 <___vfiprintf_internal_r+0xc40>
   88a3c:	d8c02317 	ldw	r3,140(sp)
   88a40:	1405883a 	add	r2,r2,r16
   88a44:	44000115 	stw	r16,4(r8)
   88a48:	40c00015 	stw	r3,0(r8)
   88a4c:	d8801c15 	stw	r2,112(sp)
   88a50:	d9401b15 	stw	r5,108(sp)
   88a54:	00c001c4 	movi	r3,7
   88a58:	19401916 	blt	r3,r5,88ac0 <___vfiprintf_internal_r+0xcf8>
   88a5c:	42000204 	addi	r8,r8,8
   88a60:	29400044 	addi	r5,r5,1
   88a64:	003e5506 	br	883bc <___vfiprintf_internal_r+0x5f4>
   88a68:	d9402017 	ldw	r5,128(sp)
   88a6c:	d9002117 	ldw	r4,132(sp)
   88a70:	d9801a04 	addi	r6,sp,104
   88a74:	0087cb40 	call	87cb4 <__sprint_r.part.0>
   88a78:	10000b1e 	bne	r2,zero,88aa8 <___vfiprintf_internal_r+0xce0>
   88a7c:	d9001b17 	ldw	r4,108(sp)
   88a80:	d8801c17 	ldw	r2,112(sp)
   88a84:	d811883a 	mov	r8,sp
   88a88:	21400044 	addi	r5,r4,1
   88a8c:	003fdc06 	br	88a00 <___vfiprintf_internal_r+0xc38>
   88a90:	d8801c17 	ldw	r2,112(sp)
   88a94:	10000426 	beq	r2,zero,88aa8 <___vfiprintf_internal_r+0xce0>
   88a98:	d9402017 	ldw	r5,128(sp)
   88a9c:	d9002117 	ldw	r4,132(sp)
   88aa0:	d9801a04 	addi	r6,sp,104
   88aa4:	0087cb40 	call	87cb4 <__sprint_r.part.0>
   88aa8:	d9402017 	ldw	r5,128(sp)
   88aac:	2880030b 	ldhu	r2,12(r5)
   88ab0:	1080100c 	andi	r2,r2,64
   88ab4:	10014d1e 	bne	r2,zero,88fec <___vfiprintf_internal_r+0x1224>
   88ab8:	d8802417 	ldw	r2,144(sp)
   88abc:	003d9706 	br	8811c <___vfiprintf_internal_r+0x354>
   88ac0:	1000d21e 	bne	r2,zero,88e0c <___vfiprintf_internal_r+0x1044>
   88ac4:	00c00044 	movi	r3,1
   88ac8:	a005883a 	mov	r2,r20
   88acc:	ddc00015 	stw	r23,0(sp)
   88ad0:	dd000115 	stw	r20,4(sp)
   88ad4:	dd001c15 	stw	r20,112(sp)
   88ad8:	d8c01b15 	stw	r3,108(sp)
   88adc:	d811883a 	mov	r8,sp
   88ae0:	42000204 	addi	r8,r8,8
   88ae4:	8c40010c 	andi	r17,r17,4
   88ae8:	88004026 	beq	r17,zero,88bec <___vfiprintf_internal_r+0xe24>
   88aec:	d9002517 	ldw	r4,148(sp)
   88af0:	24e3c83a 	sub	r17,r4,r19
   88af4:	04403d0e 	bge	zero,r17,88bec <___vfiprintf_internal_r+0xe24>
   88af8:	04000404 	movi	r16,16
   88afc:	8441a90e 	bge	r16,r17,891a4 <___vfiprintf_internal_r+0x13dc>
   88b00:	00c00134 	movhi	r3,4
   88b04:	18c07b04 	addi	r3,r3,492
   88b08:	d9001b17 	ldw	r4,108(sp)
   88b0c:	d8c02315 	stw	r3,140(sp)
   88b10:	050001c4 	movi	r20,7
   88b14:	dd402117 	ldw	r21,132(sp)
   88b18:	ddc02017 	ldw	r23,128(sp)
   88b1c:	00000506 	br	88b34 <___vfiprintf_internal_r+0xd6c>
   88b20:	21400084 	addi	r5,r4,2
   88b24:	42000204 	addi	r8,r8,8
   88b28:	1809883a 	mov	r4,r3
   88b2c:	8c7ffc04 	addi	r17,r17,-16
   88b30:	84400f0e 	bge	r16,r17,88b70 <___vfiprintf_internal_r+0xda8>
   88b34:	01400134 	movhi	r5,4
   88b38:	10800404 	addi	r2,r2,16
   88b3c:	20c00044 	addi	r3,r4,1
   88b40:	29407b04 	addi	r5,r5,492
   88b44:	41400015 	stw	r5,0(r8)
   88b48:	44000115 	stw	r16,4(r8)
   88b4c:	d8801c15 	stw	r2,112(sp)
   88b50:	d8c01b15 	stw	r3,108(sp)
   88b54:	a0fff20e 	bge	r20,r3,88b20 <___vfiprintf_internal_r+0xd58>
   88b58:	1000141e 	bne	r2,zero,88bac <___vfiprintf_internal_r+0xde4>
   88b5c:	8c7ffc04 	addi	r17,r17,-16
   88b60:	01400044 	movi	r5,1
   88b64:	0009883a 	mov	r4,zero
   88b68:	d811883a 	mov	r8,sp
   88b6c:	847ff116 	blt	r16,r17,88b34 <___vfiprintf_internal_r+0xd6c>
   88b70:	d8c02317 	ldw	r3,140(sp)
   88b74:	1445883a 	add	r2,r2,r17
   88b78:	44400115 	stw	r17,4(r8)
   88b7c:	40c00015 	stw	r3,0(r8)
   88b80:	d8801c15 	stw	r2,112(sp)
   88b84:	d9401b15 	stw	r5,108(sp)
   88b88:	00c001c4 	movi	r3,7
   88b8c:	1940170e 	bge	r3,r5,88bec <___vfiprintf_internal_r+0xe24>
   88b90:	1000101e 	bne	r2,zero,88bd4 <___vfiprintf_internal_r+0xe0c>
   88b94:	d8802517 	ldw	r2,148(sp)
   88b98:	14c11616 	blt	r2,r19,88ff4 <___vfiprintf_internal_r+0x122c>
   88b9c:	d9002417 	ldw	r4,144(sp)
   88ba0:	2089883a 	add	r4,r4,r2
   88ba4:	d9002415 	stw	r4,144(sp)
   88ba8:	003e1806 	br	8840c <___vfiprintf_internal_r+0x644>
   88bac:	d9801a04 	addi	r6,sp,104
   88bb0:	b80b883a 	mov	r5,r23
   88bb4:	a809883a 	mov	r4,r21
   88bb8:	0087cb40 	call	87cb4 <__sprint_r.part.0>
   88bbc:	103fba1e 	bne	r2,zero,88aa8 <___vfiprintf_internal_r+0xce0>
   88bc0:	d9001b17 	ldw	r4,108(sp)
   88bc4:	d8801c17 	ldw	r2,112(sp)
   88bc8:	d811883a 	mov	r8,sp
   88bcc:	21400044 	addi	r5,r4,1
   88bd0:	003fd606 	br	88b2c <___vfiprintf_internal_r+0xd64>
   88bd4:	d9402017 	ldw	r5,128(sp)
   88bd8:	d9002117 	ldw	r4,132(sp)
   88bdc:	d9801a04 	addi	r6,sp,104
   88be0:	0087cb40 	call	87cb4 <__sprint_r.part.0>
   88be4:	103fb01e 	bne	r2,zero,88aa8 <___vfiprintf_internal_r+0xce0>
   88be8:	d8801c17 	ldw	r2,112(sp)
   88bec:	d8c02517 	ldw	r3,148(sp)
   88bf0:	1cc0010e 	bge	r3,r19,88bf8 <___vfiprintf_internal_r+0xe30>
   88bf4:	9807883a 	mov	r3,r19
   88bf8:	d9002417 	ldw	r4,144(sp)
   88bfc:	20c9883a 	add	r4,r4,r3
   88c00:	d9002415 	stw	r4,144(sp)
   88c04:	103e0126 	beq	r2,zero,8840c <___vfiprintf_internal_r+0x644>
   88c08:	d9402017 	ldw	r5,128(sp)
   88c0c:	d9002117 	ldw	r4,132(sp)
   88c10:	d9801a04 	addi	r6,sp,104
   88c14:	0087cb40 	call	87cb4 <__sprint_r.part.0>
   88c18:	103dfc26 	beq	r2,zero,8840c <___vfiprintf_internal_r+0x644>
   88c1c:	003fa206 	br	88aa8 <___vfiprintf_internal_r+0xce0>
   88c20:	d9402017 	ldw	r5,128(sp)
   88c24:	d9002117 	ldw	r4,132(sp)
   88c28:	d9801a04 	addi	r6,sp,104
   88c2c:	d9c02b15 	stw	r7,172(sp)
   88c30:	0087cb40 	call	87cb4 <__sprint_r.part.0>
   88c34:	d9c02b17 	ldw	r7,172(sp)
   88c38:	103f9b1e 	bne	r2,zero,88aa8 <___vfiprintf_internal_r+0xce0>
   88c3c:	d9001b17 	ldw	r4,108(sp)
   88c40:	d8801c17 	ldw	r2,112(sp)
   88c44:	d811883a 	mov	r8,sp
   88c48:	21800044 	addi	r6,r4,1
   88c4c:	003dbf06 	br	8834c <___vfiprintf_internal_r+0x584>
   88c50:	1000d81e 	bne	r2,zero,88fb4 <___vfiprintf_internal_r+0x11ec>
   88c54:	d9001d87 	ldb	r4,118(sp)
   88c58:	20000a26 	beq	r4,zero,88c84 <___vfiprintf_internal_r+0xebc>
   88c5c:	00800044 	movi	r2,1
   88c60:	d9001d84 	addi	r4,sp,118
   88c64:	100b883a 	mov	r5,r2
   88c68:	d9000015 	stw	r4,0(sp)
   88c6c:	d8800115 	stw	r2,4(sp)
   88c70:	d811883a 	mov	r8,sp
   88c74:	2809883a 	mov	r4,r5
   88c78:	42000204 	addi	r8,r8,8
   88c7c:	29400044 	addi	r5,r5,1
   88c80:	003d9506 	br	882d8 <___vfiprintf_internal_r+0x510>
   88c84:	3800fd26 	beq	r7,zero,8907c <___vfiprintf_internal_r+0x12b4>
   88c88:	00800084 	movi	r2,2
   88c8c:	d9001d04 	addi	r4,sp,116
   88c90:	d9000015 	stw	r4,0(sp)
   88c94:	d8800115 	stw	r2,4(sp)
   88c98:	01400044 	movi	r5,1
   88c9c:	d811883a 	mov	r8,sp
   88ca0:	2809883a 	mov	r4,r5
   88ca4:	42000204 	addi	r8,r8,8
   88ca8:	29400044 	addi	r5,r5,1
   88cac:	003f4606 	br	889c8 <___vfiprintf_internal_r+0xc00>
   88cb0:	d8802517 	ldw	r2,148(sp)
   88cb4:	14c0010e 	bge	r2,r19,88cbc <___vfiprintf_internal_r+0xef4>
   88cb8:	9805883a 	mov	r2,r19
   88cbc:	d9402417 	ldw	r5,144(sp)
   88cc0:	288b883a 	add	r5,r5,r2
   88cc4:	d9402415 	stw	r5,144(sp)
   88cc8:	003dd006 	br	8840c <___vfiprintf_internal_r+0x644>
   88ccc:	d8001d85 	stb	zero,118(sp)
   88cd0:	80005d16 	blt	r16,zero,88e48 <___vfiprintf_internal_r+0x1080>
   88cd4:	00ffdfc4 	movi	r3,-129
   88cd8:	9d04b03a 	or	r2,r19,r20
   88cdc:	88e2703a 	and	r17,r17,r3
   88ce0:	103d3726 	beq	r2,zero,881c0 <___vfiprintf_internal_r+0x3f8>
   88ce4:	002b883a 	mov	r21,zero
   88ce8:	d9002617 	ldw	r4,152(sp)
   88cec:	ddc01a04 	addi	r23,sp,104
   88cf0:	988003cc 	andi	r2,r19,15
   88cf4:	a006973a 	slli	r3,r20,28
   88cf8:	2085883a 	add	r2,r4,r2
   88cfc:	9826d13a 	srli	r19,r19,4
   88d00:	10800003 	ldbu	r2,0(r2)
   88d04:	a028d13a 	srli	r20,r20,4
   88d08:	bdffffc4 	addi	r23,r23,-1
   88d0c:	1ce6b03a 	or	r19,r3,r19
   88d10:	b8800005 	stb	r2,0(r23)
   88d14:	9d04b03a 	or	r2,r19,r20
   88d18:	103ff51e 	bne	r2,zero,88cf0 <___vfiprintf_internal_r+0xf28>
   88d1c:	d8801e17 	ldw	r2,120(sp)
   88d20:	15e9c83a 	sub	r20,r2,r23
   88d24:	003d2b06 	br	881d4 <___vfiprintf_internal_r+0x40c>
   88d28:	d9402017 	ldw	r5,128(sp)
   88d2c:	d9002117 	ldw	r4,132(sp)
   88d30:	d9801a04 	addi	r6,sp,104
   88d34:	0087cb40 	call	87cb4 <__sprint_r.part.0>
   88d38:	103f5b1e 	bne	r2,zero,88aa8 <___vfiprintf_internal_r+0xce0>
   88d3c:	d8801c17 	ldw	r2,112(sp)
   88d40:	d811883a 	mov	r8,sp
   88d44:	003f6706 	br	88ae4 <___vfiprintf_internal_r+0xd1c>
   88d48:	d9402017 	ldw	r5,128(sp)
   88d4c:	d9002117 	ldw	r4,132(sp)
   88d50:	d9801a04 	addi	r6,sp,104
   88d54:	0087cb40 	call	87cb4 <__sprint_r.part.0>
   88d58:	103f531e 	bne	r2,zero,88aa8 <___vfiprintf_internal_r+0xce0>
   88d5c:	d811883a 	mov	r8,sp
   88d60:	003cd906 	br	880c8 <___vfiprintf_internal_r+0x300>
   88d64:	10803fcc 	andi	r2,r2,255
   88d68:	1080201c 	xori	r2,r2,128
   88d6c:	10bfe004 	addi	r2,r2,-128
   88d70:	00c00c04 	movi	r3,48
   88d74:	10ffe926 	beq	r2,r3,88d1c <___vfiprintf_internal_r+0xf54>
   88d78:	b8ffffc5 	stb	r3,-1(r23)
   88d7c:	d8c01e17 	ldw	r3,120(sp)
   88d80:	b8bfffc4 	addi	r2,r23,-1
   88d84:	102f883a 	mov	r23,r2
   88d88:	18a9c83a 	sub	r20,r3,r2
   88d8c:	003d1106 	br	881d4 <___vfiprintf_internal_r+0x40c>
   88d90:	d9402017 	ldw	r5,128(sp)
   88d94:	d9002117 	ldw	r4,132(sp)
   88d98:	d9801a04 	addi	r6,sp,104
   88d9c:	d8c02a15 	stw	r3,168(sp)
   88da0:	d9c02b15 	stw	r7,172(sp)
   88da4:	0087cb40 	call	87cb4 <__sprint_r.part.0>
   88da8:	d8c02a17 	ldw	r3,168(sp)
   88dac:	d9c02b17 	ldw	r7,172(sp)
   88db0:	103f3d1e 	bne	r2,zero,88aa8 <___vfiprintf_internal_r+0xce0>
   88db4:	d9001b17 	ldw	r4,108(sp)
   88db8:	d8801c17 	ldw	r2,112(sp)
   88dbc:	d811883a 	mov	r8,sp
   88dc0:	21400044 	addi	r5,r4,1
   88dc4:	003d4406 	br	882d8 <___vfiprintf_internal_r+0x510>
   88dc8:	d9402017 	ldw	r5,128(sp)
   88dcc:	d9002117 	ldw	r4,132(sp)
   88dd0:	d9801a04 	addi	r6,sp,104
   88dd4:	d8c02a15 	stw	r3,168(sp)
   88dd8:	0087cb40 	call	87cb4 <__sprint_r.part.0>
   88ddc:	d8c02a17 	ldw	r3,168(sp)
   88de0:	103f311e 	bne	r2,zero,88aa8 <___vfiprintf_internal_r+0xce0>
   88de4:	d9001b17 	ldw	r4,108(sp)
   88de8:	d8801c17 	ldw	r2,112(sp)
   88dec:	d811883a 	mov	r8,sp
   88df0:	21400044 	addi	r5,r4,1
   88df4:	003ef406 	br	889c8 <___vfiprintf_internal_r+0xc00>
   88df8:	1000bd1e 	bne	r2,zero,890f0 <___vfiprintf_internal_r+0x1328>
   88dfc:	01400044 	movi	r5,1
   88e00:	0009883a 	mov	r4,zero
   88e04:	d811883a 	mov	r8,sp
   88e08:	003ef106 	br	889d0 <___vfiprintf_internal_r+0xc08>
   88e0c:	d9402017 	ldw	r5,128(sp)
   88e10:	d9002117 	ldw	r4,132(sp)
   88e14:	d9801a04 	addi	r6,sp,104
   88e18:	0087cb40 	call	87cb4 <__sprint_r.part.0>
   88e1c:	103f221e 	bne	r2,zero,88aa8 <___vfiprintf_internal_r+0xce0>
   88e20:	d9401b17 	ldw	r5,108(sp)
   88e24:	d8801c17 	ldw	r2,112(sp)
   88e28:	d811883a 	mov	r8,sp
   88e2c:	29400044 	addi	r5,r5,1
   88e30:	003d6206 	br	883bc <___vfiprintf_internal_r+0x5f4>
   88e34:	01400134 	movhi	r5,4
   88e38:	29401604 	addi	r5,r5,88
   88e3c:	d9402615 	stw	r5,152(sp)
   88e40:	d8c02215 	stw	r3,136(sp)
   88e44:	1023883a 	mov	r17,r2
   88e48:	9d04b03a 	or	r2,r19,r20
   88e4c:	103fa51e 	bne	r2,zero,88ce4 <___vfiprintf_internal_r+0xf1c>
   88e50:	002b883a 	mov	r21,zero
   88e54:	00800084 	movi	r2,2
   88e58:	003e4a06 	br	88784 <___vfiprintf_internal_r+0x9bc>
   88e5c:	01400134 	movhi	r5,4
   88e60:	29401604 	addi	r5,r5,88
   88e64:	002b883a 	mov	r21,zero
   88e68:	d9402615 	stw	r5,152(sp)
   88e6c:	003f9e06 	br	88ce8 <___vfiprintf_internal_r+0xf20>
   88e70:	d9402217 	ldw	r5,136(sp)
   88e74:	d8001d85 	stb	zero,118(sp)
   88e78:	0029883a 	mov	r20,zero
   88e7c:	28800104 	addi	r2,r5,4
   88e80:	2cc00017 	ldw	r19,0(r5)
   88e84:	803e3a16 	blt	r16,zero,88770 <___vfiprintf_internal_r+0x9a8>
   88e88:	00ffdfc4 	movi	r3,-129
   88e8c:	d8802215 	stw	r2,136(sp)
   88e90:	88e2703a 	and	r17,r17,r3
   88e94:	002b883a 	mov	r21,zero
   88e98:	983e9b26 	beq	r19,zero,88908 <___vfiprintf_internal_r+0xb40>
   88e9c:	00800244 	movi	r2,9
   88ea0:	14fdc936 	bltu	r2,r19,885c8 <___vfiprintf_internal_r+0x800>
   88ea4:	003e9a06 	br	88910 <___vfiprintf_internal_r+0xb48>
   88ea8:	00800c04 	movi	r2,48
   88eac:	d8c01d45 	stb	r3,117(sp)
   88eb0:	d8801d05 	stb	r2,116(sp)
   88eb4:	d8001d85 	stb	zero,118(sp)
   88eb8:	88c00094 	ori	r3,r17,2
   88ebc:	80009c16 	blt	r16,zero,89130 <___vfiprintf_internal_r+0x1368>
   88ec0:	00bfdfc4 	movi	r2,-129
   88ec4:	88a2703a 	and	r17,r17,r2
   88ec8:	8c400094 	ori	r17,r17,2
   88ecc:	002b883a 	mov	r21,zero
   88ed0:	003f8506 	br	88ce8 <___vfiprintf_internal_r+0xf20>
   88ed4:	b029883a 	mov	r20,r22
   88ed8:	003c0b06 	br	87f08 <___vfiprintf_internal_r+0x140>
   88edc:	04e7c83a 	sub	r19,zero,r19
   88ee0:	05400b44 	movi	r21,45
   88ee4:	9804c03a 	cmpne	r2,r19,zero
   88ee8:	0529c83a 	sub	r20,zero,r20
   88eec:	dd401d85 	stb	r21,118(sp)
   88ef0:	a0a9c83a 	sub	r20,r20,r2
   88ef4:	80009716 	blt	r16,zero,89154 <___vfiprintf_internal_r+0x138c>
   88ef8:	00bfdfc4 	movi	r2,-129
   88efc:	88a2703a 	and	r17,r17,r2
   88f00:	003db006 	br	885c4 <___vfiprintf_internal_r+0x7fc>
   88f04:	b0c00007 	ldb	r3,0(r22)
   88f08:	003c0c06 	br	87f3c <___vfiprintf_internal_r+0x174>
   88f0c:	8880100c 	andi	r2,r17,64
   88f10:	d8001d85 	stb	zero,118(sp)
   88f14:	1000461e 	bne	r2,zero,89030 <___vfiprintf_internal_r+0x1268>
   88f18:	d9002217 	ldw	r4,136(sp)
   88f1c:	0029883a 	mov	r20,zero
   88f20:	20800104 	addi	r2,r4,4
   88f24:	24c00017 	ldw	r19,0(r4)
   88f28:	803df80e 	bge	r16,zero,8870c <___vfiprintf_internal_r+0x944>
   88f2c:	9d06b03a 	or	r3,r19,r20
   88f30:	d8802215 	stw	r2,136(sp)
   88f34:	183d5e1e 	bne	r3,zero,884b0 <___vfiprintf_internal_r+0x6e8>
   88f38:	002b883a 	mov	r21,zero
   88f3c:	0005883a 	mov	r2,zero
   88f40:	003e1006 	br	88784 <___vfiprintf_internal_r+0x9bc>
   88f44:	8880040c 	andi	r2,r17,16
   88f48:	1000321e 	bne	r2,zero,89014 <___vfiprintf_internal_r+0x124c>
   88f4c:	8c40100c 	andi	r17,r17,64
   88f50:	88008d26 	beq	r17,zero,89188 <___vfiprintf_internal_r+0x13c0>
   88f54:	d9402217 	ldw	r5,136(sp)
   88f58:	d8c02417 	ldw	r3,144(sp)
   88f5c:	28800017 	ldw	r2,0(r5)
   88f60:	29400104 	addi	r5,r5,4
   88f64:	d9402215 	stw	r5,136(sp)
   88f68:	10c0000d 	sth	r3,0(r2)
   88f6c:	003bca06 	br	87e98 <___vfiprintf_internal_r+0xd0>
   88f70:	8880100c 	andi	r2,r17,64
   88f74:	10003a26 	beq	r2,zero,89060 <___vfiprintf_internal_r+0x1298>
   88f78:	d8802217 	ldw	r2,136(sp)
   88f7c:	14c0000f 	ldh	r19,0(r2)
   88f80:	10800104 	addi	r2,r2,4
   88f84:	d8802215 	stw	r2,136(sp)
   88f88:	9829d7fa 	srai	r20,r19,31
   88f8c:	a005883a 	mov	r2,r20
   88f90:	003d8506 	br	885a8 <___vfiprintf_internal_r+0x7e0>
   88f94:	8880100c 	andi	r2,r17,64
   88f98:	10002b26 	beq	r2,zero,89048 <___vfiprintf_internal_r+0x1280>
   88f9c:	d8802217 	ldw	r2,136(sp)
   88fa0:	0029883a 	mov	r20,zero
   88fa4:	14c0000b 	ldhu	r19,0(r2)
   88fa8:	10800104 	addi	r2,r2,4
   88fac:	d8802215 	stw	r2,136(sp)
   88fb0:	003d5d06 	br	88528 <___vfiprintf_internal_r+0x760>
   88fb4:	d9402017 	ldw	r5,128(sp)
   88fb8:	d9002117 	ldw	r4,132(sp)
   88fbc:	d9801a04 	addi	r6,sp,104
   88fc0:	d8c02a15 	stw	r3,168(sp)
   88fc4:	d9c02b15 	stw	r7,172(sp)
   88fc8:	0087cb40 	call	87cb4 <__sprint_r.part.0>
   88fcc:	d8c02a17 	ldw	r3,168(sp)
   88fd0:	d9c02b17 	ldw	r7,172(sp)
   88fd4:	103eb41e 	bne	r2,zero,88aa8 <___vfiprintf_internal_r+0xce0>
   88fd8:	d9001b17 	ldw	r4,108(sp)
   88fdc:	d8801c17 	ldw	r2,112(sp)
   88fe0:	d811883a 	mov	r8,sp
   88fe4:	21400044 	addi	r5,r4,1
   88fe8:	003e6706 	br	88988 <___vfiprintf_internal_r+0xbc0>
   88fec:	00bfffc4 	movi	r2,-1
   88ff0:	003c4a06 	br	8811c <___vfiprintf_internal_r+0x354>
   88ff4:	9805883a 	mov	r2,r19
   88ff8:	003ee806 	br	88b9c <___vfiprintf_internal_r+0xdd4>
   88ffc:	d8c02217 	ldw	r3,136(sp)
   89000:	0029883a 	mov	r20,zero
   89004:	18800104 	addi	r2,r3,4
   89008:	1cc0000b 	ldhu	r19,0(r3)
   8900c:	803f9e0e 	bge	r16,zero,88e88 <___vfiprintf_internal_r+0x10c0>
   89010:	003dd706 	br	88770 <___vfiprintf_internal_r+0x9a8>
   89014:	d8c02217 	ldw	r3,136(sp)
   89018:	d9002417 	ldw	r4,144(sp)
   8901c:	18800017 	ldw	r2,0(r3)
   89020:	18c00104 	addi	r3,r3,4
   89024:	d8c02215 	stw	r3,136(sp)
   89028:	11000015 	stw	r4,0(r2)
   8902c:	003b9a06 	br	87e98 <___vfiprintf_internal_r+0xd0>
   89030:	d8c02217 	ldw	r3,136(sp)
   89034:	0029883a 	mov	r20,zero
   89038:	18800104 	addi	r2,r3,4
   8903c:	1cc0000b 	ldhu	r19,0(r3)
   89040:	803db20e 	bge	r16,zero,8870c <___vfiprintf_internal_r+0x944>
   89044:	003fb906 	br	88f2c <___vfiprintf_internal_r+0x1164>
   89048:	d9002217 	ldw	r4,136(sp)
   8904c:	0029883a 	mov	r20,zero
   89050:	24c00017 	ldw	r19,0(r4)
   89054:	21000104 	addi	r4,r4,4
   89058:	d9002215 	stw	r4,136(sp)
   8905c:	003d3206 	br	88528 <___vfiprintf_internal_r+0x760>
   89060:	d8c02217 	ldw	r3,136(sp)
   89064:	1cc00017 	ldw	r19,0(r3)
   89068:	18c00104 	addi	r3,r3,4
   8906c:	d8c02215 	stw	r3,136(sp)
   89070:	9829d7fa 	srai	r20,r19,31
   89074:	a005883a 	mov	r2,r20
   89078:	003d4b06 	br	885a8 <___vfiprintf_internal_r+0x7e0>
   8907c:	0009883a 	mov	r4,zero
   89080:	01400044 	movi	r5,1
   89084:	d811883a 	mov	r8,sp
   89088:	003e4f06 	br	889c8 <___vfiprintf_internal_r+0xc00>
   8908c:	d8c02215 	stw	r3,136(sp)
   89090:	002b883a 	mov	r21,zero
   89094:	003db806 	br	88778 <___vfiprintf_internal_r+0x9b0>
   89098:	d811883a 	mov	r8,sp
   8909c:	003e9606 	br	88af8 <___vfiprintf_internal_r+0xd30>
   890a0:	01000134 	movhi	r4,4
   890a4:	21007704 	addi	r4,r4,476
   890a8:	d9002315 	stw	r4,140(sp)
   890ac:	003e6306 	br	88a3c <___vfiprintf_internal_r+0xc74>
   890b0:	b0c00043 	ldbu	r3,1(r22)
   890b4:	8c400814 	ori	r17,r17,32
   890b8:	b5800044 	addi	r22,r22,1
   890bc:	18c03fcc 	andi	r3,r3,255
   890c0:	18c0201c 	xori	r3,r3,128
   890c4:	18ffe004 	addi	r3,r3,-128
   890c8:	003b9c06 	br	87f3c <___vfiprintf_internal_r+0x174>
   890cc:	b809883a 	mov	r4,r23
   890d0:	da002a15 	stw	r8,168(sp)
   890d4:	00805380 	call	80538 <strlen>
   890d8:	1029883a 	mov	r20,r2
   890dc:	dd401d83 	ldbu	r21,118(sp)
   890e0:	df002215 	stw	fp,136(sp)
   890e4:	0021883a 	mov	r16,zero
   890e8:	da002a17 	ldw	r8,168(sp)
   890ec:	003c3906 	br	881d4 <___vfiprintf_internal_r+0x40c>
   890f0:	d9402017 	ldw	r5,128(sp)
   890f4:	d9002117 	ldw	r4,132(sp)
   890f8:	d9801a04 	addi	r6,sp,104
   890fc:	0087cb40 	call	87cb4 <__sprint_r.part.0>
   89100:	103e691e 	bne	r2,zero,88aa8 <___vfiprintf_internal_r+0xce0>
   89104:	d9001b17 	ldw	r4,108(sp)
   89108:	d8801c17 	ldw	r2,112(sp)
   8910c:	d811883a 	mov	r8,sp
   89110:	21400044 	addi	r5,r4,1
   89114:	003e2e06 	br	889d0 <___vfiprintf_internal_r+0xc08>
   89118:	01000134 	movhi	r4,4
   8911c:	21007b04 	addi	r4,r4,492
   89120:	d9002315 	stw	r4,140(sp)
   89124:	d9001b17 	ldw	r4,108(sp)
   89128:	21000044 	addi	r4,r4,1
   8912c:	003c5e06 	br	882a8 <___vfiprintf_internal_r+0x4e0>
   89130:	002b883a 	mov	r21,zero
   89134:	00800084 	movi	r2,2
   89138:	10803fcc 	andi	r2,r2,255
   8913c:	01000044 	movi	r4,1
   89140:	11002b26 	beq	r2,r4,891f0 <___vfiprintf_internal_r+0x1428>
   89144:	01000084 	movi	r4,2
   89148:	11002b1e 	bne	r2,r4,891f8 <___vfiprintf_internal_r+0x1430>
   8914c:	1823883a 	mov	r17,r3
   89150:	003ee506 	br	88ce8 <___vfiprintf_internal_r+0xf20>
   89154:	8807883a 	mov	r3,r17
   89158:	00800044 	movi	r2,1
   8915c:	003ff606 	br	89138 <___vfiprintf_internal_r+0x1370>
   89160:	00800184 	movi	r2,6
   89164:	1400012e 	bgeu	r2,r16,8916c <___vfiprintf_internal_r+0x13a4>
   89168:	1021883a 	mov	r16,r2
   8916c:	8029883a 	mov	r20,r16
   89170:	8027883a 	mov	r19,r16
   89174:	80002216 	blt	r16,zero,89200 <___vfiprintf_internal_r+0x1438>
   89178:	05c00134 	movhi	r23,4
   8917c:	df002215 	stw	fp,136(sp)
   89180:	bdc01b04 	addi	r23,r23,108
   89184:	003cfb06 	br	88574 <___vfiprintf_internal_r+0x7ac>
   89188:	d9002217 	ldw	r4,136(sp)
   8918c:	d9402417 	ldw	r5,144(sp)
   89190:	20800017 	ldw	r2,0(r4)
   89194:	21000104 	addi	r4,r4,4
   89198:	d9002215 	stw	r4,136(sp)
   8919c:	11400015 	stw	r5,0(r2)
   891a0:	003b3d06 	br	87e98 <___vfiprintf_internal_r+0xd0>
   891a4:	01400134 	movhi	r5,4
   891a8:	29407b04 	addi	r5,r5,492
   891ac:	d9402315 	stw	r5,140(sp)
   891b0:	d9401b17 	ldw	r5,108(sp)
   891b4:	29400044 	addi	r5,r5,1
   891b8:	003e6d06 	br	88b70 <___vfiprintf_internal_r+0xda8>
   891bc:	8029883a 	mov	r20,r16
   891c0:	dd401d83 	ldbu	r21,118(sp)
   891c4:	df002215 	stw	fp,136(sp)
   891c8:	0021883a 	mov	r16,zero
   891cc:	003c0106 	br	881d4 <___vfiprintf_internal_r+0x40c>
   891d0:	00c00134 	movhi	r3,4
   891d4:	18c07704 	addi	r3,r3,476
   891d8:	d8c02315 	stw	r3,140(sp)
   891dc:	280d883a 	mov	r6,r5
   891e0:	003c6906 	br	88388 <___vfiprintf_internal_r+0x5c0>
   891e4:	802d883a 	mov	r22,r16
   891e8:	0021883a 	mov	r16,zero
   891ec:	003b5406 	br	87f40 <___vfiprintf_internal_r+0x178>
   891f0:	1823883a 	mov	r17,r3
   891f4:	003cf306 	br	885c4 <___vfiprintf_internal_r+0x7fc>
   891f8:	1823883a 	mov	r17,r3
   891fc:	003cad06 	br	884b4 <___vfiprintf_internal_r+0x6ec>
   89200:	0027883a 	mov	r19,zero
   89204:	003fdc06 	br	89178 <___vfiprintf_internal_r+0x13b0>
   89208:	d9402217 	ldw	r5,136(sp)
   8920c:	8005883a 	mov	r2,r16
   89210:	b0c00043 	ldbu	r3,1(r22)
   89214:	2c000017 	ldw	r16,0(r5)
   89218:	29000104 	addi	r4,r5,4
   8921c:	d9002215 	stw	r4,136(sp)
   89220:	102d883a 	mov	r22,r2
   89224:	803fa50e 	bge	r16,zero,890bc <___vfiprintf_internal_r+0x12f4>
   89228:	18c03fcc 	andi	r3,r3,255
   8922c:	18c0201c 	xori	r3,r3,128
   89230:	043fffc4 	movi	r16,-1
   89234:	18ffe004 	addi	r3,r3,-128
   89238:	003b4006 	br	87f3c <___vfiprintf_internal_r+0x174>
   8923c:	d9402303 	ldbu	r5,140(sp)
   89240:	d9401d85 	stb	r5,118(sp)
   89244:	003cae06 	br	88500 <___vfiprintf_internal_r+0x738>
   89248:	d8c02303 	ldbu	r3,140(sp)
   8924c:	d8c01d85 	stb	r3,118(sp)
   89250:	003d1406 	br	886a4 <___vfiprintf_internal_r+0x8dc>
   89254:	d8c02303 	ldbu	r3,140(sp)
   89258:	d8c01d85 	stb	r3,118(sp)
   8925c:	003cca06 	br	88588 <___vfiprintf_internal_r+0x7c0>
   89260:	8880004c 	andi	r2,r17,1
   89264:	002b883a 	mov	r21,zero
   89268:	10000526 	beq	r2,zero,89280 <___vfiprintf_internal_r+0x14b8>
   8926c:	00800c04 	movi	r2,48
   89270:	d88019c5 	stb	r2,103(sp)
   89274:	dd002817 	ldw	r20,160(sp)
   89278:	ddc019c4 	addi	r23,sp,103
   8927c:	003bd506 	br	881d4 <___vfiprintf_internal_r+0x40c>
   89280:	0029883a 	mov	r20,zero
   89284:	ddc01a04 	addi	r23,sp,104
   89288:	003bd206 	br	881d4 <___vfiprintf_internal_r+0x40c>
   8928c:	d9002303 	ldbu	r4,140(sp)
   89290:	d9001d85 	stb	r4,118(sp)
   89294:	003da606 	br	88930 <___vfiprintf_internal_r+0xb68>
   89298:	d8c02303 	ldbu	r3,140(sp)
   8929c:	d8c01d85 	stb	r3,118(sp)
   892a0:	003c7606 	br	8847c <___vfiprintf_internal_r+0x6b4>
   892a4:	d8c02303 	ldbu	r3,140(sp)
   892a8:	d8c01d85 	stb	r3,118(sp)
   892ac:	003c6506 	br	88444 <___vfiprintf_internal_r+0x67c>
   892b0:	d9002303 	ldbu	r4,140(sp)
   892b4:	d9001d85 	stb	r4,118(sp)
   892b8:	003d3d06 	br	887b0 <___vfiprintf_internal_r+0x9e8>
   892bc:	d8c02303 	ldbu	r3,140(sp)
   892c0:	d8c01d85 	stb	r3,118(sp)
   892c4:	003d1d06 	br	8873c <___vfiprintf_internal_r+0x974>
   892c8:	d8c02303 	ldbu	r3,140(sp)
   892cc:	d8c01d85 	stb	r3,118(sp)
   892d0:	003d0306 	br	886e0 <___vfiprintf_internal_r+0x918>

000892d4 <__vfiprintf_internal>:
   892d4:	00800134 	movhi	r2,4
   892d8:	10877904 	addi	r2,r2,7652
   892dc:	300f883a 	mov	r7,r6
   892e0:	280d883a 	mov	r6,r5
   892e4:	200b883a 	mov	r5,r4
   892e8:	11000017 	ldw	r4,0(r2)
   892ec:	0087dc81 	jmpi	87dc8 <___vfiprintf_internal_r>

000892f0 <__sbprintf>:
   892f0:	2880030b 	ldhu	r2,12(r5)
   892f4:	2ac01917 	ldw	r11,100(r5)
   892f8:	2a80038b 	ldhu	r10,14(r5)
   892fc:	2a400717 	ldw	r9,28(r5)
   89300:	2a000917 	ldw	r8,36(r5)
   89304:	defee204 	addi	sp,sp,-1144
   89308:	00c10004 	movi	r3,1024
   8930c:	dc011a15 	stw	r16,1128(sp)
   89310:	10bfff4c 	andi	r2,r2,65533
   89314:	2821883a 	mov	r16,r5
   89318:	d8cb883a 	add	r5,sp,r3
   8931c:	dc811c15 	stw	r18,1136(sp)
   89320:	dc411b15 	stw	r17,1132(sp)
   89324:	dfc11d15 	stw	ra,1140(sp)
   89328:	2025883a 	mov	r18,r4
   8932c:	d881030d 	sth	r2,1036(sp)
   89330:	dac11915 	stw	r11,1124(sp)
   89334:	da81038d 	sth	r10,1038(sp)
   89338:	da410715 	stw	r9,1052(sp)
   8933c:	da010915 	stw	r8,1060(sp)
   89340:	dec10015 	stw	sp,1024(sp)
   89344:	dec10415 	stw	sp,1040(sp)
   89348:	d8c10215 	stw	r3,1032(sp)
   8934c:	d8c10515 	stw	r3,1044(sp)
   89350:	d8010615 	stw	zero,1048(sp)
   89354:	0087dc80 	call	87dc8 <___vfiprintf_internal_r>
   89358:	1023883a 	mov	r17,r2
   8935c:	10000416 	blt	r2,zero,89370 <__sbprintf+0x80>
   89360:	d9410004 	addi	r5,sp,1024
   89364:	9009883a 	mov	r4,r18
   89368:	00845a40 	call	845a4 <_fflush_r>
   8936c:	10000d1e 	bne	r2,zero,893a4 <__sbprintf+0xb4>
   89370:	d881030b 	ldhu	r2,1036(sp)
   89374:	1080100c 	andi	r2,r2,64
   89378:	10000326 	beq	r2,zero,89388 <__sbprintf+0x98>
   8937c:	8080030b 	ldhu	r2,12(r16)
   89380:	10801014 	ori	r2,r2,64
   89384:	8080030d 	sth	r2,12(r16)
   89388:	8805883a 	mov	r2,r17
   8938c:	dfc11d17 	ldw	ra,1140(sp)
   89390:	dc811c17 	ldw	r18,1136(sp)
   89394:	dc411b17 	ldw	r17,1132(sp)
   89398:	dc011a17 	ldw	r16,1128(sp)
   8939c:	dec11e04 	addi	sp,sp,1144
   893a0:	f800283a 	ret
   893a4:	047fffc4 	movi	r17,-1
   893a8:	003ff106 	br	89370 <__sbprintf+0x80>

000893ac <_write_r>:
   893ac:	defffd04 	addi	sp,sp,-12
   893b0:	2805883a 	mov	r2,r5
   893b4:	dc000015 	stw	r16,0(sp)
   893b8:	04000134 	movhi	r16,4
   893bc:	dc400115 	stw	r17,4(sp)
   893c0:	300b883a 	mov	r5,r6
   893c4:	84078e04 	addi	r16,r16,7736
   893c8:	2023883a 	mov	r17,r4
   893cc:	380d883a 	mov	r6,r7
   893d0:	1009883a 	mov	r4,r2
   893d4:	dfc00215 	stw	ra,8(sp)
   893d8:	80000015 	stw	zero,0(r16)
   893dc:	008dbfc0 	call	8dbfc <write>
   893e0:	00ffffc4 	movi	r3,-1
   893e4:	10c00526 	beq	r2,r3,893fc <_write_r+0x50>
   893e8:	dfc00217 	ldw	ra,8(sp)
   893ec:	dc400117 	ldw	r17,4(sp)
   893f0:	dc000017 	ldw	r16,0(sp)
   893f4:	dec00304 	addi	sp,sp,12
   893f8:	f800283a 	ret
   893fc:	80c00017 	ldw	r3,0(r16)
   89400:	183ff926 	beq	r3,zero,893e8 <_write_r+0x3c>
   89404:	88c00015 	stw	r3,0(r17)
   89408:	003ff706 	br	893e8 <_write_r+0x3c>

0008940c <_close_r>:
   8940c:	defffd04 	addi	sp,sp,-12
   89410:	dc000015 	stw	r16,0(sp)
   89414:	04000134 	movhi	r16,4
   89418:	dc400115 	stw	r17,4(sp)
   8941c:	84078e04 	addi	r16,r16,7736
   89420:	2023883a 	mov	r17,r4
   89424:	2809883a 	mov	r4,r5
   89428:	dfc00215 	stw	ra,8(sp)
   8942c:	80000015 	stw	zero,0(r16)
   89430:	008d3740 	call	8d374 <close>
   89434:	00ffffc4 	movi	r3,-1
   89438:	10c00526 	beq	r2,r3,89450 <_close_r+0x44>
   8943c:	dfc00217 	ldw	ra,8(sp)
   89440:	dc400117 	ldw	r17,4(sp)
   89444:	dc000017 	ldw	r16,0(sp)
   89448:	dec00304 	addi	sp,sp,12
   8944c:	f800283a 	ret
   89450:	80c00017 	ldw	r3,0(r16)
   89454:	183ff926 	beq	r3,zero,8943c <_close_r+0x30>
   89458:	88c00015 	stw	r3,0(r17)
   8945c:	003ff706 	br	8943c <_close_r+0x30>

00089460 <_calloc_r>:
   89460:	defffe04 	addi	sp,sp,-8
   89464:	2805883a 	mov	r2,r5
   89468:	dc000015 	stw	r16,0(sp)
   8946c:	300b883a 	mov	r5,r6
   89470:	2021883a 	mov	r16,r4
   89474:	1009883a 	mov	r4,r2
   89478:	dfc00115 	stw	ra,4(sp)
   8947c:	008aa6c0 	call	8aa6c <__mulsi3>
   89480:	100b883a 	mov	r5,r2
   89484:	8009883a 	mov	r4,r16
   89488:	00856fc0 	call	856fc <_malloc_r>
   8948c:	10002926 	beq	r2,zero,89534 <_calloc_r+0xd4>
   89490:	11bfff17 	ldw	r6,-4(r2)
   89494:	1021883a 	mov	r16,r2
   89498:	00bfff04 	movi	r2,-4
   8949c:	308c703a 	and	r6,r6,r2
   894a0:	00c00904 	movi	r3,36
   894a4:	308d883a 	add	r6,r6,r2
   894a8:	19801636 	bltu	r3,r6,89504 <_calloc_r+0xa4>
   894ac:	008004c4 	movi	r2,19
   894b0:	11800b2e 	bgeu	r2,r6,894e0 <_calloc_r+0x80>
   894b4:	80000015 	stw	zero,0(r16)
   894b8:	80000115 	stw	zero,4(r16)
   894bc:	008006c4 	movi	r2,27
   894c0:	11801a2e 	bgeu	r2,r6,8952c <_calloc_r+0xcc>
   894c4:	80000215 	stw	zero,8(r16)
   894c8:	80000315 	stw	zero,12(r16)
   894cc:	30c0151e 	bne	r6,r3,89524 <_calloc_r+0xc4>
   894d0:	80000415 	stw	zero,16(r16)
   894d4:	80800604 	addi	r2,r16,24
   894d8:	80000515 	stw	zero,20(r16)
   894dc:	00000106 	br	894e4 <_calloc_r+0x84>
   894e0:	8005883a 	mov	r2,r16
   894e4:	10000015 	stw	zero,0(r2)
   894e8:	10000115 	stw	zero,4(r2)
   894ec:	10000215 	stw	zero,8(r2)
   894f0:	8005883a 	mov	r2,r16
   894f4:	dfc00117 	ldw	ra,4(sp)
   894f8:	dc000017 	ldw	r16,0(sp)
   894fc:	dec00204 	addi	sp,sp,8
   89500:	f800283a 	ret
   89504:	000b883a 	mov	r5,zero
   89508:	8009883a 	mov	r4,r16
   8950c:	00862900 	call	86290 <memset>
   89510:	8005883a 	mov	r2,r16
   89514:	dfc00117 	ldw	ra,4(sp)
   89518:	dc000017 	ldw	r16,0(sp)
   8951c:	dec00204 	addi	sp,sp,8
   89520:	f800283a 	ret
   89524:	80800404 	addi	r2,r16,16
   89528:	003fee06 	br	894e4 <_calloc_r+0x84>
   8952c:	80800204 	addi	r2,r16,8
   89530:	003fec06 	br	894e4 <_calloc_r+0x84>
   89534:	0005883a 	mov	r2,zero
   89538:	003fee06 	br	894f4 <_calloc_r+0x94>

0008953c <_fclose_r>:
   8953c:	28003926 	beq	r5,zero,89624 <_fclose_r+0xe8>
   89540:	defffc04 	addi	sp,sp,-16
   89544:	dc400115 	stw	r17,4(sp)
   89548:	dc000015 	stw	r16,0(sp)
   8954c:	dfc00315 	stw	ra,12(sp)
   89550:	dc800215 	stw	r18,8(sp)
   89554:	2023883a 	mov	r17,r4
   89558:	2821883a 	mov	r16,r5
   8955c:	20000226 	beq	r4,zero,89568 <_fclose_r+0x2c>
   89560:	20800e17 	ldw	r2,56(r4)
   89564:	10002726 	beq	r2,zero,89604 <_fclose_r+0xc8>
   89568:	8080030f 	ldh	r2,12(r16)
   8956c:	1000071e 	bne	r2,zero,8958c <_fclose_r+0x50>
   89570:	0005883a 	mov	r2,zero
   89574:	dfc00317 	ldw	ra,12(sp)
   89578:	dc800217 	ldw	r18,8(sp)
   8957c:	dc400117 	ldw	r17,4(sp)
   89580:	dc000017 	ldw	r16,0(sp)
   89584:	dec00404 	addi	sp,sp,16
   89588:	f800283a 	ret
   8958c:	800b883a 	mov	r5,r16
   89590:	8809883a 	mov	r4,r17
   89594:	00843880 	call	84388 <__sflush_r>
   89598:	1025883a 	mov	r18,r2
   8959c:	80800b17 	ldw	r2,44(r16)
   895a0:	10000426 	beq	r2,zero,895b4 <_fclose_r+0x78>
   895a4:	81400717 	ldw	r5,28(r16)
   895a8:	8809883a 	mov	r4,r17
   895ac:	103ee83a 	callr	r2
   895b0:	10001616 	blt	r2,zero,8960c <_fclose_r+0xd0>
   895b4:	8080030b 	ldhu	r2,12(r16)
   895b8:	1080200c 	andi	r2,r2,128
   895bc:	1000151e 	bne	r2,zero,89614 <_fclose_r+0xd8>
   895c0:	81400c17 	ldw	r5,48(r16)
   895c4:	28000526 	beq	r5,zero,895dc <_fclose_r+0xa0>
   895c8:	80801004 	addi	r2,r16,64
   895cc:	28800226 	beq	r5,r2,895d8 <_fclose_r+0x9c>
   895d0:	8809883a 	mov	r4,r17
   895d4:	0084b040 	call	84b04 <_free_r>
   895d8:	80000c15 	stw	zero,48(r16)
   895dc:	81401117 	ldw	r5,68(r16)
   895e0:	28000326 	beq	r5,zero,895f0 <_fclose_r+0xb4>
   895e4:	8809883a 	mov	r4,r17
   895e8:	0084b040 	call	84b04 <_free_r>
   895ec:	80001115 	stw	zero,68(r16)
   895f0:	00849a00 	call	849a0 <__sfp_lock_acquire>
   895f4:	8000030d 	sth	zero,12(r16)
   895f8:	00849a40 	call	849a4 <__sfp_lock_release>
   895fc:	9005883a 	mov	r2,r18
   89600:	003fdc06 	br	89574 <_fclose_r+0x38>
   89604:	00849900 	call	84990 <__sinit>
   89608:	003fd706 	br	89568 <_fclose_r+0x2c>
   8960c:	04bfffc4 	movi	r18,-1
   89610:	003fe806 	br	895b4 <_fclose_r+0x78>
   89614:	81400417 	ldw	r5,16(r16)
   89618:	8809883a 	mov	r4,r17
   8961c:	0084b040 	call	84b04 <_free_r>
   89620:	003fe706 	br	895c0 <_fclose_r+0x84>
   89624:	0005883a 	mov	r2,zero
   89628:	f800283a 	ret

0008962c <fclose>:
   8962c:	00800134 	movhi	r2,4
   89630:	10877904 	addi	r2,r2,7652
   89634:	200b883a 	mov	r5,r4
   89638:	11000017 	ldw	r4,0(r2)
   8963c:	008953c1 	jmpi	8953c <_fclose_r>

00089640 <__fputwc>:
   89640:	defff804 	addi	sp,sp,-32
   89644:	dcc00415 	stw	r19,16(sp)
   89648:	dc800315 	stw	r18,12(sp)
   8964c:	dc000115 	stw	r16,4(sp)
   89650:	dfc00715 	stw	ra,28(sp)
   89654:	dd400615 	stw	r21,24(sp)
   89658:	dd000515 	stw	r20,20(sp)
   8965c:	dc400215 	stw	r17,8(sp)
   89660:	2027883a 	mov	r19,r4
   89664:	2825883a 	mov	r18,r5
   89668:	3021883a 	mov	r16,r6
   8966c:	00854ec0 	call	854ec <__locale_mb_cur_max>
   89670:	00c00044 	movi	r3,1
   89674:	10c03e26 	beq	r2,r3,89770 <__fputwc+0x130>
   89678:	81c01704 	addi	r7,r16,92
   8967c:	900d883a 	mov	r6,r18
   89680:	d80b883a 	mov	r5,sp
   89684:	9809883a 	mov	r4,r19
   89688:	0089b100 	call	89b10 <_wcrtomb_r>
   8968c:	1029883a 	mov	r20,r2
   89690:	00bfffc4 	movi	r2,-1
   89694:	a0802026 	beq	r20,r2,89718 <__fputwc+0xd8>
   89698:	d9400003 	ldbu	r5,0(sp)
   8969c:	a0001c26 	beq	r20,zero,89710 <__fputwc+0xd0>
   896a0:	0023883a 	mov	r17,zero
   896a4:	05400284 	movi	r21,10
   896a8:	00000906 	br	896d0 <__fputwc+0x90>
   896ac:	80800017 	ldw	r2,0(r16)
   896b0:	11400005 	stb	r5,0(r2)
   896b4:	80c00017 	ldw	r3,0(r16)
   896b8:	18c00044 	addi	r3,r3,1
   896bc:	80c00015 	stw	r3,0(r16)
   896c0:	8c400044 	addi	r17,r17,1
   896c4:	dc45883a 	add	r2,sp,r17
   896c8:	8d00112e 	bgeu	r17,r20,89710 <__fputwc+0xd0>
   896cc:	11400003 	ldbu	r5,0(r2)
   896d0:	80c00217 	ldw	r3,8(r16)
   896d4:	18ffffc4 	addi	r3,r3,-1
   896d8:	80c00215 	stw	r3,8(r16)
   896dc:	183ff30e 	bge	r3,zero,896ac <__fputwc+0x6c>
   896e0:	80800617 	ldw	r2,24(r16)
   896e4:	18801916 	blt	r3,r2,8974c <__fputwc+0x10c>
   896e8:	80800017 	ldw	r2,0(r16)
   896ec:	11400005 	stb	r5,0(r2)
   896f0:	80800017 	ldw	r2,0(r16)
   896f4:	10c00003 	ldbu	r3,0(r2)
   896f8:	10800044 	addi	r2,r2,1
   896fc:	1d402326 	beq	r3,r21,8978c <__fputwc+0x14c>
   89700:	80800015 	stw	r2,0(r16)
   89704:	8c400044 	addi	r17,r17,1
   89708:	dc45883a 	add	r2,sp,r17
   8970c:	8d3fef36 	bltu	r17,r20,896cc <__fputwc+0x8c>
   89710:	9005883a 	mov	r2,r18
   89714:	00000406 	br	89728 <__fputwc+0xe8>
   89718:	80c0030b 	ldhu	r3,12(r16)
   8971c:	a005883a 	mov	r2,r20
   89720:	18c01014 	ori	r3,r3,64
   89724:	80c0030d 	sth	r3,12(r16)
   89728:	dfc00717 	ldw	ra,28(sp)
   8972c:	dd400617 	ldw	r21,24(sp)
   89730:	dd000517 	ldw	r20,20(sp)
   89734:	dcc00417 	ldw	r19,16(sp)
   89738:	dc800317 	ldw	r18,12(sp)
   8973c:	dc400217 	ldw	r17,8(sp)
   89740:	dc000117 	ldw	r16,4(sp)
   89744:	dec00804 	addi	sp,sp,32
   89748:	f800283a 	ret
   8974c:	800d883a 	mov	r6,r16
   89750:	29403fcc 	andi	r5,r5,255
   89754:	9809883a 	mov	r4,r19
   89758:	00899b80 	call	899b8 <__swbuf_r>
   8975c:	10bfffe0 	cmpeqi	r2,r2,-1
   89760:	10803fcc 	andi	r2,r2,255
   89764:	103fd626 	beq	r2,zero,896c0 <__fputwc+0x80>
   89768:	00bfffc4 	movi	r2,-1
   8976c:	003fee06 	br	89728 <__fputwc+0xe8>
   89770:	90ffffc4 	addi	r3,r18,-1
   89774:	01003f84 	movi	r4,254
   89778:	20ffbf36 	bltu	r4,r3,89678 <__fputwc+0x38>
   8977c:	900b883a 	mov	r5,r18
   89780:	dc800005 	stb	r18,0(sp)
   89784:	1029883a 	mov	r20,r2
   89788:	003fc506 	br	896a0 <__fputwc+0x60>
   8978c:	800d883a 	mov	r6,r16
   89790:	a80b883a 	mov	r5,r21
   89794:	9809883a 	mov	r4,r19
   89798:	00899b80 	call	899b8 <__swbuf_r>
   8979c:	10bfffe0 	cmpeqi	r2,r2,-1
   897a0:	003fef06 	br	89760 <__fputwc+0x120>

000897a4 <_fputwc_r>:
   897a4:	3080030b 	ldhu	r2,12(r6)
   897a8:	10c8000c 	andi	r3,r2,8192
   897ac:	1800051e 	bne	r3,zero,897c4 <_fputwc_r+0x20>
   897b0:	30c01917 	ldw	r3,100(r6)
   897b4:	10880014 	ori	r2,r2,8192
   897b8:	3080030d 	sth	r2,12(r6)
   897bc:	18880014 	ori	r2,r3,8192
   897c0:	30801915 	stw	r2,100(r6)
   897c4:	00896401 	jmpi	89640 <__fputwc>

000897c8 <fputwc>:
   897c8:	00800134 	movhi	r2,4
   897cc:	defffc04 	addi	sp,sp,-16
   897d0:	10877904 	addi	r2,r2,7652
   897d4:	dc000115 	stw	r16,4(sp)
   897d8:	14000017 	ldw	r16,0(r2)
   897dc:	dc400215 	stw	r17,8(sp)
   897e0:	dfc00315 	stw	ra,12(sp)
   897e4:	2023883a 	mov	r17,r4
   897e8:	80000226 	beq	r16,zero,897f4 <fputwc+0x2c>
   897ec:	80800e17 	ldw	r2,56(r16)
   897f0:	10001026 	beq	r2,zero,89834 <fputwc+0x6c>
   897f4:	2880030b 	ldhu	r2,12(r5)
   897f8:	10c8000c 	andi	r3,r2,8192
   897fc:	1800051e 	bne	r3,zero,89814 <fputwc+0x4c>
   89800:	28c01917 	ldw	r3,100(r5)
   89804:	10880014 	ori	r2,r2,8192
   89808:	2880030d 	sth	r2,12(r5)
   8980c:	18880014 	ori	r2,r3,8192
   89810:	28801915 	stw	r2,100(r5)
   89814:	280d883a 	mov	r6,r5
   89818:	8009883a 	mov	r4,r16
   8981c:	880b883a 	mov	r5,r17
   89820:	dfc00317 	ldw	ra,12(sp)
   89824:	dc400217 	ldw	r17,8(sp)
   89828:	dc000117 	ldw	r16,4(sp)
   8982c:	dec00404 	addi	sp,sp,16
   89830:	00896401 	jmpi	89640 <__fputwc>
   89834:	8009883a 	mov	r4,r16
   89838:	d9400015 	stw	r5,0(sp)
   8983c:	00849900 	call	84990 <__sinit>
   89840:	d9400017 	ldw	r5,0(sp)
   89844:	003feb06 	br	897f4 <fputwc+0x2c>

00089848 <_fstat_r>:
   89848:	defffd04 	addi	sp,sp,-12
   8984c:	2805883a 	mov	r2,r5
   89850:	dc000015 	stw	r16,0(sp)
   89854:	04000134 	movhi	r16,4
   89858:	dc400115 	stw	r17,4(sp)
   8985c:	84078e04 	addi	r16,r16,7736
   89860:	2023883a 	mov	r17,r4
   89864:	300b883a 	mov	r5,r6
   89868:	1009883a 	mov	r4,r2
   8986c:	dfc00215 	stw	ra,8(sp)
   89870:	80000015 	stw	zero,0(r16)
   89874:	008d4b40 	call	8d4b4 <fstat>
   89878:	00ffffc4 	movi	r3,-1
   8987c:	10c00526 	beq	r2,r3,89894 <_fstat_r+0x4c>
   89880:	dfc00217 	ldw	ra,8(sp)
   89884:	dc400117 	ldw	r17,4(sp)
   89888:	dc000017 	ldw	r16,0(sp)
   8988c:	dec00304 	addi	sp,sp,12
   89890:	f800283a 	ret
   89894:	80c00017 	ldw	r3,0(r16)
   89898:	183ff926 	beq	r3,zero,89880 <_fstat_r+0x38>
   8989c:	88c00015 	stw	r3,0(r17)
   898a0:	003ff706 	br	89880 <_fstat_r+0x38>

000898a4 <_isatty_r>:
   898a4:	defffd04 	addi	sp,sp,-12
   898a8:	dc000015 	stw	r16,0(sp)
   898ac:	04000134 	movhi	r16,4
   898b0:	dc400115 	stw	r17,4(sp)
   898b4:	84078e04 	addi	r16,r16,7736
   898b8:	2023883a 	mov	r17,r4
   898bc:	2809883a 	mov	r4,r5
   898c0:	dfc00215 	stw	ra,8(sp)
   898c4:	80000015 	stw	zero,0(r16)
   898c8:	008d5a80 	call	8d5a8 <isatty>
   898cc:	00ffffc4 	movi	r3,-1
   898d0:	10c00526 	beq	r2,r3,898e8 <_isatty_r+0x44>
   898d4:	dfc00217 	ldw	ra,8(sp)
   898d8:	dc400117 	ldw	r17,4(sp)
   898dc:	dc000017 	ldw	r16,0(sp)
   898e0:	dec00304 	addi	sp,sp,12
   898e4:	f800283a 	ret
   898e8:	80c00017 	ldw	r3,0(r16)
   898ec:	183ff926 	beq	r3,zero,898d4 <_isatty_r+0x30>
   898f0:	88c00015 	stw	r3,0(r17)
   898f4:	003ff706 	br	898d4 <_isatty_r+0x30>

000898f8 <_lseek_r>:
   898f8:	defffd04 	addi	sp,sp,-12
   898fc:	2805883a 	mov	r2,r5
   89900:	dc000015 	stw	r16,0(sp)
   89904:	04000134 	movhi	r16,4
   89908:	dc400115 	stw	r17,4(sp)
   8990c:	300b883a 	mov	r5,r6
   89910:	84078e04 	addi	r16,r16,7736
   89914:	2023883a 	mov	r17,r4
   89918:	380d883a 	mov	r6,r7
   8991c:	1009883a 	mov	r4,r2
   89920:	dfc00215 	stw	ra,8(sp)
   89924:	80000015 	stw	zero,0(r16)
   89928:	008d77c0 	call	8d77c <lseek>
   8992c:	00ffffc4 	movi	r3,-1
   89930:	10c00526 	beq	r2,r3,89948 <_lseek_r+0x50>
   89934:	dfc00217 	ldw	ra,8(sp)
   89938:	dc400117 	ldw	r17,4(sp)
   8993c:	dc000017 	ldw	r16,0(sp)
   89940:	dec00304 	addi	sp,sp,12
   89944:	f800283a 	ret
   89948:	80c00017 	ldw	r3,0(r16)
   8994c:	183ff926 	beq	r3,zero,89934 <_lseek_r+0x3c>
   89950:	88c00015 	stw	r3,0(r17)
   89954:	003ff706 	br	89934 <_lseek_r+0x3c>

00089958 <_read_r>:
   89958:	defffd04 	addi	sp,sp,-12
   8995c:	2805883a 	mov	r2,r5
   89960:	dc000015 	stw	r16,0(sp)
   89964:	04000134 	movhi	r16,4
   89968:	dc400115 	stw	r17,4(sp)
   8996c:	300b883a 	mov	r5,r6
   89970:	84078e04 	addi	r16,r16,7736
   89974:	2023883a 	mov	r17,r4
   89978:	380d883a 	mov	r6,r7
   8997c:	1009883a 	mov	r4,r2
   89980:	dfc00215 	stw	ra,8(sp)
   89984:	80000015 	stw	zero,0(r16)
   89988:	008d9580 	call	8d958 <read>
   8998c:	00ffffc4 	movi	r3,-1
   89990:	10c00526 	beq	r2,r3,899a8 <_read_r+0x50>
   89994:	dfc00217 	ldw	ra,8(sp)
   89998:	dc400117 	ldw	r17,4(sp)
   8999c:	dc000017 	ldw	r16,0(sp)
   899a0:	dec00304 	addi	sp,sp,12
   899a4:	f800283a 	ret
   899a8:	80c00017 	ldw	r3,0(r16)
   899ac:	183ff926 	beq	r3,zero,89994 <_read_r+0x3c>
   899b0:	88c00015 	stw	r3,0(r17)
   899b4:	003ff706 	br	89994 <_read_r+0x3c>

000899b8 <__swbuf_r>:
   899b8:	defffb04 	addi	sp,sp,-20
   899bc:	dcc00315 	stw	r19,12(sp)
   899c0:	dc800215 	stw	r18,8(sp)
   899c4:	dc000015 	stw	r16,0(sp)
   899c8:	dfc00415 	stw	ra,16(sp)
   899cc:	dc400115 	stw	r17,4(sp)
   899d0:	2025883a 	mov	r18,r4
   899d4:	2827883a 	mov	r19,r5
   899d8:	3021883a 	mov	r16,r6
   899dc:	20000226 	beq	r4,zero,899e8 <__swbuf_r+0x30>
   899e0:	20800e17 	ldw	r2,56(r4)
   899e4:	10004226 	beq	r2,zero,89af0 <__swbuf_r+0x138>
   899e8:	80800617 	ldw	r2,24(r16)
   899ec:	8100030b 	ldhu	r4,12(r16)
   899f0:	80800215 	stw	r2,8(r16)
   899f4:	2080020c 	andi	r2,r4,8
   899f8:	10003626 	beq	r2,zero,89ad4 <__swbuf_r+0x11c>
   899fc:	80c00417 	ldw	r3,16(r16)
   89a00:	18003426 	beq	r3,zero,89ad4 <__swbuf_r+0x11c>
   89a04:	2088000c 	andi	r2,r4,8192
   89a08:	9c403fcc 	andi	r17,r19,255
   89a0c:	10001a26 	beq	r2,zero,89a78 <__swbuf_r+0xc0>
   89a10:	80800017 	ldw	r2,0(r16)
   89a14:	81000517 	ldw	r4,20(r16)
   89a18:	10c7c83a 	sub	r3,r2,r3
   89a1c:	1900200e 	bge	r3,r4,89aa0 <__swbuf_r+0xe8>
   89a20:	18c00044 	addi	r3,r3,1
   89a24:	81000217 	ldw	r4,8(r16)
   89a28:	11400044 	addi	r5,r2,1
   89a2c:	81400015 	stw	r5,0(r16)
   89a30:	213fffc4 	addi	r4,r4,-1
   89a34:	81000215 	stw	r4,8(r16)
   89a38:	14c00005 	stb	r19,0(r2)
   89a3c:	80800517 	ldw	r2,20(r16)
   89a40:	10c01e26 	beq	r2,r3,89abc <__swbuf_r+0x104>
   89a44:	8080030b 	ldhu	r2,12(r16)
   89a48:	1080004c 	andi	r2,r2,1
   89a4c:	10000226 	beq	r2,zero,89a58 <__swbuf_r+0xa0>
   89a50:	00800284 	movi	r2,10
   89a54:	88801926 	beq	r17,r2,89abc <__swbuf_r+0x104>
   89a58:	8805883a 	mov	r2,r17
   89a5c:	dfc00417 	ldw	ra,16(sp)
   89a60:	dcc00317 	ldw	r19,12(sp)
   89a64:	dc800217 	ldw	r18,8(sp)
   89a68:	dc400117 	ldw	r17,4(sp)
   89a6c:	dc000017 	ldw	r16,0(sp)
   89a70:	dec00504 	addi	sp,sp,20
   89a74:	f800283a 	ret
   89a78:	81401917 	ldw	r5,100(r16)
   89a7c:	00b7ffc4 	movi	r2,-8193
   89a80:	21080014 	ori	r4,r4,8192
   89a84:	2884703a 	and	r2,r5,r2
   89a88:	80801915 	stw	r2,100(r16)
   89a8c:	80800017 	ldw	r2,0(r16)
   89a90:	8100030d 	sth	r4,12(r16)
   89a94:	81000517 	ldw	r4,20(r16)
   89a98:	10c7c83a 	sub	r3,r2,r3
   89a9c:	193fe016 	blt	r3,r4,89a20 <__swbuf_r+0x68>
   89aa0:	800b883a 	mov	r5,r16
   89aa4:	9009883a 	mov	r4,r18
   89aa8:	00845a40 	call	845a4 <_fflush_r>
   89aac:	1000071e 	bne	r2,zero,89acc <__swbuf_r+0x114>
   89ab0:	80800017 	ldw	r2,0(r16)
   89ab4:	00c00044 	movi	r3,1
   89ab8:	003fda06 	br	89a24 <__swbuf_r+0x6c>
   89abc:	800b883a 	mov	r5,r16
   89ac0:	9009883a 	mov	r4,r18
   89ac4:	00845a40 	call	845a4 <_fflush_r>
   89ac8:	103fe326 	beq	r2,zero,89a58 <__swbuf_r+0xa0>
   89acc:	00bfffc4 	movi	r2,-1
   89ad0:	003fe206 	br	89a5c <__swbuf_r+0xa4>
   89ad4:	800b883a 	mov	r5,r16
   89ad8:	9009883a 	mov	r4,r18
   89adc:	00829840 	call	82984 <__swsetup_r>
   89ae0:	103ffa1e 	bne	r2,zero,89acc <__swbuf_r+0x114>
   89ae4:	8100030b 	ldhu	r4,12(r16)
   89ae8:	80c00417 	ldw	r3,16(r16)
   89aec:	003fc506 	br	89a04 <__swbuf_r+0x4c>
   89af0:	00849900 	call	84990 <__sinit>
   89af4:	003fbc06 	br	899e8 <__swbuf_r+0x30>

00089af8 <__swbuf>:
   89af8:	00800134 	movhi	r2,4
   89afc:	10877904 	addi	r2,r2,7652
   89b00:	280d883a 	mov	r6,r5
   89b04:	200b883a 	mov	r5,r4
   89b08:	11000017 	ldw	r4,0(r2)
   89b0c:	00899b81 	jmpi	899b8 <__swbuf_r>

00089b10 <_wcrtomb_r>:
   89b10:	defff604 	addi	sp,sp,-40
   89b14:	00800134 	movhi	r2,4
   89b18:	dc800815 	stw	r18,32(sp)
   89b1c:	dc400715 	stw	r17,28(sp)
   89b20:	dc000615 	stw	r16,24(sp)
   89b24:	10877d04 	addi	r2,r2,7668
   89b28:	dfc00915 	stw	ra,36(sp)
   89b2c:	2021883a 	mov	r16,r4
   89b30:	3823883a 	mov	r17,r7
   89b34:	14800017 	ldw	r18,0(r2)
   89b38:	28001426 	beq	r5,zero,89b8c <_wcrtomb_r+0x7c>
   89b3c:	d9400415 	stw	r5,16(sp)
   89b40:	d9800515 	stw	r6,20(sp)
   89b44:	00854e00 	call	854e0 <__locale_charset>
   89b48:	d9800517 	ldw	r6,20(sp)
   89b4c:	d9400417 	ldw	r5,16(sp)
   89b50:	100f883a 	mov	r7,r2
   89b54:	dc400015 	stw	r17,0(sp)
   89b58:	8009883a 	mov	r4,r16
   89b5c:	903ee83a 	callr	r18
   89b60:	00ffffc4 	movi	r3,-1
   89b64:	10c0031e 	bne	r2,r3,89b74 <_wcrtomb_r+0x64>
   89b68:	88000015 	stw	zero,0(r17)
   89b6c:	00c02284 	movi	r3,138
   89b70:	80c00015 	stw	r3,0(r16)
   89b74:	dfc00917 	ldw	ra,36(sp)
   89b78:	dc800817 	ldw	r18,32(sp)
   89b7c:	dc400717 	ldw	r17,28(sp)
   89b80:	dc000617 	ldw	r16,24(sp)
   89b84:	dec00a04 	addi	sp,sp,40
   89b88:	f800283a 	ret
   89b8c:	00854e00 	call	854e0 <__locale_charset>
   89b90:	100f883a 	mov	r7,r2
   89b94:	dc400015 	stw	r17,0(sp)
   89b98:	000d883a 	mov	r6,zero
   89b9c:	d9400104 	addi	r5,sp,4
   89ba0:	8009883a 	mov	r4,r16
   89ba4:	903ee83a 	callr	r18
   89ba8:	003fed06 	br	89b60 <_wcrtomb_r+0x50>

00089bac <wcrtomb>:
   89bac:	defff604 	addi	sp,sp,-40
   89bb0:	00800134 	movhi	r2,4
   89bb4:	dc800615 	stw	r18,24(sp)
   89bb8:	dc400515 	stw	r17,20(sp)
   89bbc:	10877904 	addi	r2,r2,7652
   89bc0:	dfc00915 	stw	ra,36(sp)
   89bc4:	dd000815 	stw	r20,32(sp)
   89bc8:	dcc00715 	stw	r19,28(sp)
   89bcc:	dc000415 	stw	r16,16(sp)
   89bd0:	3025883a 	mov	r18,r6
   89bd4:	14400017 	ldw	r17,0(r2)
   89bd8:	20001926 	beq	r4,zero,89c40 <wcrtomb+0x94>
   89bdc:	00800134 	movhi	r2,4
   89be0:	10877d04 	addi	r2,r2,7668
   89be4:	15000017 	ldw	r20,0(r2)
   89be8:	2021883a 	mov	r16,r4
   89bec:	2827883a 	mov	r19,r5
   89bf0:	00854e00 	call	854e0 <__locale_charset>
   89bf4:	100f883a 	mov	r7,r2
   89bf8:	dc800015 	stw	r18,0(sp)
   89bfc:	980d883a 	mov	r6,r19
   89c00:	800b883a 	mov	r5,r16
   89c04:	8809883a 	mov	r4,r17
   89c08:	a03ee83a 	callr	r20
   89c0c:	00ffffc4 	movi	r3,-1
   89c10:	10c0031e 	bne	r2,r3,89c20 <wcrtomb+0x74>
   89c14:	90000015 	stw	zero,0(r18)
   89c18:	00c02284 	movi	r3,138
   89c1c:	88c00015 	stw	r3,0(r17)
   89c20:	dfc00917 	ldw	ra,36(sp)
   89c24:	dd000817 	ldw	r20,32(sp)
   89c28:	dcc00717 	ldw	r19,28(sp)
   89c2c:	dc800617 	ldw	r18,24(sp)
   89c30:	dc400517 	ldw	r17,20(sp)
   89c34:	dc000417 	ldw	r16,16(sp)
   89c38:	dec00a04 	addi	sp,sp,40
   89c3c:	f800283a 	ret
   89c40:	00800134 	movhi	r2,4
   89c44:	10877d04 	addi	r2,r2,7668
   89c48:	14000017 	ldw	r16,0(r2)
   89c4c:	00854e00 	call	854e0 <__locale_charset>
   89c50:	100f883a 	mov	r7,r2
   89c54:	dc800015 	stw	r18,0(sp)
   89c58:	000d883a 	mov	r6,zero
   89c5c:	d9400104 	addi	r5,sp,4
   89c60:	8809883a 	mov	r4,r17
   89c64:	803ee83a 	callr	r16
   89c68:	003fe806 	br	89c0c <wcrtomb+0x60>

00089c6c <__ascii_wctomb>:
   89c6c:	28000526 	beq	r5,zero,89c84 <__ascii_wctomb+0x18>
   89c70:	00803fc4 	movi	r2,255
   89c74:	11800536 	bltu	r2,r6,89c8c <__ascii_wctomb+0x20>
   89c78:	29800005 	stb	r6,0(r5)
   89c7c:	00800044 	movi	r2,1
   89c80:	f800283a 	ret
   89c84:	0005883a 	mov	r2,zero
   89c88:	f800283a 	ret
   89c8c:	00802284 	movi	r2,138
   89c90:	20800015 	stw	r2,0(r4)
   89c94:	00bfffc4 	movi	r2,-1
   89c98:	f800283a 	ret

00089c9c <_wctomb_r>:
   89c9c:	00800134 	movhi	r2,4
   89ca0:	defff904 	addi	sp,sp,-28
   89ca4:	10877d04 	addi	r2,r2,7668
   89ca8:	dfc00615 	stw	ra,24(sp)
   89cac:	dc400515 	stw	r17,20(sp)
   89cb0:	dc000415 	stw	r16,16(sp)
   89cb4:	3823883a 	mov	r17,r7
   89cb8:	14000017 	ldw	r16,0(r2)
   89cbc:	d9000115 	stw	r4,4(sp)
   89cc0:	d9400215 	stw	r5,8(sp)
   89cc4:	d9800315 	stw	r6,12(sp)
   89cc8:	00854e00 	call	854e0 <__locale_charset>
   89ccc:	d9800317 	ldw	r6,12(sp)
   89cd0:	d9400217 	ldw	r5,8(sp)
   89cd4:	d9000117 	ldw	r4,4(sp)
   89cd8:	100f883a 	mov	r7,r2
   89cdc:	dc400015 	stw	r17,0(sp)
   89ce0:	803ee83a 	callr	r16
   89ce4:	dfc00617 	ldw	ra,24(sp)
   89ce8:	dc400517 	ldw	r17,20(sp)
   89cec:	dc000417 	ldw	r16,16(sp)
   89cf0:	dec00704 	addi	sp,sp,28
   89cf4:	f800283a 	ret

00089cf8 <__udivdi3>:
   89cf8:	defff404 	addi	sp,sp,-48
   89cfc:	dcc00515 	stw	r19,20(sp)
   89d00:	dc000215 	stw	r16,8(sp)
   89d04:	dfc00b15 	stw	ra,44(sp)
   89d08:	df000a15 	stw	fp,40(sp)
   89d0c:	ddc00915 	stw	r23,36(sp)
   89d10:	dd800815 	stw	r22,32(sp)
   89d14:	dd400715 	stw	r21,28(sp)
   89d18:	dd000615 	stw	r20,24(sp)
   89d1c:	dc800415 	stw	r18,16(sp)
   89d20:	dc400315 	stw	r17,12(sp)
   89d24:	2027883a 	mov	r19,r4
   89d28:	2821883a 	mov	r16,r5
   89d2c:	3800461e 	bne	r7,zero,89e48 <__udivdi3+0x150>
   89d30:	3023883a 	mov	r17,r6
   89d34:	2025883a 	mov	r18,r4
   89d38:	2980572e 	bgeu	r5,r6,89e98 <__udivdi3+0x1a0>
   89d3c:	00bfffd4 	movui	r2,65535
   89d40:	282d883a 	mov	r22,r5
   89d44:	1180b236 	bltu	r2,r6,8a010 <__udivdi3+0x318>
   89d48:	00803fc4 	movi	r2,255
   89d4c:	1185803a 	cmpltu	r2,r2,r6
   89d50:	100490fa 	slli	r2,r2,3
   89d54:	3086d83a 	srl	r3,r6,r2
   89d58:	01000134 	movhi	r4,4
   89d5c:	21007f04 	addi	r4,r4,508
   89d60:	20c7883a 	add	r3,r4,r3
   89d64:	18c00003 	ldbu	r3,0(r3)
   89d68:	1885883a 	add	r2,r3,r2
   89d6c:	00c00804 	movi	r3,32
   89d70:	1887c83a 	sub	r3,r3,r2
   89d74:	18000526 	beq	r3,zero,89d8c <__udivdi3+0x94>
   89d78:	80e0983a 	sll	r16,r16,r3
   89d7c:	9884d83a 	srl	r2,r19,r2
   89d80:	30e2983a 	sll	r17,r6,r3
   89d84:	98e4983a 	sll	r18,r19,r3
   89d88:	142cb03a 	or	r22,r2,r16
   89d8c:	882ad43a 	srli	r21,r17,16
   89d90:	b009883a 	mov	r4,r22
   89d94:	8d3fffcc 	andi	r20,r17,65535
   89d98:	a80b883a 	mov	r5,r21
   89d9c:	008aa140 	call	8aa14 <__umodsi3>
   89da0:	b009883a 	mov	r4,r22
   89da4:	a80b883a 	mov	r5,r21
   89da8:	1027883a 	mov	r19,r2
   89dac:	008a9b00 	call	8a9b0 <__udivsi3>
   89db0:	100b883a 	mov	r5,r2
   89db4:	a009883a 	mov	r4,r20
   89db8:	102d883a 	mov	r22,r2
   89dbc:	008aa6c0 	call	8aa6c <__mulsi3>
   89dc0:	9826943a 	slli	r19,r19,16
   89dc4:	9006d43a 	srli	r3,r18,16
   89dc8:	1cc6b03a 	or	r3,r3,r19
   89dcc:	1880052e 	bgeu	r3,r2,89de4 <__udivdi3+0xec>
   89dd0:	1c47883a 	add	r3,r3,r17
   89dd4:	b13fffc4 	addi	r4,r22,-1
   89dd8:	1c400136 	bltu	r3,r17,89de0 <__udivdi3+0xe8>
   89ddc:	18814236 	bltu	r3,r2,8a2e8 <__udivdi3+0x5f0>
   89de0:	202d883a 	mov	r22,r4
   89de4:	18a1c83a 	sub	r16,r3,r2
   89de8:	8009883a 	mov	r4,r16
   89dec:	a80b883a 	mov	r5,r21
   89df0:	008aa140 	call	8aa14 <__umodsi3>
   89df4:	1027883a 	mov	r19,r2
   89df8:	8009883a 	mov	r4,r16
   89dfc:	a80b883a 	mov	r5,r21
   89e00:	9826943a 	slli	r19,r19,16
   89e04:	008a9b00 	call	8a9b0 <__udivsi3>
   89e08:	100b883a 	mov	r5,r2
   89e0c:	a009883a 	mov	r4,r20
   89e10:	94bfffcc 	andi	r18,r18,65535
   89e14:	1021883a 	mov	r16,r2
   89e18:	94e4b03a 	or	r18,r18,r19
   89e1c:	008aa6c0 	call	8aa6c <__mulsi3>
   89e20:	9080052e 	bgeu	r18,r2,89e38 <__udivdi3+0x140>
   89e24:	8ca5883a 	add	r18,r17,r18
   89e28:	80ffffc4 	addi	r3,r16,-1
   89e2c:	94410c36 	bltu	r18,r17,8a260 <__udivdi3+0x568>
   89e30:	90810b2e 	bgeu	r18,r2,8a260 <__udivdi3+0x568>
   89e34:	843fff84 	addi	r16,r16,-2
   89e38:	b004943a 	slli	r2,r22,16
   89e3c:	0007883a 	mov	r3,zero
   89e40:	1404b03a 	or	r2,r2,r16
   89e44:	00005e06 	br	89fc0 <__udivdi3+0x2c8>
   89e48:	29c05b36 	bltu	r5,r7,89fb8 <__udivdi3+0x2c0>
   89e4c:	00bfffd4 	movui	r2,65535
   89e50:	11c0672e 	bgeu	r2,r7,89ff0 <__udivdi3+0x2f8>
   89e54:	00804034 	movhi	r2,256
   89e58:	10bfffc4 	addi	r2,r2,-1
   89e5c:	11c10a36 	bltu	r2,r7,8a288 <__udivdi3+0x590>
   89e60:	00800404 	movi	r2,16
   89e64:	3886d83a 	srl	r3,r7,r2
   89e68:	01000134 	movhi	r4,4
   89e6c:	21007f04 	addi	r4,r4,508
   89e70:	20c7883a 	add	r3,r4,r3
   89e74:	18c00003 	ldbu	r3,0(r3)
   89e78:	05c00804 	movi	r23,32
   89e7c:	1885883a 	add	r2,r3,r2
   89e80:	b8afc83a 	sub	r23,r23,r2
   89e84:	b800671e 	bne	r23,zero,8a024 <__udivdi3+0x32c>
   89e88:	3c010536 	bltu	r7,r16,8a2a0 <__udivdi3+0x5a8>
   89e8c:	9985403a 	cmpgeu	r2,r19,r6
   89e90:	0007883a 	mov	r3,zero
   89e94:	00004a06 	br	89fc0 <__udivdi3+0x2c8>
   89e98:	3000041e 	bne	r6,zero,89eac <__udivdi3+0x1b4>
   89e9c:	000b883a 	mov	r5,zero
   89ea0:	01000044 	movi	r4,1
   89ea4:	008a9b00 	call	8a9b0 <__udivsi3>
   89ea8:	1023883a 	mov	r17,r2
   89eac:	00bfffd4 	movui	r2,65535
   89eb0:	1440532e 	bgeu	r2,r17,8a000 <__udivdi3+0x308>
   89eb4:	00804034 	movhi	r2,256
   89eb8:	10bfffc4 	addi	r2,r2,-1
   89ebc:	1440f436 	bltu	r2,r17,8a290 <__udivdi3+0x598>
   89ec0:	00800404 	movi	r2,16
   89ec4:	8886d83a 	srl	r3,r17,r2
   89ec8:	01000134 	movhi	r4,4
   89ecc:	21007f04 	addi	r4,r4,508
   89ed0:	20c7883a 	add	r3,r4,r3
   89ed4:	18c00003 	ldbu	r3,0(r3)
   89ed8:	1885883a 	add	r2,r3,r2
   89edc:	00c00804 	movi	r3,32
   89ee0:	1887c83a 	sub	r3,r3,r2
   89ee4:	1800a51e 	bne	r3,zero,8a17c <__udivdi3+0x484>
   89ee8:	882ad43a 	srli	r21,r17,16
   89eec:	8461c83a 	sub	r16,r16,r17
   89ef0:	8d3fffcc 	andi	r20,r17,65535
   89ef4:	00c00044 	movi	r3,1
   89ef8:	a80b883a 	mov	r5,r21
   89efc:	8009883a 	mov	r4,r16
   89f00:	d8c00115 	stw	r3,4(sp)
   89f04:	008aa140 	call	8aa14 <__umodsi3>
   89f08:	a80b883a 	mov	r5,r21
   89f0c:	8009883a 	mov	r4,r16
   89f10:	1027883a 	mov	r19,r2
   89f14:	008a9b00 	call	8a9b0 <__udivsi3>
   89f18:	a00b883a 	mov	r5,r20
   89f1c:	1009883a 	mov	r4,r2
   89f20:	102d883a 	mov	r22,r2
   89f24:	008aa6c0 	call	8aa6c <__mulsi3>
   89f28:	9826943a 	slli	r19,r19,16
   89f2c:	900ed43a 	srli	r7,r18,16
   89f30:	d8c00117 	ldw	r3,4(sp)
   89f34:	3cceb03a 	or	r7,r7,r19
   89f38:	3880052e 	bgeu	r7,r2,89f50 <__udivdi3+0x258>
   89f3c:	3c4f883a 	add	r7,r7,r17
   89f40:	b13fffc4 	addi	r4,r22,-1
   89f44:	3c400136 	bltu	r7,r17,89f4c <__udivdi3+0x254>
   89f48:	3880e436 	bltu	r7,r2,8a2dc <__udivdi3+0x5e4>
   89f4c:	202d883a 	mov	r22,r4
   89f50:	38a1c83a 	sub	r16,r7,r2
   89f54:	8009883a 	mov	r4,r16
   89f58:	a80b883a 	mov	r5,r21
   89f5c:	d8c00115 	stw	r3,4(sp)
   89f60:	008aa140 	call	8aa14 <__umodsi3>
   89f64:	1027883a 	mov	r19,r2
   89f68:	8009883a 	mov	r4,r16
   89f6c:	a80b883a 	mov	r5,r21
   89f70:	9826943a 	slli	r19,r19,16
   89f74:	008a9b00 	call	8a9b0 <__udivsi3>
   89f78:	a00b883a 	mov	r5,r20
   89f7c:	1009883a 	mov	r4,r2
   89f80:	94bfffcc 	andi	r18,r18,65535
   89f84:	1021883a 	mov	r16,r2
   89f88:	94e4b03a 	or	r18,r18,r19
   89f8c:	008aa6c0 	call	8aa6c <__mulsi3>
   89f90:	d8c00117 	ldw	r3,4(sp)
   89f94:	9080052e 	bgeu	r18,r2,89fac <__udivdi3+0x2b4>
   89f98:	8ca5883a 	add	r18,r17,r18
   89f9c:	813fffc4 	addi	r4,r16,-1
   89fa0:	9440ad36 	bltu	r18,r17,8a258 <__udivdi3+0x560>
   89fa4:	9080ac2e 	bgeu	r18,r2,8a258 <__udivdi3+0x560>
   89fa8:	843fff84 	addi	r16,r16,-2
   89fac:	b004943a 	slli	r2,r22,16
   89fb0:	1404b03a 	or	r2,r2,r16
   89fb4:	00000206 	br	89fc0 <__udivdi3+0x2c8>
   89fb8:	0007883a 	mov	r3,zero
   89fbc:	0005883a 	mov	r2,zero
   89fc0:	dfc00b17 	ldw	ra,44(sp)
   89fc4:	df000a17 	ldw	fp,40(sp)
   89fc8:	ddc00917 	ldw	r23,36(sp)
   89fcc:	dd800817 	ldw	r22,32(sp)
   89fd0:	dd400717 	ldw	r21,28(sp)
   89fd4:	dd000617 	ldw	r20,24(sp)
   89fd8:	dcc00517 	ldw	r19,20(sp)
   89fdc:	dc800417 	ldw	r18,16(sp)
   89fe0:	dc400317 	ldw	r17,12(sp)
   89fe4:	dc000217 	ldw	r16,8(sp)
   89fe8:	dec00c04 	addi	sp,sp,48
   89fec:	f800283a 	ret
   89ff0:	00803fc4 	movi	r2,255
   89ff4:	11c5803a 	cmpltu	r2,r2,r7
   89ff8:	100490fa 	slli	r2,r2,3
   89ffc:	003f9906 	br	89e64 <__udivdi3+0x16c>
   8a000:	00803fc4 	movi	r2,255
   8a004:	1445803a 	cmpltu	r2,r2,r17
   8a008:	100490fa 	slli	r2,r2,3
   8a00c:	003fad06 	br	89ec4 <__udivdi3+0x1cc>
   8a010:	00804034 	movhi	r2,256
   8a014:	10bfffc4 	addi	r2,r2,-1
   8a018:	11809f36 	bltu	r2,r6,8a298 <__udivdi3+0x5a0>
   8a01c:	00800404 	movi	r2,16
   8a020:	003f4c06 	br	89d54 <__udivdi3+0x5c>
   8a024:	3dce983a 	sll	r7,r7,r23
   8a028:	30b8d83a 	srl	fp,r6,r2
   8a02c:	80a2d83a 	srl	r17,r16,r2
   8a030:	35cc983a 	sll	r6,r6,r23
   8a034:	3f38b03a 	or	fp,r7,fp
   8a038:	e024d43a 	srli	r18,fp,16
   8a03c:	9884d83a 	srl	r2,r19,r2
   8a040:	85e0983a 	sll	r16,r16,r23
   8a044:	8809883a 	mov	r4,r17
   8a048:	900b883a 	mov	r5,r18
   8a04c:	d9800015 	stw	r6,0(sp)
   8a050:	1420b03a 	or	r16,r2,r16
   8a054:	008aa140 	call	8aa14 <__umodsi3>
   8a058:	900b883a 	mov	r5,r18
   8a05c:	8809883a 	mov	r4,r17
   8a060:	1029883a 	mov	r20,r2
   8a064:	e5bfffcc 	andi	r22,fp,65535
   8a068:	008a9b00 	call	8a9b0 <__udivsi3>
   8a06c:	100b883a 	mov	r5,r2
   8a070:	b009883a 	mov	r4,r22
   8a074:	102b883a 	mov	r21,r2
   8a078:	008aa6c0 	call	8aa6c <__mulsi3>
   8a07c:	a028943a 	slli	r20,r20,16
   8a080:	8006d43a 	srli	r3,r16,16
   8a084:	1d06b03a 	or	r3,r3,r20
   8a088:	1880042e 	bgeu	r3,r2,8a09c <__udivdi3+0x3a4>
   8a08c:	1f07883a 	add	r3,r3,fp
   8a090:	a93fffc4 	addi	r4,r21,-1
   8a094:	1f00892e 	bgeu	r3,fp,8a2bc <__udivdi3+0x5c4>
   8a098:	202b883a 	mov	r21,r4
   8a09c:	18a3c83a 	sub	r17,r3,r2
   8a0a0:	8809883a 	mov	r4,r17
   8a0a4:	900b883a 	mov	r5,r18
   8a0a8:	008aa140 	call	8aa14 <__umodsi3>
   8a0ac:	1029883a 	mov	r20,r2
   8a0b0:	8809883a 	mov	r4,r17
   8a0b4:	900b883a 	mov	r5,r18
   8a0b8:	a028943a 	slli	r20,r20,16
   8a0bc:	008a9b00 	call	8a9b0 <__udivsi3>
   8a0c0:	100b883a 	mov	r5,r2
   8a0c4:	b009883a 	mov	r4,r22
   8a0c8:	843fffcc 	andi	r16,r16,65535
   8a0cc:	1023883a 	mov	r17,r2
   8a0d0:	8520b03a 	or	r16,r16,r20
   8a0d4:	008aa6c0 	call	8aa6c <__mulsi3>
   8a0d8:	8080042e 	bgeu	r16,r2,8a0ec <__udivdi3+0x3f4>
   8a0dc:	8721883a 	add	r16,r16,fp
   8a0e0:	88ffffc4 	addi	r3,r17,-1
   8a0e4:	8700712e 	bgeu	r16,fp,8a2ac <__udivdi3+0x5b4>
   8a0e8:	1823883a 	mov	r17,r3
   8a0ec:	a80e943a 	slli	r7,r21,16
   8a0f0:	d8c00017 	ldw	r3,0(sp)
   8a0f4:	80a1c83a 	sub	r16,r16,r2
   8a0f8:	3c64b03a 	or	r18,r7,r17
   8a0fc:	1d3fffcc 	andi	r20,r3,65535
   8a100:	9022d43a 	srli	r17,r18,16
   8a104:	95bfffcc 	andi	r22,r18,65535
   8a108:	a00b883a 	mov	r5,r20
   8a10c:	b009883a 	mov	r4,r22
   8a110:	182ad43a 	srli	r21,r3,16
   8a114:	008aa6c0 	call	8aa6c <__mulsi3>
   8a118:	a00b883a 	mov	r5,r20
   8a11c:	8809883a 	mov	r4,r17
   8a120:	1039883a 	mov	fp,r2
   8a124:	008aa6c0 	call	8aa6c <__mulsi3>
   8a128:	8809883a 	mov	r4,r17
   8a12c:	a80b883a 	mov	r5,r21
   8a130:	1029883a 	mov	r20,r2
   8a134:	008aa6c0 	call	8aa6c <__mulsi3>
   8a138:	a80b883a 	mov	r5,r21
   8a13c:	b009883a 	mov	r4,r22
   8a140:	1023883a 	mov	r17,r2
   8a144:	008aa6c0 	call	8aa6c <__mulsi3>
   8a148:	e006d43a 	srli	r3,fp,16
   8a14c:	1505883a 	add	r2,r2,r20
   8a150:	1887883a 	add	r3,r3,r2
   8a154:	1d00022e 	bgeu	r3,r20,8a160 <__udivdi3+0x468>
   8a158:	00800074 	movhi	r2,1
   8a15c:	88a3883a 	add	r17,r17,r2
   8a160:	1804d43a 	srli	r2,r3,16
   8a164:	1463883a 	add	r17,r2,r17
   8a168:	84404436 	bltu	r16,r17,8a27c <__udivdi3+0x584>
   8a16c:	84403e26 	beq	r16,r17,8a268 <__udivdi3+0x570>
   8a170:	9005883a 	mov	r2,r18
   8a174:	0007883a 	mov	r3,zero
   8a178:	003f9106 	br	89fc0 <__udivdi3+0x2c8>
   8a17c:	88e2983a 	sll	r17,r17,r3
   8a180:	80aed83a 	srl	r23,r16,r2
   8a184:	80e0983a 	sll	r16,r16,r3
   8a188:	882ad43a 	srli	r21,r17,16
   8a18c:	9884d83a 	srl	r2,r19,r2
   8a190:	b809883a 	mov	r4,r23
   8a194:	a80b883a 	mov	r5,r21
   8a198:	98e4983a 	sll	r18,r19,r3
   8a19c:	142cb03a 	or	r22,r2,r16
   8a1a0:	008aa140 	call	8aa14 <__umodsi3>
   8a1a4:	b809883a 	mov	r4,r23
   8a1a8:	a80b883a 	mov	r5,r21
   8a1ac:	1027883a 	mov	r19,r2
   8a1b0:	8d3fffcc 	andi	r20,r17,65535
   8a1b4:	008a9b00 	call	8a9b0 <__udivsi3>
   8a1b8:	a009883a 	mov	r4,r20
   8a1bc:	100b883a 	mov	r5,r2
   8a1c0:	102f883a 	mov	r23,r2
   8a1c4:	008aa6c0 	call	8aa6c <__mulsi3>
   8a1c8:	9826943a 	slli	r19,r19,16
   8a1cc:	b008d43a 	srli	r4,r22,16
   8a1d0:	24c8b03a 	or	r4,r4,r19
   8a1d4:	2080062e 	bgeu	r4,r2,8a1f0 <__udivdi3+0x4f8>
   8a1d8:	2449883a 	add	r4,r4,r17
   8a1dc:	b8ffffc4 	addi	r3,r23,-1
   8a1e0:	24403c36 	bltu	r4,r17,8a2d4 <__udivdi3+0x5dc>
   8a1e4:	20803b2e 	bgeu	r4,r2,8a2d4 <__udivdi3+0x5dc>
   8a1e8:	bdffff84 	addi	r23,r23,-2
   8a1ec:	2449883a 	add	r4,r4,r17
   8a1f0:	20a1c83a 	sub	r16,r4,r2
   8a1f4:	a80b883a 	mov	r5,r21
   8a1f8:	8009883a 	mov	r4,r16
   8a1fc:	008aa140 	call	8aa14 <__umodsi3>
   8a200:	a80b883a 	mov	r5,r21
   8a204:	8009883a 	mov	r4,r16
   8a208:	1027883a 	mov	r19,r2
   8a20c:	008a9b00 	call	8a9b0 <__udivsi3>
   8a210:	a009883a 	mov	r4,r20
   8a214:	100b883a 	mov	r5,r2
   8a218:	9826943a 	slli	r19,r19,16
   8a21c:	1039883a 	mov	fp,r2
   8a220:	008aa6c0 	call	8aa6c <__mulsi3>
   8a224:	b13fffcc 	andi	r4,r22,65535
   8a228:	24c8b03a 	or	r4,r4,r19
   8a22c:	2080062e 	bgeu	r4,r2,8a248 <__udivdi3+0x550>
   8a230:	2449883a 	add	r4,r4,r17
   8a234:	e0ffffc4 	addi	r3,fp,-1
   8a238:	24402436 	bltu	r4,r17,8a2cc <__udivdi3+0x5d4>
   8a23c:	2080232e 	bgeu	r4,r2,8a2cc <__udivdi3+0x5d4>
   8a240:	e73fff84 	addi	fp,fp,-2
   8a244:	2449883a 	add	r4,r4,r17
   8a248:	b82e943a 	slli	r23,r23,16
   8a24c:	20a1c83a 	sub	r16,r4,r2
   8a250:	bf06b03a 	or	r3,r23,fp
   8a254:	003f2806 	br	89ef8 <__udivdi3+0x200>
   8a258:	2021883a 	mov	r16,r4
   8a25c:	003f5306 	br	89fac <__udivdi3+0x2b4>
   8a260:	1821883a 	mov	r16,r3
   8a264:	003ef406 	br	89e38 <__udivdi3+0x140>
   8a268:	1806943a 	slli	r3,r3,16
   8a26c:	9de6983a 	sll	r19,r19,r23
   8a270:	e73fffcc 	andi	fp,fp,65535
   8a274:	1f07883a 	add	r3,r3,fp
   8a278:	98ffbd2e 	bgeu	r19,r3,8a170 <__udivdi3+0x478>
   8a27c:	90bfffc4 	addi	r2,r18,-1
   8a280:	0007883a 	mov	r3,zero
   8a284:	003f4e06 	br	89fc0 <__udivdi3+0x2c8>
   8a288:	00800604 	movi	r2,24
   8a28c:	003ef506 	br	89e64 <__udivdi3+0x16c>
   8a290:	00800604 	movi	r2,24
   8a294:	003f0b06 	br	89ec4 <__udivdi3+0x1cc>
   8a298:	00800604 	movi	r2,24
   8a29c:	003ead06 	br	89d54 <__udivdi3+0x5c>
   8a2a0:	0007883a 	mov	r3,zero
   8a2a4:	00800044 	movi	r2,1
   8a2a8:	003f4506 	br	89fc0 <__udivdi3+0x2c8>
   8a2ac:	80bf8e2e 	bgeu	r16,r2,8a0e8 <__udivdi3+0x3f0>
   8a2b0:	8c7fff84 	addi	r17,r17,-2
   8a2b4:	8721883a 	add	r16,r16,fp
   8a2b8:	003f8c06 	br	8a0ec <__udivdi3+0x3f4>
   8a2bc:	18bf762e 	bgeu	r3,r2,8a098 <__udivdi3+0x3a0>
   8a2c0:	ad7fff84 	addi	r21,r21,-2
   8a2c4:	1f07883a 	add	r3,r3,fp
   8a2c8:	003f7406 	br	8a09c <__udivdi3+0x3a4>
   8a2cc:	1839883a 	mov	fp,r3
   8a2d0:	003fdd06 	br	8a248 <__udivdi3+0x550>
   8a2d4:	182f883a 	mov	r23,r3
   8a2d8:	003fc506 	br	8a1f0 <__udivdi3+0x4f8>
   8a2dc:	b5bfff84 	addi	r22,r22,-2
   8a2e0:	3c4f883a 	add	r7,r7,r17
   8a2e4:	003f1a06 	br	89f50 <__udivdi3+0x258>
   8a2e8:	b5bfff84 	addi	r22,r22,-2
   8a2ec:	1c47883a 	add	r3,r3,r17
   8a2f0:	003ebc06 	br	89de4 <__udivdi3+0xec>

0008a2f4 <__umoddi3>:
   8a2f4:	defff304 	addi	sp,sp,-52
   8a2f8:	df000b15 	stw	fp,44(sp)
   8a2fc:	dc400415 	stw	r17,16(sp)
   8a300:	dc000315 	stw	r16,12(sp)
   8a304:	dfc00c15 	stw	ra,48(sp)
   8a308:	ddc00a15 	stw	r23,40(sp)
   8a30c:	dd800915 	stw	r22,36(sp)
   8a310:	dd400815 	stw	r21,32(sp)
   8a314:	dd000715 	stw	r20,28(sp)
   8a318:	dcc00615 	stw	r19,24(sp)
   8a31c:	dc800515 	stw	r18,20(sp)
   8a320:	2021883a 	mov	r16,r4
   8a324:	2823883a 	mov	r17,r5
   8a328:	2839883a 	mov	fp,r5
   8a32c:	3800401e 	bne	r7,zero,8a430 <__umoddi3+0x13c>
   8a330:	3027883a 	mov	r19,r6
   8a334:	2029883a 	mov	r20,r4
   8a338:	2980552e 	bgeu	r5,r6,8a490 <__umoddi3+0x19c>
   8a33c:	00bfffd4 	movui	r2,65535
   8a340:	1180a236 	bltu	r2,r6,8a5cc <__umoddi3+0x2d8>
   8a344:	01003fc4 	movi	r4,255
   8a348:	2189803a 	cmpltu	r4,r4,r6
   8a34c:	200890fa 	slli	r4,r4,3
   8a350:	3104d83a 	srl	r2,r6,r4
   8a354:	00c00134 	movhi	r3,4
   8a358:	18c07f04 	addi	r3,r3,508
   8a35c:	1885883a 	add	r2,r3,r2
   8a360:	10c00003 	ldbu	r3,0(r2)
   8a364:	00800804 	movi	r2,32
   8a368:	1909883a 	add	r4,r3,r4
   8a36c:	1125c83a 	sub	r18,r2,r4
   8a370:	90000526 	beq	r18,zero,8a388 <__umoddi3+0x94>
   8a374:	8ca2983a 	sll	r17,r17,r18
   8a378:	8108d83a 	srl	r4,r16,r4
   8a37c:	34a6983a 	sll	r19,r6,r18
   8a380:	84a8983a 	sll	r20,r16,r18
   8a384:	2478b03a 	or	fp,r4,r17
   8a388:	982cd43a 	srli	r22,r19,16
   8a38c:	e009883a 	mov	r4,fp
   8a390:	9dffffcc 	andi	r23,r19,65535
   8a394:	b00b883a 	mov	r5,r22
   8a398:	008aa140 	call	8aa14 <__umodsi3>
   8a39c:	b00b883a 	mov	r5,r22
   8a3a0:	e009883a 	mov	r4,fp
   8a3a4:	102b883a 	mov	r21,r2
   8a3a8:	008a9b00 	call	8a9b0 <__udivsi3>
   8a3ac:	100b883a 	mov	r5,r2
   8a3b0:	b809883a 	mov	r4,r23
   8a3b4:	008aa6c0 	call	8aa6c <__mulsi3>
   8a3b8:	a82a943a 	slli	r21,r21,16
   8a3bc:	a006d43a 	srli	r3,r20,16
   8a3c0:	1d46b03a 	or	r3,r3,r21
   8a3c4:	1880032e 	bgeu	r3,r2,8a3d4 <__umoddi3+0xe0>
   8a3c8:	1cc7883a 	add	r3,r3,r19
   8a3cc:	1cc00136 	bltu	r3,r19,8a3d4 <__umoddi3+0xe0>
   8a3d0:	18813136 	bltu	r3,r2,8a898 <__umoddi3+0x5a4>
   8a3d4:	18a1c83a 	sub	r16,r3,r2
   8a3d8:	b00b883a 	mov	r5,r22
   8a3dc:	8009883a 	mov	r4,r16
   8a3e0:	008aa140 	call	8aa14 <__umodsi3>
   8a3e4:	b00b883a 	mov	r5,r22
   8a3e8:	8009883a 	mov	r4,r16
   8a3ec:	1023883a 	mov	r17,r2
   8a3f0:	008a9b00 	call	8a9b0 <__udivsi3>
   8a3f4:	100b883a 	mov	r5,r2
   8a3f8:	b809883a 	mov	r4,r23
   8a3fc:	8822943a 	slli	r17,r17,16
   8a400:	008aa6c0 	call	8aa6c <__mulsi3>
   8a404:	a0ffffcc 	andi	r3,r20,65535
   8a408:	1c46b03a 	or	r3,r3,r17
   8a40c:	1880042e 	bgeu	r3,r2,8a420 <__umoddi3+0x12c>
   8a410:	1cc7883a 	add	r3,r3,r19
   8a414:	1cc00236 	bltu	r3,r19,8a420 <__umoddi3+0x12c>
   8a418:	1880012e 	bgeu	r3,r2,8a420 <__umoddi3+0x12c>
   8a41c:	1cc7883a 	add	r3,r3,r19
   8a420:	1885c83a 	sub	r2,r3,r2
   8a424:	1484d83a 	srl	r2,r2,r18
   8a428:	0007883a 	mov	r3,zero
   8a42c:	00005306 	br	8a57c <__umoddi3+0x288>
   8a430:	29c05036 	bltu	r5,r7,8a574 <__umoddi3+0x280>
   8a434:	00bfffd4 	movui	r2,65535
   8a438:	11c05c2e 	bgeu	r2,r7,8a5ac <__umoddi3+0x2b8>
   8a43c:	00804034 	movhi	r2,256
   8a440:	10bfffc4 	addi	r2,r2,-1
   8a444:	11c10636 	bltu	r2,r7,8a860 <__umoddi3+0x56c>
   8a448:	01000404 	movi	r4,16
   8a44c:	3904d83a 	srl	r2,r7,r4
   8a450:	00c00134 	movhi	r3,4
   8a454:	18c07f04 	addi	r3,r3,508
   8a458:	1885883a 	add	r2,r3,r2
   8a45c:	14c00003 	ldbu	r19,0(r2)
   8a460:	00c00804 	movi	r3,32
   8a464:	9927883a 	add	r19,r19,r4
   8a468:	1ce9c83a 	sub	r20,r3,r19
   8a46c:	a0005c1e 	bne	r20,zero,8a5e0 <__umoddi3+0x2ec>
   8a470:	3c400136 	bltu	r7,r17,8a478 <__umoddi3+0x184>
   8a474:	81810a36 	bltu	r16,r6,8a8a0 <__umoddi3+0x5ac>
   8a478:	8185c83a 	sub	r2,r16,r6
   8a47c:	89e3c83a 	sub	r17,r17,r7
   8a480:	8089803a 	cmpltu	r4,r16,r2
   8a484:	8939c83a 	sub	fp,r17,r4
   8a488:	e007883a 	mov	r3,fp
   8a48c:	00003b06 	br	8a57c <__umoddi3+0x288>
   8a490:	3000041e 	bne	r6,zero,8a4a4 <__umoddi3+0x1b0>
   8a494:	000b883a 	mov	r5,zero
   8a498:	01000044 	movi	r4,1
   8a49c:	008a9b00 	call	8a9b0 <__udivsi3>
   8a4a0:	1027883a 	mov	r19,r2
   8a4a4:	00bfffd4 	movui	r2,65535
   8a4a8:	14c0442e 	bgeu	r2,r19,8a5bc <__umoddi3+0x2c8>
   8a4ac:	00804034 	movhi	r2,256
   8a4b0:	10bfffc4 	addi	r2,r2,-1
   8a4b4:	14c0ec36 	bltu	r2,r19,8a868 <__umoddi3+0x574>
   8a4b8:	00800404 	movi	r2,16
   8a4bc:	9886d83a 	srl	r3,r19,r2
   8a4c0:	01000134 	movhi	r4,4
   8a4c4:	21007f04 	addi	r4,r4,508
   8a4c8:	20c7883a 	add	r3,r4,r3
   8a4cc:	18c00003 	ldbu	r3,0(r3)
   8a4d0:	1887883a 	add	r3,r3,r2
   8a4d4:	00800804 	movi	r2,32
   8a4d8:	10e5c83a 	sub	r18,r2,r3
   8a4dc:	9000ab1e 	bne	r18,zero,8a78c <__umoddi3+0x498>
   8a4e0:	982cd43a 	srli	r22,r19,16
   8a4e4:	8ce3c83a 	sub	r17,r17,r19
   8a4e8:	9dffffcc 	andi	r23,r19,65535
   8a4ec:	b00b883a 	mov	r5,r22
   8a4f0:	8809883a 	mov	r4,r17
   8a4f4:	008aa140 	call	8aa14 <__umodsi3>
   8a4f8:	b00b883a 	mov	r5,r22
   8a4fc:	8809883a 	mov	r4,r17
   8a500:	102b883a 	mov	r21,r2
   8a504:	008a9b00 	call	8a9b0 <__udivsi3>
   8a508:	b80b883a 	mov	r5,r23
   8a50c:	1009883a 	mov	r4,r2
   8a510:	008aa6c0 	call	8aa6c <__mulsi3>
   8a514:	a82a943a 	slli	r21,r21,16
   8a518:	a006d43a 	srli	r3,r20,16
   8a51c:	1d46b03a 	or	r3,r3,r21
   8a520:	1880042e 	bgeu	r3,r2,8a534 <__umoddi3+0x240>
   8a524:	1cc7883a 	add	r3,r3,r19
   8a528:	1cc00236 	bltu	r3,r19,8a534 <__umoddi3+0x240>
   8a52c:	1880012e 	bgeu	r3,r2,8a534 <__umoddi3+0x240>
   8a530:	1cc7883a 	add	r3,r3,r19
   8a534:	18a1c83a 	sub	r16,r3,r2
   8a538:	b00b883a 	mov	r5,r22
   8a53c:	8009883a 	mov	r4,r16
   8a540:	008aa140 	call	8aa14 <__umodsi3>
   8a544:	1023883a 	mov	r17,r2
   8a548:	b00b883a 	mov	r5,r22
   8a54c:	8009883a 	mov	r4,r16
   8a550:	008a9b00 	call	8a9b0 <__udivsi3>
   8a554:	8822943a 	slli	r17,r17,16
   8a558:	b80b883a 	mov	r5,r23
   8a55c:	1009883a 	mov	r4,r2
   8a560:	008aa6c0 	call	8aa6c <__mulsi3>
   8a564:	a53fffcc 	andi	r20,r20,65535
   8a568:	a446b03a 	or	r3,r20,r17
   8a56c:	18bfac2e 	bgeu	r3,r2,8a420 <__umoddi3+0x12c>
   8a570:	003fa706 	br	8a410 <__umoddi3+0x11c>
   8a574:	2005883a 	mov	r2,r4
   8a578:	2807883a 	mov	r3,r5
   8a57c:	dfc00c17 	ldw	ra,48(sp)
   8a580:	df000b17 	ldw	fp,44(sp)
   8a584:	ddc00a17 	ldw	r23,40(sp)
   8a588:	dd800917 	ldw	r22,36(sp)
   8a58c:	dd400817 	ldw	r21,32(sp)
   8a590:	dd000717 	ldw	r20,28(sp)
   8a594:	dcc00617 	ldw	r19,24(sp)
   8a598:	dc800517 	ldw	r18,20(sp)
   8a59c:	dc400417 	ldw	r17,16(sp)
   8a5a0:	dc000317 	ldw	r16,12(sp)
   8a5a4:	dec00d04 	addi	sp,sp,52
   8a5a8:	f800283a 	ret
   8a5ac:	04c03fc4 	movi	r19,255
   8a5b0:	99c9803a 	cmpltu	r4,r19,r7
   8a5b4:	200890fa 	slli	r4,r4,3
   8a5b8:	003fa406 	br	8a44c <__umoddi3+0x158>
   8a5bc:	00803fc4 	movi	r2,255
   8a5c0:	14c5803a 	cmpltu	r2,r2,r19
   8a5c4:	100490fa 	slli	r2,r2,3
   8a5c8:	003fbc06 	br	8a4bc <__umoddi3+0x1c8>
   8a5cc:	00804034 	movhi	r2,256
   8a5d0:	10bfffc4 	addi	r2,r2,-1
   8a5d4:	1180a636 	bltu	r2,r6,8a870 <__umoddi3+0x57c>
   8a5d8:	01000404 	movi	r4,16
   8a5dc:	003f5c06 	br	8a350 <__umoddi3+0x5c>
   8a5e0:	3d0e983a 	sll	r7,r7,r20
   8a5e4:	34ead83a 	srl	r21,r6,r19
   8a5e8:	8cc6d83a 	srl	r3,r17,r19
   8a5ec:	8d10983a 	sll	r8,r17,r20
   8a5f0:	3d6ab03a 	or	r21,r7,r21
   8a5f4:	a82cd43a 	srli	r22,r21,16
   8a5f8:	84e2d83a 	srl	r17,r16,r19
   8a5fc:	1809883a 	mov	r4,r3
   8a600:	b00b883a 	mov	r5,r22
   8a604:	8a22b03a 	or	r17,r17,r8
   8a608:	3524983a 	sll	r18,r6,r20
   8a60c:	dc400015 	stw	r17,0(sp)
   8a610:	d8c00115 	stw	r3,4(sp)
   8a614:	008aa140 	call	8aa14 <__umodsi3>
   8a618:	d8c00117 	ldw	r3,4(sp)
   8a61c:	b00b883a 	mov	r5,r22
   8a620:	1039883a 	mov	fp,r2
   8a624:	1809883a 	mov	r4,r3
   8a628:	008a9b00 	call	8a9b0 <__udivsi3>
   8a62c:	adffffcc 	andi	r23,r21,65535
   8a630:	100b883a 	mov	r5,r2
   8a634:	b809883a 	mov	r4,r23
   8a638:	1023883a 	mov	r17,r2
   8a63c:	008aa6c0 	call	8aa6c <__mulsi3>
   8a640:	d9400017 	ldw	r5,0(sp)
   8a644:	e008943a 	slli	r4,fp,16
   8a648:	8520983a 	sll	r16,r16,r20
   8a64c:	2806d43a 	srli	r3,r5,16
   8a650:	1906b03a 	or	r3,r3,r4
   8a654:	1880042e 	bgeu	r3,r2,8a668 <__umoddi3+0x374>
   8a658:	1d47883a 	add	r3,r3,r21
   8a65c:	893fffc4 	addi	r4,r17,-1
   8a660:	1d40892e 	bgeu	r3,r21,8a888 <__umoddi3+0x594>
   8a664:	2023883a 	mov	r17,r4
   8a668:	18b9c83a 	sub	fp,r3,r2
   8a66c:	b00b883a 	mov	r5,r22
   8a670:	e009883a 	mov	r4,fp
   8a674:	008aa140 	call	8aa14 <__umodsi3>
   8a678:	b00b883a 	mov	r5,r22
   8a67c:	e009883a 	mov	r4,fp
   8a680:	d8800215 	stw	r2,8(sp)
   8a684:	008a9b00 	call	8a9b0 <__udivsi3>
   8a688:	100b883a 	mov	r5,r2
   8a68c:	b809883a 	mov	r4,r23
   8a690:	102d883a 	mov	r22,r2
   8a694:	008aa6c0 	call	8aa6c <__mulsi3>
   8a698:	d9800217 	ldw	r6,8(sp)
   8a69c:	d8c00017 	ldw	r3,0(sp)
   8a6a0:	300c943a 	slli	r6,r6,16
   8a6a4:	1a3fffcc 	andi	r8,r3,65535
   8a6a8:	4190b03a 	or	r8,r8,r6
   8a6ac:	4080042e 	bgeu	r8,r2,8a6c0 <__umoddi3+0x3cc>
   8a6b0:	4551883a 	add	r8,r8,r21
   8a6b4:	b0ffffc4 	addi	r3,r22,-1
   8a6b8:	45406f2e 	bgeu	r8,r21,8a878 <__umoddi3+0x584>
   8a6bc:	182d883a 	mov	r22,r3
   8a6c0:	880e943a 	slli	r7,r17,16
   8a6c4:	9006d43a 	srli	r3,r18,16
   8a6c8:	91bfffcc 	andi	r6,r18,65535
   8a6cc:	3dacb03a 	or	r22,r7,r22
   8a6d0:	b02ed43a 	srli	r23,r22,16
   8a6d4:	b5bfffcc 	andi	r22,r22,65535
   8a6d8:	300b883a 	mov	r5,r6
   8a6dc:	b009883a 	mov	r4,r22
   8a6e0:	40a3c83a 	sub	r17,r8,r2
   8a6e4:	d8c00115 	stw	r3,4(sp)
   8a6e8:	d9800215 	stw	r6,8(sp)
   8a6ec:	008aa6c0 	call	8aa6c <__mulsi3>
   8a6f0:	d9800217 	ldw	r6,8(sp)
   8a6f4:	b809883a 	mov	r4,r23
   8a6f8:	1039883a 	mov	fp,r2
   8a6fc:	300b883a 	mov	r5,r6
   8a700:	008aa6c0 	call	8aa6c <__mulsi3>
   8a704:	d8c00117 	ldw	r3,4(sp)
   8a708:	b809883a 	mov	r4,r23
   8a70c:	d8800215 	stw	r2,8(sp)
   8a710:	180b883a 	mov	r5,r3
   8a714:	008aa6c0 	call	8aa6c <__mulsi3>
   8a718:	d8c00117 	ldw	r3,4(sp)
   8a71c:	b009883a 	mov	r4,r22
   8a720:	102f883a 	mov	r23,r2
   8a724:	180b883a 	mov	r5,r3
   8a728:	008aa6c0 	call	8aa6c <__mulsi3>
   8a72c:	d9800217 	ldw	r6,8(sp)
   8a730:	e006d43a 	srli	r3,fp,16
   8a734:	1185883a 	add	r2,r2,r6
   8a738:	1885883a 	add	r2,r3,r2
   8a73c:	1180022e 	bgeu	r2,r6,8a748 <__umoddi3+0x454>
   8a740:	00c00074 	movhi	r3,1
   8a744:	b8ef883a 	add	r23,r23,r3
   8a748:	1006d43a 	srli	r3,r2,16
   8a74c:	1004943a 	slli	r2,r2,16
   8a750:	e73fffcc 	andi	fp,fp,65535
   8a754:	1dc7883a 	add	r3,r3,r23
   8a758:	1739883a 	add	fp,r2,fp
   8a75c:	88c03a36 	bltu	r17,r3,8a848 <__umoddi3+0x554>
   8a760:	88c05126 	beq	r17,r3,8a8a8 <__umoddi3+0x5b4>
   8a764:	88c9c83a 	sub	r4,r17,r3
   8a768:	e00f883a 	mov	r7,fp
   8a76c:	81cfc83a 	sub	r7,r16,r7
   8a770:	81c7803a 	cmpltu	r3,r16,r7
   8a774:	20c7c83a 	sub	r3,r4,r3
   8a778:	1cc4983a 	sll	r2,r3,r19
   8a77c:	3d0ed83a 	srl	r7,r7,r20
   8a780:	1d06d83a 	srl	r3,r3,r20
   8a784:	11c4b03a 	or	r2,r2,r7
   8a788:	003f7c06 	br	8a57c <__umoddi3+0x288>
   8a78c:	9ca6983a 	sll	r19,r19,r18
   8a790:	88f8d83a 	srl	fp,r17,r3
   8a794:	80c4d83a 	srl	r2,r16,r3
   8a798:	982cd43a 	srli	r22,r19,16
   8a79c:	8ca2983a 	sll	r17,r17,r18
   8a7a0:	e009883a 	mov	r4,fp
   8a7a4:	b00b883a 	mov	r5,r22
   8a7a8:	146ab03a 	or	r21,r2,r17
   8a7ac:	008aa140 	call	8aa14 <__umodsi3>
   8a7b0:	b00b883a 	mov	r5,r22
   8a7b4:	e009883a 	mov	r4,fp
   8a7b8:	1029883a 	mov	r20,r2
   8a7bc:	9dffffcc 	andi	r23,r19,65535
   8a7c0:	008a9b00 	call	8a9b0 <__udivsi3>
   8a7c4:	b809883a 	mov	r4,r23
   8a7c8:	100b883a 	mov	r5,r2
   8a7cc:	008aa6c0 	call	8aa6c <__mulsi3>
   8a7d0:	a008943a 	slli	r4,r20,16
   8a7d4:	a806d43a 	srli	r3,r21,16
   8a7d8:	84a8983a 	sll	r20,r16,r18
   8a7dc:	1906b03a 	or	r3,r3,r4
   8a7e0:	1880042e 	bgeu	r3,r2,8a7f4 <__umoddi3+0x500>
   8a7e4:	1cc7883a 	add	r3,r3,r19
   8a7e8:	1cc00236 	bltu	r3,r19,8a7f4 <__umoddi3+0x500>
   8a7ec:	1880012e 	bgeu	r3,r2,8a7f4 <__umoddi3+0x500>
   8a7f0:	1cc7883a 	add	r3,r3,r19
   8a7f4:	18a3c83a 	sub	r17,r3,r2
   8a7f8:	b00b883a 	mov	r5,r22
   8a7fc:	8809883a 	mov	r4,r17
   8a800:	008aa140 	call	8aa14 <__umodsi3>
   8a804:	b00b883a 	mov	r5,r22
   8a808:	8809883a 	mov	r4,r17
   8a80c:	1021883a 	mov	r16,r2
   8a810:	008a9b00 	call	8a9b0 <__udivsi3>
   8a814:	100b883a 	mov	r5,r2
   8a818:	b809883a 	mov	r4,r23
   8a81c:	8020943a 	slli	r16,r16,16
   8a820:	008aa6c0 	call	8aa6c <__mulsi3>
   8a824:	a8ffffcc 	andi	r3,r21,65535
   8a828:	1c06b03a 	or	r3,r3,r16
   8a82c:	1880042e 	bgeu	r3,r2,8a840 <__umoddi3+0x54c>
   8a830:	1cc7883a 	add	r3,r3,r19
   8a834:	1cc00236 	bltu	r3,r19,8a840 <__umoddi3+0x54c>
   8a838:	1880012e 	bgeu	r3,r2,8a840 <__umoddi3+0x54c>
   8a83c:	1cc7883a 	add	r3,r3,r19
   8a840:	18a3c83a 	sub	r17,r3,r2
   8a844:	003f2906 	br	8a4ec <__umoddi3+0x1f8>
   8a848:	e48fc83a 	sub	r7,fp,r18
   8a84c:	1d49c83a 	sub	r4,r3,r21
   8a850:	e1f9803a 	cmpltu	fp,fp,r7
   8a854:	2739c83a 	sub	fp,r4,fp
   8a858:	8f09c83a 	sub	r4,r17,fp
   8a85c:	003fc306 	br	8a76c <__umoddi3+0x478>
   8a860:	01000604 	movi	r4,24
   8a864:	003ef906 	br	8a44c <__umoddi3+0x158>
   8a868:	00800604 	movi	r2,24
   8a86c:	003f1306 	br	8a4bc <__umoddi3+0x1c8>
   8a870:	01000604 	movi	r4,24
   8a874:	003eb606 	br	8a350 <__umoddi3+0x5c>
   8a878:	40bf902e 	bgeu	r8,r2,8a6bc <__umoddi3+0x3c8>
   8a87c:	b5bfff84 	addi	r22,r22,-2
   8a880:	4551883a 	add	r8,r8,r21
   8a884:	003f8e06 	br	8a6c0 <__umoddi3+0x3cc>
   8a888:	18bf762e 	bgeu	r3,r2,8a664 <__umoddi3+0x370>
   8a88c:	8c7fff84 	addi	r17,r17,-2
   8a890:	1d47883a 	add	r3,r3,r21
   8a894:	003f7406 	br	8a668 <__umoddi3+0x374>
   8a898:	1cc7883a 	add	r3,r3,r19
   8a89c:	003ecd06 	br	8a3d4 <__umoddi3+0xe0>
   8a8a0:	8005883a 	mov	r2,r16
   8a8a4:	003ef806 	br	8a488 <__umoddi3+0x194>
   8a8a8:	873fe736 	bltu	r16,fp,8a848 <__umoddi3+0x554>
   8a8ac:	e00f883a 	mov	r7,fp
   8a8b0:	0009883a 	mov	r4,zero
   8a8b4:	003fad06 	br	8a76c <__umoddi3+0x478>

0008a8b8 <__divsi3>:
   8a8b8:	20001b16 	blt	r4,zero,8a928 <__divsi3+0x70>
   8a8bc:	000f883a 	mov	r7,zero
   8a8c0:	28001616 	blt	r5,zero,8a91c <__divsi3+0x64>
   8a8c4:	200d883a 	mov	r6,r4
   8a8c8:	29001a2e 	bgeu	r5,r4,8a934 <__divsi3+0x7c>
   8a8cc:	00800804 	movi	r2,32
   8a8d0:	00c00044 	movi	r3,1
   8a8d4:	00000106 	br	8a8dc <__divsi3+0x24>
   8a8d8:	10000d26 	beq	r2,zero,8a910 <__divsi3+0x58>
   8a8dc:	294b883a 	add	r5,r5,r5
   8a8e0:	10bfffc4 	addi	r2,r2,-1
   8a8e4:	18c7883a 	add	r3,r3,r3
   8a8e8:	293ffb36 	bltu	r5,r4,8a8d8 <__divsi3+0x20>
   8a8ec:	0005883a 	mov	r2,zero
   8a8f0:	18000726 	beq	r3,zero,8a910 <__divsi3+0x58>
   8a8f4:	0005883a 	mov	r2,zero
   8a8f8:	31400236 	bltu	r6,r5,8a904 <__divsi3+0x4c>
   8a8fc:	314dc83a 	sub	r6,r6,r5
   8a900:	10c4b03a 	or	r2,r2,r3
   8a904:	1806d07a 	srli	r3,r3,1
   8a908:	280ad07a 	srli	r5,r5,1
   8a90c:	183ffa1e 	bne	r3,zero,8a8f8 <__divsi3+0x40>
   8a910:	38000126 	beq	r7,zero,8a918 <__divsi3+0x60>
   8a914:	0085c83a 	sub	r2,zero,r2
   8a918:	f800283a 	ret
   8a91c:	014bc83a 	sub	r5,zero,r5
   8a920:	39c0005c 	xori	r7,r7,1
   8a924:	003fe706 	br	8a8c4 <__divsi3+0xc>
   8a928:	0109c83a 	sub	r4,zero,r4
   8a92c:	01c00044 	movi	r7,1
   8a930:	003fe306 	br	8a8c0 <__divsi3+0x8>
   8a934:	00c00044 	movi	r3,1
   8a938:	003fee06 	br	8a8f4 <__divsi3+0x3c>

0008a93c <__modsi3>:
   8a93c:	20001716 	blt	r4,zero,8a99c <__modsi3+0x60>
   8a940:	000f883a 	mov	r7,zero
   8a944:	2005883a 	mov	r2,r4
   8a948:	28001216 	blt	r5,zero,8a994 <__modsi3+0x58>
   8a94c:	2900162e 	bgeu	r5,r4,8a9a8 <__modsi3+0x6c>
   8a950:	01800804 	movi	r6,32
   8a954:	00c00044 	movi	r3,1
   8a958:	00000106 	br	8a960 <__modsi3+0x24>
   8a95c:	30000a26 	beq	r6,zero,8a988 <__modsi3+0x4c>
   8a960:	294b883a 	add	r5,r5,r5
   8a964:	31bfffc4 	addi	r6,r6,-1
   8a968:	18c7883a 	add	r3,r3,r3
   8a96c:	293ffb36 	bltu	r5,r4,8a95c <__modsi3+0x20>
   8a970:	18000526 	beq	r3,zero,8a988 <__modsi3+0x4c>
   8a974:	1806d07a 	srli	r3,r3,1
   8a978:	11400136 	bltu	r2,r5,8a980 <__modsi3+0x44>
   8a97c:	1145c83a 	sub	r2,r2,r5
   8a980:	280ad07a 	srli	r5,r5,1
   8a984:	183ffb1e 	bne	r3,zero,8a974 <__modsi3+0x38>
   8a988:	38000126 	beq	r7,zero,8a990 <__modsi3+0x54>
   8a98c:	0085c83a 	sub	r2,zero,r2
   8a990:	f800283a 	ret
   8a994:	014bc83a 	sub	r5,zero,r5
   8a998:	003fec06 	br	8a94c <__modsi3+0x10>
   8a99c:	0109c83a 	sub	r4,zero,r4
   8a9a0:	01c00044 	movi	r7,1
   8a9a4:	003fe706 	br	8a944 <__modsi3+0x8>
   8a9a8:	00c00044 	movi	r3,1
   8a9ac:	003ff106 	br	8a974 <__modsi3+0x38>

0008a9b0 <__udivsi3>:
   8a9b0:	200d883a 	mov	r6,r4
   8a9b4:	2900152e 	bgeu	r5,r4,8aa0c <__udivsi3+0x5c>
   8a9b8:	28001416 	blt	r5,zero,8aa0c <__udivsi3+0x5c>
   8a9bc:	00800804 	movi	r2,32
   8a9c0:	00c00044 	movi	r3,1
   8a9c4:	00000206 	br	8a9d0 <__udivsi3+0x20>
   8a9c8:	10000e26 	beq	r2,zero,8aa04 <__udivsi3+0x54>
   8a9cc:	28000516 	blt	r5,zero,8a9e4 <__udivsi3+0x34>
   8a9d0:	294b883a 	add	r5,r5,r5
   8a9d4:	10bfffc4 	addi	r2,r2,-1
   8a9d8:	18c7883a 	add	r3,r3,r3
   8a9dc:	293ffa36 	bltu	r5,r4,8a9c8 <__udivsi3+0x18>
   8a9e0:	18000826 	beq	r3,zero,8aa04 <__udivsi3+0x54>
   8a9e4:	0005883a 	mov	r2,zero
   8a9e8:	31400236 	bltu	r6,r5,8a9f4 <__udivsi3+0x44>
   8a9ec:	314dc83a 	sub	r6,r6,r5
   8a9f0:	10c4b03a 	or	r2,r2,r3
   8a9f4:	1806d07a 	srli	r3,r3,1
   8a9f8:	280ad07a 	srli	r5,r5,1
   8a9fc:	183ffa1e 	bne	r3,zero,8a9e8 <__udivsi3+0x38>
   8aa00:	f800283a 	ret
   8aa04:	0005883a 	mov	r2,zero
   8aa08:	f800283a 	ret
   8aa0c:	00c00044 	movi	r3,1
   8aa10:	003ff406 	br	8a9e4 <__udivsi3+0x34>

0008aa14 <__umodsi3>:
   8aa14:	2005883a 	mov	r2,r4
   8aa18:	2900122e 	bgeu	r5,r4,8aa64 <__umodsi3+0x50>
   8aa1c:	28001116 	blt	r5,zero,8aa64 <__umodsi3+0x50>
   8aa20:	01800804 	movi	r6,32
   8aa24:	00c00044 	movi	r3,1
   8aa28:	00000206 	br	8aa34 <__umodsi3+0x20>
   8aa2c:	30000c26 	beq	r6,zero,8aa60 <__umodsi3+0x4c>
   8aa30:	28000516 	blt	r5,zero,8aa48 <__umodsi3+0x34>
   8aa34:	294b883a 	add	r5,r5,r5
   8aa38:	31bfffc4 	addi	r6,r6,-1
   8aa3c:	18c7883a 	add	r3,r3,r3
   8aa40:	293ffa36 	bltu	r5,r4,8aa2c <__umodsi3+0x18>
   8aa44:	18000626 	beq	r3,zero,8aa60 <__umodsi3+0x4c>
   8aa48:	1806d07a 	srli	r3,r3,1
   8aa4c:	11400136 	bltu	r2,r5,8aa54 <__umodsi3+0x40>
   8aa50:	1145c83a 	sub	r2,r2,r5
   8aa54:	280ad07a 	srli	r5,r5,1
   8aa58:	183ffb1e 	bne	r3,zero,8aa48 <__umodsi3+0x34>
   8aa5c:	f800283a 	ret
   8aa60:	f800283a 	ret
   8aa64:	00c00044 	movi	r3,1
   8aa68:	003ff706 	br	8aa48 <__umodsi3+0x34>

0008aa6c <__mulsi3>:
   8aa6c:	0005883a 	mov	r2,zero
   8aa70:	20000726 	beq	r4,zero,8aa90 <__mulsi3+0x24>
   8aa74:	20c0004c 	andi	r3,r4,1
   8aa78:	2008d07a 	srli	r4,r4,1
   8aa7c:	18000126 	beq	r3,zero,8aa84 <__mulsi3+0x18>
   8aa80:	1145883a 	add	r2,r2,r5
   8aa84:	294b883a 	add	r5,r5,r5
   8aa88:	203ffa1e 	bne	r4,zero,8aa74 <__mulsi3+0x8>
   8aa8c:	f800283a 	ret
   8aa90:	f800283a 	ret

0008aa94 <__adddf3>:
   8aa94:	02c00434 	movhi	r11,16
   8aa98:	5affffc4 	addi	r11,r11,-1
   8aa9c:	2806d7fa 	srli	r3,r5,31
   8aaa0:	2ad4703a 	and	r10,r5,r11
   8aaa4:	3ad2703a 	and	r9,r7,r11
   8aaa8:	3804d53a 	srli	r2,r7,20
   8aaac:	3018d77a 	srli	r12,r6,29
   8aab0:	280ad53a 	srli	r5,r5,20
   8aab4:	501490fa 	slli	r10,r10,3
   8aab8:	2010d77a 	srli	r8,r4,29
   8aabc:	481290fa 	slli	r9,r9,3
   8aac0:	380ed7fa 	srli	r7,r7,31
   8aac4:	defffb04 	addi	sp,sp,-20
   8aac8:	dc800215 	stw	r18,8(sp)
   8aacc:	dc400115 	stw	r17,4(sp)
   8aad0:	dc000015 	stw	r16,0(sp)
   8aad4:	dfc00415 	stw	ra,16(sp)
   8aad8:	dcc00315 	stw	r19,12(sp)
   8aadc:	1c803fcc 	andi	r18,r3,255
   8aae0:	2c01ffcc 	andi	r16,r5,2047
   8aae4:	5210b03a 	or	r8,r10,r8
   8aae8:	202290fa 	slli	r17,r4,3
   8aaec:	1081ffcc 	andi	r2,r2,2047
   8aaf0:	4b12b03a 	or	r9,r9,r12
   8aaf4:	300c90fa 	slli	r6,r6,3
   8aaf8:	91c07526 	beq	r18,r7,8acd0 <__adddf3+0x23c>
   8aafc:	8087c83a 	sub	r3,r16,r2
   8ab00:	00c0ab0e 	bge	zero,r3,8adb0 <__adddf3+0x31c>
   8ab04:	10002a1e 	bne	r2,zero,8abb0 <__adddf3+0x11c>
   8ab08:	4984b03a 	or	r2,r9,r6
   8ab0c:	1000961e 	bne	r2,zero,8ad68 <__adddf3+0x2d4>
   8ab10:	888001cc 	andi	r2,r17,7
   8ab14:	10000726 	beq	r2,zero,8ab34 <__adddf3+0xa0>
   8ab18:	888003cc 	andi	r2,r17,15
   8ab1c:	00c00104 	movi	r3,4
   8ab20:	10c00426 	beq	r2,r3,8ab34 <__adddf3+0xa0>
   8ab24:	88c7883a 	add	r3,r17,r3
   8ab28:	1c63803a 	cmpltu	r17,r3,r17
   8ab2c:	4451883a 	add	r8,r8,r17
   8ab30:	1823883a 	mov	r17,r3
   8ab34:	4080202c 	andhi	r2,r8,128
   8ab38:	10005926 	beq	r2,zero,8aca0 <__adddf3+0x20c>
   8ab3c:	84000044 	addi	r16,r16,1
   8ab40:	0081ffc4 	movi	r2,2047
   8ab44:	8080ba26 	beq	r16,r2,8ae30 <__adddf3+0x39c>
   8ab48:	00bfe034 	movhi	r2,65408
   8ab4c:	10bfffc4 	addi	r2,r2,-1
   8ab50:	4090703a 	and	r8,r8,r2
   8ab54:	4004977a 	slli	r2,r8,29
   8ab58:	4010927a 	slli	r8,r8,9
   8ab5c:	8822d0fa 	srli	r17,r17,3
   8ab60:	8401ffcc 	andi	r16,r16,2047
   8ab64:	4010d33a 	srli	r8,r8,12
   8ab68:	9007883a 	mov	r3,r18
   8ab6c:	1444b03a 	or	r2,r2,r17
   8ab70:	8401ffcc 	andi	r16,r16,2047
   8ab74:	8020953a 	slli	r16,r16,20
   8ab78:	18c03fcc 	andi	r3,r3,255
   8ab7c:	01000434 	movhi	r4,16
   8ab80:	213fffc4 	addi	r4,r4,-1
   8ab84:	180697fa 	slli	r3,r3,31
   8ab88:	4110703a 	and	r8,r8,r4
   8ab8c:	4410b03a 	or	r8,r8,r16
   8ab90:	40c6b03a 	or	r3,r8,r3
   8ab94:	dfc00417 	ldw	ra,16(sp)
   8ab98:	dcc00317 	ldw	r19,12(sp)
   8ab9c:	dc800217 	ldw	r18,8(sp)
   8aba0:	dc400117 	ldw	r17,4(sp)
   8aba4:	dc000017 	ldw	r16,0(sp)
   8aba8:	dec00504 	addi	sp,sp,20
   8abac:	f800283a 	ret
   8abb0:	0081ffc4 	movi	r2,2047
   8abb4:	80bfd626 	beq	r16,r2,8ab10 <__adddf3+0x7c>
   8abb8:	4a402034 	orhi	r9,r9,128
   8abbc:	00800e04 	movi	r2,56
   8abc0:	10c09f16 	blt	r2,r3,8ae40 <__adddf3+0x3ac>
   8abc4:	008007c4 	movi	r2,31
   8abc8:	10c0c216 	blt	r2,r3,8aed4 <__adddf3+0x440>
   8abcc:	00800804 	movi	r2,32
   8abd0:	10c5c83a 	sub	r2,r2,r3
   8abd4:	488a983a 	sll	r5,r9,r2
   8abd8:	30c8d83a 	srl	r4,r6,r3
   8abdc:	3084983a 	sll	r2,r6,r2
   8abe0:	48c6d83a 	srl	r3,r9,r3
   8abe4:	290cb03a 	or	r6,r5,r4
   8abe8:	1004c03a 	cmpne	r2,r2,zero
   8abec:	308cb03a 	or	r6,r6,r2
   8abf0:	898dc83a 	sub	r6,r17,r6
   8abf4:	89a3803a 	cmpltu	r17,r17,r6
   8abf8:	40d1c83a 	sub	r8,r8,r3
   8abfc:	4451c83a 	sub	r8,r8,r17
   8ac00:	3023883a 	mov	r17,r6
   8ac04:	4080202c 	andhi	r2,r8,128
   8ac08:	10002326 	beq	r2,zero,8ac98 <__adddf3+0x204>
   8ac0c:	04c02034 	movhi	r19,128
   8ac10:	9cffffc4 	addi	r19,r19,-1
   8ac14:	44e6703a 	and	r19,r8,r19
   8ac18:	98007626 	beq	r19,zero,8adf4 <__adddf3+0x360>
   8ac1c:	9809883a 	mov	r4,r19
   8ac20:	008d2d40 	call	8d2d4 <__clzsi2>
   8ac24:	10fffe04 	addi	r3,r2,-8
   8ac28:	010007c4 	movi	r4,31
   8ac2c:	20c07716 	blt	r4,r3,8ae0c <__adddf3+0x378>
   8ac30:	00800804 	movi	r2,32
   8ac34:	10c5c83a 	sub	r2,r2,r3
   8ac38:	8884d83a 	srl	r2,r17,r2
   8ac3c:	98d0983a 	sll	r8,r19,r3
   8ac40:	88e2983a 	sll	r17,r17,r3
   8ac44:	1204b03a 	or	r2,r2,r8
   8ac48:	1c007416 	blt	r3,r16,8ae1c <__adddf3+0x388>
   8ac4c:	1c21c83a 	sub	r16,r3,r16
   8ac50:	82000044 	addi	r8,r16,1
   8ac54:	00c007c4 	movi	r3,31
   8ac58:	1a009116 	blt	r3,r8,8aea0 <__adddf3+0x40c>
   8ac5c:	00c00804 	movi	r3,32
   8ac60:	1a07c83a 	sub	r3,r3,r8
   8ac64:	8a08d83a 	srl	r4,r17,r8
   8ac68:	88e2983a 	sll	r17,r17,r3
   8ac6c:	10c6983a 	sll	r3,r2,r3
   8ac70:	1210d83a 	srl	r8,r2,r8
   8ac74:	8804c03a 	cmpne	r2,r17,zero
   8ac78:	1906b03a 	or	r3,r3,r4
   8ac7c:	18a2b03a 	or	r17,r3,r2
   8ac80:	0021883a 	mov	r16,zero
   8ac84:	003fa206 	br	8ab10 <__adddf3+0x7c>
   8ac88:	1890b03a 	or	r8,r3,r2
   8ac8c:	40017d26 	beq	r8,zero,8b284 <__adddf3+0x7f0>
   8ac90:	1011883a 	mov	r8,r2
   8ac94:	1823883a 	mov	r17,r3
   8ac98:	888001cc 	andi	r2,r17,7
   8ac9c:	103f9e1e 	bne	r2,zero,8ab18 <__adddf3+0x84>
   8aca0:	4004977a 	slli	r2,r8,29
   8aca4:	8822d0fa 	srli	r17,r17,3
   8aca8:	4010d0fa 	srli	r8,r8,3
   8acac:	9007883a 	mov	r3,r18
   8acb0:	1444b03a 	or	r2,r2,r17
   8acb4:	0101ffc4 	movi	r4,2047
   8acb8:	81002426 	beq	r16,r4,8ad4c <__adddf3+0x2b8>
   8acbc:	8120703a 	and	r16,r16,r4
   8acc0:	01000434 	movhi	r4,16
   8acc4:	213fffc4 	addi	r4,r4,-1
   8acc8:	4110703a 	and	r8,r8,r4
   8accc:	003fa806 	br	8ab70 <__adddf3+0xdc>
   8acd0:	8089c83a 	sub	r4,r16,r2
   8acd4:	01005e0e 	bge	zero,r4,8ae50 <__adddf3+0x3bc>
   8acd8:	10002b26 	beq	r2,zero,8ad88 <__adddf3+0x2f4>
   8acdc:	0081ffc4 	movi	r2,2047
   8ace0:	80bf8b26 	beq	r16,r2,8ab10 <__adddf3+0x7c>
   8ace4:	4a402034 	orhi	r9,r9,128
   8ace8:	00800e04 	movi	r2,56
   8acec:	1100a40e 	bge	r2,r4,8af80 <__adddf3+0x4ec>
   8acf0:	498cb03a 	or	r6,r9,r6
   8acf4:	300ac03a 	cmpne	r5,r6,zero
   8acf8:	0013883a 	mov	r9,zero
   8acfc:	2c4b883a 	add	r5,r5,r17
   8ad00:	2c63803a 	cmpltu	r17,r5,r17
   8ad04:	4a11883a 	add	r8,r9,r8
   8ad08:	8a11883a 	add	r8,r17,r8
   8ad0c:	2823883a 	mov	r17,r5
   8ad10:	4080202c 	andhi	r2,r8,128
   8ad14:	103fe026 	beq	r2,zero,8ac98 <__adddf3+0x204>
   8ad18:	84000044 	addi	r16,r16,1
   8ad1c:	0081ffc4 	movi	r2,2047
   8ad20:	8080d226 	beq	r16,r2,8b06c <__adddf3+0x5d8>
   8ad24:	00bfe034 	movhi	r2,65408
   8ad28:	10bfffc4 	addi	r2,r2,-1
   8ad2c:	4090703a 	and	r8,r8,r2
   8ad30:	880ad07a 	srli	r5,r17,1
   8ad34:	400897fa 	slli	r4,r8,31
   8ad38:	88c0004c 	andi	r3,r17,1
   8ad3c:	28e2b03a 	or	r17,r5,r3
   8ad40:	4010d07a 	srli	r8,r8,1
   8ad44:	2462b03a 	or	r17,r4,r17
   8ad48:	003f7106 	br	8ab10 <__adddf3+0x7c>
   8ad4c:	4088b03a 	or	r4,r8,r2
   8ad50:	20014526 	beq	r4,zero,8b268 <__adddf3+0x7d4>
   8ad54:	01000434 	movhi	r4,16
   8ad58:	42000234 	orhi	r8,r8,8
   8ad5c:	213fffc4 	addi	r4,r4,-1
   8ad60:	4110703a 	and	r8,r8,r4
   8ad64:	003f8206 	br	8ab70 <__adddf3+0xdc>
   8ad68:	18ffffc4 	addi	r3,r3,-1
   8ad6c:	1800491e 	bne	r3,zero,8ae94 <__adddf3+0x400>
   8ad70:	898bc83a 	sub	r5,r17,r6
   8ad74:	8963803a 	cmpltu	r17,r17,r5
   8ad78:	4251c83a 	sub	r8,r8,r9
   8ad7c:	4451c83a 	sub	r8,r8,r17
   8ad80:	2823883a 	mov	r17,r5
   8ad84:	003f9f06 	br	8ac04 <__adddf3+0x170>
   8ad88:	4984b03a 	or	r2,r9,r6
   8ad8c:	103f6026 	beq	r2,zero,8ab10 <__adddf3+0x7c>
   8ad90:	213fffc4 	addi	r4,r4,-1
   8ad94:	2000931e 	bne	r4,zero,8afe4 <__adddf3+0x550>
   8ad98:	898d883a 	add	r6,r17,r6
   8ad9c:	3463803a 	cmpltu	r17,r6,r17
   8ada0:	4251883a 	add	r8,r8,r9
   8ada4:	8a11883a 	add	r8,r17,r8
   8ada8:	3023883a 	mov	r17,r6
   8adac:	003fd806 	br	8ad10 <__adddf3+0x27c>
   8adb0:	1800541e 	bne	r3,zero,8af04 <__adddf3+0x470>
   8adb4:	80800044 	addi	r2,r16,1
   8adb8:	1081ffcc 	andi	r2,r2,2047
   8adbc:	00c00044 	movi	r3,1
   8adc0:	1880a00e 	bge	r3,r2,8b044 <__adddf3+0x5b0>
   8adc4:	8989c83a 	sub	r4,r17,r6
   8adc8:	8905803a 	cmpltu	r2,r17,r4
   8adcc:	4267c83a 	sub	r19,r8,r9
   8add0:	98a7c83a 	sub	r19,r19,r2
   8add4:	9880202c 	andhi	r2,r19,128
   8add8:	10006326 	beq	r2,zero,8af68 <__adddf3+0x4d4>
   8addc:	3463c83a 	sub	r17,r6,r17
   8ade0:	4a07c83a 	sub	r3,r9,r8
   8ade4:	344d803a 	cmpltu	r6,r6,r17
   8ade8:	19a7c83a 	sub	r19,r3,r6
   8adec:	3825883a 	mov	r18,r7
   8adf0:	983f8a1e 	bne	r19,zero,8ac1c <__adddf3+0x188>
   8adf4:	8809883a 	mov	r4,r17
   8adf8:	008d2d40 	call	8d2d4 <__clzsi2>
   8adfc:	10800804 	addi	r2,r2,32
   8ae00:	10fffe04 	addi	r3,r2,-8
   8ae04:	010007c4 	movi	r4,31
   8ae08:	20ff890e 	bge	r4,r3,8ac30 <__adddf3+0x19c>
   8ae0c:	10bff604 	addi	r2,r2,-40
   8ae10:	8884983a 	sll	r2,r17,r2
   8ae14:	0023883a 	mov	r17,zero
   8ae18:	1c3f8c0e 	bge	r3,r16,8ac4c <__adddf3+0x1b8>
   8ae1c:	023fe034 	movhi	r8,65408
   8ae20:	423fffc4 	addi	r8,r8,-1
   8ae24:	80e1c83a 	sub	r16,r16,r3
   8ae28:	1210703a 	and	r8,r2,r8
   8ae2c:	003f3806 	br	8ab10 <__adddf3+0x7c>
   8ae30:	9007883a 	mov	r3,r18
   8ae34:	0011883a 	mov	r8,zero
   8ae38:	0005883a 	mov	r2,zero
   8ae3c:	003f4c06 	br	8ab70 <__adddf3+0xdc>
   8ae40:	498cb03a 	or	r6,r9,r6
   8ae44:	300cc03a 	cmpne	r6,r6,zero
   8ae48:	0007883a 	mov	r3,zero
   8ae4c:	003f6806 	br	8abf0 <__adddf3+0x15c>
   8ae50:	20009c1e 	bne	r4,zero,8b0c4 <__adddf3+0x630>
   8ae54:	80800044 	addi	r2,r16,1
   8ae58:	1141ffcc 	andi	r5,r2,2047
   8ae5c:	01000044 	movi	r4,1
   8ae60:	2140670e 	bge	r4,r5,8b000 <__adddf3+0x56c>
   8ae64:	0101ffc4 	movi	r4,2047
   8ae68:	11007f26 	beq	r2,r4,8b068 <__adddf3+0x5d4>
   8ae6c:	898d883a 	add	r6,r17,r6
   8ae70:	4247883a 	add	r3,r8,r9
   8ae74:	3451803a 	cmpltu	r8,r6,r17
   8ae78:	40d1883a 	add	r8,r8,r3
   8ae7c:	402297fa 	slli	r17,r8,31
   8ae80:	300cd07a 	srli	r6,r6,1
   8ae84:	4010d07a 	srli	r8,r8,1
   8ae88:	1021883a 	mov	r16,r2
   8ae8c:	89a2b03a 	or	r17,r17,r6
   8ae90:	003f1f06 	br	8ab10 <__adddf3+0x7c>
   8ae94:	0081ffc4 	movi	r2,2047
   8ae98:	80bf481e 	bne	r16,r2,8abbc <__adddf3+0x128>
   8ae9c:	003f1c06 	br	8ab10 <__adddf3+0x7c>
   8aea0:	843ff844 	addi	r16,r16,-31
   8aea4:	01000804 	movi	r4,32
   8aea8:	1406d83a 	srl	r3,r2,r16
   8aeac:	41005026 	beq	r8,r4,8aff0 <__adddf3+0x55c>
   8aeb0:	01001004 	movi	r4,64
   8aeb4:	2211c83a 	sub	r8,r4,r8
   8aeb8:	1204983a 	sll	r2,r2,r8
   8aebc:	88a2b03a 	or	r17,r17,r2
   8aec0:	8822c03a 	cmpne	r17,r17,zero
   8aec4:	1c62b03a 	or	r17,r3,r17
   8aec8:	0011883a 	mov	r8,zero
   8aecc:	0021883a 	mov	r16,zero
   8aed0:	003f7106 	br	8ac98 <__adddf3+0x204>
   8aed4:	193ff804 	addi	r4,r3,-32
   8aed8:	00800804 	movi	r2,32
   8aedc:	4908d83a 	srl	r4,r9,r4
   8aee0:	18804526 	beq	r3,r2,8aff8 <__adddf3+0x564>
   8aee4:	00801004 	movi	r2,64
   8aee8:	10c5c83a 	sub	r2,r2,r3
   8aeec:	4886983a 	sll	r3,r9,r2
   8aef0:	198cb03a 	or	r6,r3,r6
   8aef4:	300cc03a 	cmpne	r6,r6,zero
   8aef8:	218cb03a 	or	r6,r4,r6
   8aefc:	0007883a 	mov	r3,zero
   8af00:	003f3b06 	br	8abf0 <__adddf3+0x15c>
   8af04:	80002a26 	beq	r16,zero,8afb0 <__adddf3+0x51c>
   8af08:	0101ffc4 	movi	r4,2047
   8af0c:	11006826 	beq	r2,r4,8b0b0 <__adddf3+0x61c>
   8af10:	00c7c83a 	sub	r3,zero,r3
   8af14:	42002034 	orhi	r8,r8,128
   8af18:	01000e04 	movi	r4,56
   8af1c:	20c07c16 	blt	r4,r3,8b110 <__adddf3+0x67c>
   8af20:	010007c4 	movi	r4,31
   8af24:	20c0da16 	blt	r4,r3,8b290 <__adddf3+0x7fc>
   8af28:	01000804 	movi	r4,32
   8af2c:	20c9c83a 	sub	r4,r4,r3
   8af30:	4114983a 	sll	r10,r8,r4
   8af34:	88cad83a 	srl	r5,r17,r3
   8af38:	8908983a 	sll	r4,r17,r4
   8af3c:	40c6d83a 	srl	r3,r8,r3
   8af40:	5162b03a 	or	r17,r10,r5
   8af44:	2008c03a 	cmpne	r4,r4,zero
   8af48:	8922b03a 	or	r17,r17,r4
   8af4c:	3463c83a 	sub	r17,r6,r17
   8af50:	48c7c83a 	sub	r3,r9,r3
   8af54:	344d803a 	cmpltu	r6,r6,r17
   8af58:	1991c83a 	sub	r8,r3,r6
   8af5c:	1021883a 	mov	r16,r2
   8af60:	3825883a 	mov	r18,r7
   8af64:	003f2706 	br	8ac04 <__adddf3+0x170>
   8af68:	24d0b03a 	or	r8,r4,r19
   8af6c:	40001b1e 	bne	r8,zero,8afdc <__adddf3+0x548>
   8af70:	0005883a 	mov	r2,zero
   8af74:	0007883a 	mov	r3,zero
   8af78:	0021883a 	mov	r16,zero
   8af7c:	003f4d06 	br	8acb4 <__adddf3+0x220>
   8af80:	008007c4 	movi	r2,31
   8af84:	11003c16 	blt	r2,r4,8b078 <__adddf3+0x5e4>
   8af88:	00800804 	movi	r2,32
   8af8c:	1105c83a 	sub	r2,r2,r4
   8af90:	488e983a 	sll	r7,r9,r2
   8af94:	310ad83a 	srl	r5,r6,r4
   8af98:	3084983a 	sll	r2,r6,r2
   8af9c:	4912d83a 	srl	r9,r9,r4
   8afa0:	394ab03a 	or	r5,r7,r5
   8afa4:	1004c03a 	cmpne	r2,r2,zero
   8afa8:	288ab03a 	or	r5,r5,r2
   8afac:	003f5306 	br	8acfc <__adddf3+0x268>
   8afb0:	4448b03a 	or	r4,r8,r17
   8afb4:	20003e26 	beq	r4,zero,8b0b0 <__adddf3+0x61c>
   8afb8:	00c6303a 	nor	r3,zero,r3
   8afbc:	18003a1e 	bne	r3,zero,8b0a8 <__adddf3+0x614>
   8afc0:	3463c83a 	sub	r17,r6,r17
   8afc4:	4a07c83a 	sub	r3,r9,r8
   8afc8:	344d803a 	cmpltu	r6,r6,r17
   8afcc:	1991c83a 	sub	r8,r3,r6
   8afd0:	1021883a 	mov	r16,r2
   8afd4:	3825883a 	mov	r18,r7
   8afd8:	003f0a06 	br	8ac04 <__adddf3+0x170>
   8afdc:	2023883a 	mov	r17,r4
   8afe0:	003f0d06 	br	8ac18 <__adddf3+0x184>
   8afe4:	0081ffc4 	movi	r2,2047
   8afe8:	80bf3f1e 	bne	r16,r2,8ace8 <__adddf3+0x254>
   8afec:	003ec806 	br	8ab10 <__adddf3+0x7c>
   8aff0:	0005883a 	mov	r2,zero
   8aff4:	003fb106 	br	8aebc <__adddf3+0x428>
   8aff8:	0007883a 	mov	r3,zero
   8affc:	003fbc06 	br	8aef0 <__adddf3+0x45c>
   8b000:	4444b03a 	or	r2,r8,r17
   8b004:	8000871e 	bne	r16,zero,8b224 <__adddf3+0x790>
   8b008:	1000ba26 	beq	r2,zero,8b2f4 <__adddf3+0x860>
   8b00c:	4984b03a 	or	r2,r9,r6
   8b010:	103ebf26 	beq	r2,zero,8ab10 <__adddf3+0x7c>
   8b014:	8985883a 	add	r2,r17,r6
   8b018:	4247883a 	add	r3,r8,r9
   8b01c:	1451803a 	cmpltu	r8,r2,r17
   8b020:	40d1883a 	add	r8,r8,r3
   8b024:	40c0202c 	andhi	r3,r8,128
   8b028:	1023883a 	mov	r17,r2
   8b02c:	183f1a26 	beq	r3,zero,8ac98 <__adddf3+0x204>
   8b030:	00bfe034 	movhi	r2,65408
   8b034:	10bfffc4 	addi	r2,r2,-1
   8b038:	2021883a 	mov	r16,r4
   8b03c:	4090703a 	and	r8,r8,r2
   8b040:	003eb306 	br	8ab10 <__adddf3+0x7c>
   8b044:	4444b03a 	or	r2,r8,r17
   8b048:	8000291e 	bne	r16,zero,8b0f0 <__adddf3+0x65c>
   8b04c:	10004b1e 	bne	r2,zero,8b17c <__adddf3+0x6e8>
   8b050:	4990b03a 	or	r8,r9,r6
   8b054:	40008b26 	beq	r8,zero,8b284 <__adddf3+0x7f0>
   8b058:	4811883a 	mov	r8,r9
   8b05c:	3023883a 	mov	r17,r6
   8b060:	3825883a 	mov	r18,r7
   8b064:	003eaa06 	br	8ab10 <__adddf3+0x7c>
   8b068:	1021883a 	mov	r16,r2
   8b06c:	0011883a 	mov	r8,zero
   8b070:	0005883a 	mov	r2,zero
   8b074:	003f0f06 	br	8acb4 <__adddf3+0x220>
   8b078:	217ff804 	addi	r5,r4,-32
   8b07c:	00800804 	movi	r2,32
   8b080:	494ad83a 	srl	r5,r9,r5
   8b084:	20807d26 	beq	r4,r2,8b27c <__adddf3+0x7e8>
   8b088:	00801004 	movi	r2,64
   8b08c:	1109c83a 	sub	r4,r2,r4
   8b090:	4912983a 	sll	r9,r9,r4
   8b094:	498cb03a 	or	r6,r9,r6
   8b098:	300cc03a 	cmpne	r6,r6,zero
   8b09c:	298ab03a 	or	r5,r5,r6
   8b0a0:	0013883a 	mov	r9,zero
   8b0a4:	003f1506 	br	8acfc <__adddf3+0x268>
   8b0a8:	0101ffc4 	movi	r4,2047
   8b0ac:	113f9a1e 	bne	r2,r4,8af18 <__adddf3+0x484>
   8b0b0:	4811883a 	mov	r8,r9
   8b0b4:	3023883a 	mov	r17,r6
   8b0b8:	1021883a 	mov	r16,r2
   8b0bc:	3825883a 	mov	r18,r7
   8b0c0:	003e9306 	br	8ab10 <__adddf3+0x7c>
   8b0c4:	8000161e 	bne	r16,zero,8b120 <__adddf3+0x68c>
   8b0c8:	444ab03a 	or	r5,r8,r17
   8b0cc:	28005126 	beq	r5,zero,8b214 <__adddf3+0x780>
   8b0d0:	0108303a 	nor	r4,zero,r4
   8b0d4:	20004d1e 	bne	r4,zero,8b20c <__adddf3+0x778>
   8b0d8:	89a3883a 	add	r17,r17,r6
   8b0dc:	4253883a 	add	r9,r8,r9
   8b0e0:	898d803a 	cmpltu	r6,r17,r6
   8b0e4:	3251883a 	add	r8,r6,r9
   8b0e8:	1021883a 	mov	r16,r2
   8b0ec:	003f0806 	br	8ad10 <__adddf3+0x27c>
   8b0f0:	1000301e 	bne	r2,zero,8b1b4 <__adddf3+0x720>
   8b0f4:	4984b03a 	or	r2,r9,r6
   8b0f8:	10007126 	beq	r2,zero,8b2c0 <__adddf3+0x82c>
   8b0fc:	4811883a 	mov	r8,r9
   8b100:	3023883a 	mov	r17,r6
   8b104:	3825883a 	mov	r18,r7
   8b108:	0401ffc4 	movi	r16,2047
   8b10c:	003e8006 	br	8ab10 <__adddf3+0x7c>
   8b110:	4462b03a 	or	r17,r8,r17
   8b114:	8822c03a 	cmpne	r17,r17,zero
   8b118:	0007883a 	mov	r3,zero
   8b11c:	003f8b06 	br	8af4c <__adddf3+0x4b8>
   8b120:	0141ffc4 	movi	r5,2047
   8b124:	11403b26 	beq	r2,r5,8b214 <__adddf3+0x780>
   8b128:	0109c83a 	sub	r4,zero,r4
   8b12c:	42002034 	orhi	r8,r8,128
   8b130:	01400e04 	movi	r5,56
   8b134:	29006716 	blt	r5,r4,8b2d4 <__adddf3+0x840>
   8b138:	014007c4 	movi	r5,31
   8b13c:	29007016 	blt	r5,r4,8b300 <__adddf3+0x86c>
   8b140:	01400804 	movi	r5,32
   8b144:	290bc83a 	sub	r5,r5,r4
   8b148:	4154983a 	sll	r10,r8,r5
   8b14c:	890ed83a 	srl	r7,r17,r4
   8b150:	894a983a 	sll	r5,r17,r5
   8b154:	4108d83a 	srl	r4,r8,r4
   8b158:	51e2b03a 	or	r17,r10,r7
   8b15c:	280ac03a 	cmpne	r5,r5,zero
   8b160:	8962b03a 	or	r17,r17,r5
   8b164:	89a3883a 	add	r17,r17,r6
   8b168:	2253883a 	add	r9,r4,r9
   8b16c:	898d803a 	cmpltu	r6,r17,r6
   8b170:	3251883a 	add	r8,r6,r9
   8b174:	1021883a 	mov	r16,r2
   8b178:	003ee506 	br	8ad10 <__adddf3+0x27c>
   8b17c:	4984b03a 	or	r2,r9,r6
   8b180:	103e6326 	beq	r2,zero,8ab10 <__adddf3+0x7c>
   8b184:	8987c83a 	sub	r3,r17,r6
   8b188:	88c9803a 	cmpltu	r4,r17,r3
   8b18c:	4245c83a 	sub	r2,r8,r9
   8b190:	1105c83a 	sub	r2,r2,r4
   8b194:	1100202c 	andhi	r4,r2,128
   8b198:	203ebb26 	beq	r4,zero,8ac88 <__adddf3+0x1f4>
   8b19c:	3463c83a 	sub	r17,r6,r17
   8b1a0:	4a07c83a 	sub	r3,r9,r8
   8b1a4:	344d803a 	cmpltu	r6,r6,r17
   8b1a8:	1991c83a 	sub	r8,r3,r6
   8b1ac:	3825883a 	mov	r18,r7
   8b1b0:	003e5706 	br	8ab10 <__adddf3+0x7c>
   8b1b4:	4984b03a 	or	r2,r9,r6
   8b1b8:	10002e26 	beq	r2,zero,8b274 <__adddf3+0x7e0>
   8b1bc:	4004d0fa 	srli	r2,r8,3
   8b1c0:	8822d0fa 	srli	r17,r17,3
   8b1c4:	4010977a 	slli	r8,r8,29
   8b1c8:	10c0022c 	andhi	r3,r2,8
   8b1cc:	4462b03a 	or	r17,r8,r17
   8b1d0:	18000826 	beq	r3,zero,8b1f4 <__adddf3+0x760>
   8b1d4:	4808d0fa 	srli	r4,r9,3
   8b1d8:	20c0022c 	andhi	r3,r4,8
   8b1dc:	1800051e 	bne	r3,zero,8b1f4 <__adddf3+0x760>
   8b1e0:	300cd0fa 	srli	r6,r6,3
   8b1e4:	4806977a 	slli	r3,r9,29
   8b1e8:	2005883a 	mov	r2,r4
   8b1ec:	3825883a 	mov	r18,r7
   8b1f0:	19a2b03a 	or	r17,r3,r6
   8b1f4:	8810d77a 	srli	r8,r17,29
   8b1f8:	100490fa 	slli	r2,r2,3
   8b1fc:	882290fa 	slli	r17,r17,3
   8b200:	0401ffc4 	movi	r16,2047
   8b204:	4090b03a 	or	r8,r8,r2
   8b208:	003e4106 	br	8ab10 <__adddf3+0x7c>
   8b20c:	0141ffc4 	movi	r5,2047
   8b210:	117fc71e 	bne	r2,r5,8b130 <__adddf3+0x69c>
   8b214:	4811883a 	mov	r8,r9
   8b218:	3023883a 	mov	r17,r6
   8b21c:	1021883a 	mov	r16,r2
   8b220:	003e3b06 	br	8ab10 <__adddf3+0x7c>
   8b224:	10002f26 	beq	r2,zero,8b2e4 <__adddf3+0x850>
   8b228:	4984b03a 	or	r2,r9,r6
   8b22c:	10001126 	beq	r2,zero,8b274 <__adddf3+0x7e0>
   8b230:	4004d0fa 	srli	r2,r8,3
   8b234:	8822d0fa 	srli	r17,r17,3
   8b238:	4010977a 	slli	r8,r8,29
   8b23c:	10c0022c 	andhi	r3,r2,8
   8b240:	4462b03a 	or	r17,r8,r17
   8b244:	183feb26 	beq	r3,zero,8b1f4 <__adddf3+0x760>
   8b248:	4808d0fa 	srli	r4,r9,3
   8b24c:	20c0022c 	andhi	r3,r4,8
   8b250:	183fe81e 	bne	r3,zero,8b1f4 <__adddf3+0x760>
   8b254:	300cd0fa 	srli	r6,r6,3
   8b258:	4806977a 	slli	r3,r9,29
   8b25c:	2005883a 	mov	r2,r4
   8b260:	19a2b03a 	or	r17,r3,r6
   8b264:	003fe306 	br	8b1f4 <__adddf3+0x760>
   8b268:	0011883a 	mov	r8,zero
   8b26c:	0005883a 	mov	r2,zero
   8b270:	003e3f06 	br	8ab70 <__adddf3+0xdc>
   8b274:	0401ffc4 	movi	r16,2047
   8b278:	003e2506 	br	8ab10 <__adddf3+0x7c>
   8b27c:	0013883a 	mov	r9,zero
   8b280:	003f8406 	br	8b094 <__adddf3+0x600>
   8b284:	0005883a 	mov	r2,zero
   8b288:	0007883a 	mov	r3,zero
   8b28c:	003e8906 	br	8acb4 <__adddf3+0x220>
   8b290:	197ff804 	addi	r5,r3,-32
   8b294:	01000804 	movi	r4,32
   8b298:	414ad83a 	srl	r5,r8,r5
   8b29c:	19002426 	beq	r3,r4,8b330 <__adddf3+0x89c>
   8b2a0:	01001004 	movi	r4,64
   8b2a4:	20c7c83a 	sub	r3,r4,r3
   8b2a8:	40c6983a 	sll	r3,r8,r3
   8b2ac:	1c46b03a 	or	r3,r3,r17
   8b2b0:	1806c03a 	cmpne	r3,r3,zero
   8b2b4:	28e2b03a 	or	r17,r5,r3
   8b2b8:	0007883a 	mov	r3,zero
   8b2bc:	003f2306 	br	8af4c <__adddf3+0x4b8>
   8b2c0:	0007883a 	mov	r3,zero
   8b2c4:	5811883a 	mov	r8,r11
   8b2c8:	00bfffc4 	movi	r2,-1
   8b2cc:	0401ffc4 	movi	r16,2047
   8b2d0:	003e7806 	br	8acb4 <__adddf3+0x220>
   8b2d4:	4462b03a 	or	r17,r8,r17
   8b2d8:	8822c03a 	cmpne	r17,r17,zero
   8b2dc:	0009883a 	mov	r4,zero
   8b2e0:	003fa006 	br	8b164 <__adddf3+0x6d0>
   8b2e4:	4811883a 	mov	r8,r9
   8b2e8:	3023883a 	mov	r17,r6
   8b2ec:	0401ffc4 	movi	r16,2047
   8b2f0:	003e0706 	br	8ab10 <__adddf3+0x7c>
   8b2f4:	4811883a 	mov	r8,r9
   8b2f8:	3023883a 	mov	r17,r6
   8b2fc:	003e0406 	br	8ab10 <__adddf3+0x7c>
   8b300:	21fff804 	addi	r7,r4,-32
   8b304:	01400804 	movi	r5,32
   8b308:	41ced83a 	srl	r7,r8,r7
   8b30c:	21400a26 	beq	r4,r5,8b338 <__adddf3+0x8a4>
   8b310:	01401004 	movi	r5,64
   8b314:	2909c83a 	sub	r4,r5,r4
   8b318:	4108983a 	sll	r4,r8,r4
   8b31c:	2448b03a 	or	r4,r4,r17
   8b320:	2008c03a 	cmpne	r4,r4,zero
   8b324:	3922b03a 	or	r17,r7,r4
   8b328:	0009883a 	mov	r4,zero
   8b32c:	003f8d06 	br	8b164 <__adddf3+0x6d0>
   8b330:	0007883a 	mov	r3,zero
   8b334:	003fdd06 	br	8b2ac <__adddf3+0x818>
   8b338:	0009883a 	mov	r4,zero
   8b33c:	003ff706 	br	8b31c <__adddf3+0x888>

0008b340 <__divdf3>:
   8b340:	defff004 	addi	sp,sp,-64
   8b344:	dc800815 	stw	r18,32(sp)
   8b348:	2824d53a 	srli	r18,r5,20
   8b34c:	dd800c15 	stw	r22,48(sp)
   8b350:	282cd7fa 	srli	r22,r5,31
   8b354:	dc000615 	stw	r16,24(sp)
   8b358:	04000434 	movhi	r16,16
   8b35c:	843fffc4 	addi	r16,r16,-1
   8b360:	dfc00f15 	stw	ra,60(sp)
   8b364:	df000e15 	stw	fp,56(sp)
   8b368:	ddc00d15 	stw	r23,52(sp)
   8b36c:	dd400b15 	stw	r21,44(sp)
   8b370:	dd000a15 	stw	r20,40(sp)
   8b374:	dcc00915 	stw	r19,36(sp)
   8b378:	dc400715 	stw	r17,28(sp)
   8b37c:	9481ffcc 	andi	r18,r18,2047
   8b380:	2c20703a 	and	r16,r5,r16
   8b384:	b2003fcc 	andi	r8,r22,255
   8b388:	90006126 	beq	r18,zero,8b510 <__divdf3+0x1d0>
   8b38c:	0081ffc4 	movi	r2,2047
   8b390:	202b883a 	mov	r21,r4
   8b394:	90803726 	beq	r18,r2,8b474 <__divdf3+0x134>
   8b398:	80800434 	orhi	r2,r16,16
   8b39c:	100490fa 	slli	r2,r2,3
   8b3a0:	2020d77a 	srli	r16,r4,29
   8b3a4:	202a90fa 	slli	r21,r4,3
   8b3a8:	94bf0044 	addi	r18,r18,-1023
   8b3ac:	80a0b03a 	or	r16,r16,r2
   8b3b0:	0013883a 	mov	r9,zero
   8b3b4:	000b883a 	mov	r5,zero
   8b3b8:	3806d53a 	srli	r3,r7,20
   8b3bc:	382ed7fa 	srli	r23,r7,31
   8b3c0:	04400434 	movhi	r17,16
   8b3c4:	8c7fffc4 	addi	r17,r17,-1
   8b3c8:	18c1ffcc 	andi	r3,r3,2047
   8b3cc:	3029883a 	mov	r20,r6
   8b3d0:	3c62703a 	and	r17,r7,r17
   8b3d4:	bf003fcc 	andi	fp,r23,255
   8b3d8:	18006e26 	beq	r3,zero,8b594 <__divdf3+0x254>
   8b3dc:	0081ffc4 	movi	r2,2047
   8b3e0:	18806626 	beq	r3,r2,8b57c <__divdf3+0x23c>
   8b3e4:	88800434 	orhi	r2,r17,16
   8b3e8:	100490fa 	slli	r2,r2,3
   8b3ec:	3022d77a 	srli	r17,r6,29
   8b3f0:	302890fa 	slli	r20,r6,3
   8b3f4:	18ff0044 	addi	r3,r3,-1023
   8b3f8:	88a2b03a 	or	r17,r17,r2
   8b3fc:	000f883a 	mov	r7,zero
   8b400:	b5e6f03a 	xor	r19,r22,r23
   8b404:	3a4cb03a 	or	r6,r7,r9
   8b408:	008003c4 	movi	r2,15
   8b40c:	9809883a 	mov	r4,r19
   8b410:	90c7c83a 	sub	r3,r18,r3
   8b414:	9cc03fcc 	andi	r19,r19,255
   8b418:	11809636 	bltu	r2,r6,8b674 <__divdf3+0x334>
   8b41c:	300c90ba 	slli	r6,r6,2
   8b420:	00800274 	movhi	r2,9
   8b424:	10ad0d04 	addi	r2,r2,-19404
   8b428:	308d883a 	add	r6,r6,r2
   8b42c:	30800017 	ldw	r2,0(r6)
   8b430:	1000683a 	jmp	r2
   8b434:	0008b674 	movhi	zero,8921
   8b438:	0008b4ac 	andhi	zero,zero,8914
   8b43c:	0008b664 	muli	zero,zero,8921
   8b440:	0008b4a0 	cmpeqi	zero,zero,8914
   8b444:	0008b664 	muli	zero,zero,8921
   8b448:	0008b638 	rdprs	zero,zero,8920
   8b44c:	0008b664 	muli	zero,zero,8921
   8b450:	0008b4a0 	cmpeqi	zero,zero,8914
   8b454:	0008b4ac 	andhi	zero,zero,8914
   8b458:	0008b4ac 	andhi	zero,zero,8914
   8b45c:	0008b638 	rdprs	zero,zero,8920
   8b460:	0008b4a0 	cmpeqi	zero,zero,8914
   8b464:	0008b490 	cmplti	zero,zero,8914
   8b468:	0008b490 	cmplti	zero,zero,8914
   8b46c:	0008b490 	cmplti	zero,zero,8914
   8b470:	0008b9fc 	xorhi	zero,zero,8935
   8b474:	2404b03a 	or	r2,r4,r16
   8b478:	10006c1e 	bne	r2,zero,8b62c <__divdf3+0x2ec>
   8b47c:	02400204 	movi	r9,8
   8b480:	0021883a 	mov	r16,zero
   8b484:	002b883a 	mov	r21,zero
   8b488:	01400084 	movi	r5,2
   8b48c:	003fca06 	br	8b3b8 <__divdf3+0x78>
   8b490:	8023883a 	mov	r17,r16
   8b494:	a829883a 	mov	r20,r21
   8b498:	4039883a 	mov	fp,r8
   8b49c:	280f883a 	mov	r7,r5
   8b4a0:	00800084 	movi	r2,2
   8b4a4:	3881601e 	bne	r7,r2,8ba28 <__divdf3+0x6e8>
   8b4a8:	e027883a 	mov	r19,fp
   8b4ac:	9900004c 	andi	r4,r19,1
   8b4b0:	0081ffc4 	movi	r2,2047
   8b4b4:	0021883a 	mov	r16,zero
   8b4b8:	002b883a 	mov	r21,zero
   8b4bc:	1004953a 	slli	r2,r2,20
   8b4c0:	20c03fcc 	andi	r3,r4,255
   8b4c4:	01400434 	movhi	r5,16
   8b4c8:	297fffc4 	addi	r5,r5,-1
   8b4cc:	180697fa 	slli	r3,r3,31
   8b4d0:	8160703a 	and	r16,r16,r5
   8b4d4:	80a0b03a 	or	r16,r16,r2
   8b4d8:	80c6b03a 	or	r3,r16,r3
   8b4dc:	a805883a 	mov	r2,r21
   8b4e0:	dfc00f17 	ldw	ra,60(sp)
   8b4e4:	df000e17 	ldw	fp,56(sp)
   8b4e8:	ddc00d17 	ldw	r23,52(sp)
   8b4ec:	dd800c17 	ldw	r22,48(sp)
   8b4f0:	dd400b17 	ldw	r21,44(sp)
   8b4f4:	dd000a17 	ldw	r20,40(sp)
   8b4f8:	dcc00917 	ldw	r19,36(sp)
   8b4fc:	dc800817 	ldw	r18,32(sp)
   8b500:	dc400717 	ldw	r17,28(sp)
   8b504:	dc000617 	ldw	r16,24(sp)
   8b508:	dec01004 	addi	sp,sp,64
   8b50c:	f800283a 	ret
   8b510:	2404b03a 	or	r2,r4,r16
   8b514:	2023883a 	mov	r17,r4
   8b518:	10003f26 	beq	r2,zero,8b618 <__divdf3+0x2d8>
   8b51c:	80015e26 	beq	r16,zero,8ba98 <__divdf3+0x758>
   8b520:	8009883a 	mov	r4,r16
   8b524:	d9800215 	stw	r6,8(sp)
   8b528:	d9c00515 	stw	r7,20(sp)
   8b52c:	da000415 	stw	r8,16(sp)
   8b530:	008d2d40 	call	8d2d4 <__clzsi2>
   8b534:	d9800217 	ldw	r6,8(sp)
   8b538:	d9c00517 	ldw	r7,20(sp)
   8b53c:	da000417 	ldw	r8,16(sp)
   8b540:	113ffd44 	addi	r4,r2,-11
   8b544:	00c00704 	movi	r3,28
   8b548:	19014f16 	blt	r3,r4,8ba88 <__divdf3+0x748>
   8b54c:	00c00744 	movi	r3,29
   8b550:	157ffe04 	addi	r21,r2,-8
   8b554:	1907c83a 	sub	r3,r3,r4
   8b558:	8560983a 	sll	r16,r16,r21
   8b55c:	88c6d83a 	srl	r3,r17,r3
   8b560:	8d6a983a 	sll	r21,r17,r21
   8b564:	1c20b03a 	or	r16,r3,r16
   8b568:	1080fcc4 	addi	r2,r2,1011
   8b56c:	00a5c83a 	sub	r18,zero,r2
   8b570:	0013883a 	mov	r9,zero
   8b574:	000b883a 	mov	r5,zero
   8b578:	003f8f06 	br	8b3b8 <__divdf3+0x78>
   8b57c:	3444b03a 	or	r2,r6,r17
   8b580:	1000231e 	bne	r2,zero,8b610 <__divdf3+0x2d0>
   8b584:	0023883a 	mov	r17,zero
   8b588:	0029883a 	mov	r20,zero
   8b58c:	01c00084 	movi	r7,2
   8b590:	003f9b06 	br	8b400 <__divdf3+0xc0>
   8b594:	3444b03a 	or	r2,r6,r17
   8b598:	10001926 	beq	r2,zero,8b600 <__divdf3+0x2c0>
   8b59c:	88014b26 	beq	r17,zero,8bacc <__divdf3+0x78c>
   8b5a0:	8809883a 	mov	r4,r17
   8b5a4:	d9400115 	stw	r5,4(sp)
   8b5a8:	d9800215 	stw	r6,8(sp)
   8b5ac:	da000415 	stw	r8,16(sp)
   8b5b0:	da400315 	stw	r9,12(sp)
   8b5b4:	008d2d40 	call	8d2d4 <__clzsi2>
   8b5b8:	d9400117 	ldw	r5,4(sp)
   8b5bc:	d9800217 	ldw	r6,8(sp)
   8b5c0:	da000417 	ldw	r8,16(sp)
   8b5c4:	da400317 	ldw	r9,12(sp)
   8b5c8:	113ffd44 	addi	r4,r2,-11
   8b5cc:	00c00704 	movi	r3,28
   8b5d0:	19013a16 	blt	r3,r4,8babc <__divdf3+0x77c>
   8b5d4:	00c00744 	movi	r3,29
   8b5d8:	153ffe04 	addi	r20,r2,-8
   8b5dc:	1907c83a 	sub	r3,r3,r4
   8b5e0:	8d22983a 	sll	r17,r17,r20
   8b5e4:	30c6d83a 	srl	r3,r6,r3
   8b5e8:	3528983a 	sll	r20,r6,r20
   8b5ec:	1c62b03a 	or	r17,r3,r17
   8b5f0:	1080fcc4 	addi	r2,r2,1011
   8b5f4:	0087c83a 	sub	r3,zero,r2
   8b5f8:	000f883a 	mov	r7,zero
   8b5fc:	003f8006 	br	8b400 <__divdf3+0xc0>
   8b600:	0023883a 	mov	r17,zero
   8b604:	0029883a 	mov	r20,zero
   8b608:	01c00044 	movi	r7,1
   8b60c:	003f7c06 	br	8b400 <__divdf3+0xc0>
   8b610:	01c000c4 	movi	r7,3
   8b614:	003f7a06 	br	8b400 <__divdf3+0xc0>
   8b618:	02400104 	movi	r9,4
   8b61c:	0021883a 	mov	r16,zero
   8b620:	002b883a 	mov	r21,zero
   8b624:	01400044 	movi	r5,1
   8b628:	003f6306 	br	8b3b8 <__divdf3+0x78>
   8b62c:	02400304 	movi	r9,12
   8b630:	014000c4 	movi	r5,3
   8b634:	003f6006 	br	8b3b8 <__divdf3+0x78>
   8b638:	04000434 	movhi	r16,16
   8b63c:	0009883a 	mov	r4,zero
   8b640:	843fffc4 	addi	r16,r16,-1
   8b644:	057fffc4 	movi	r21,-1
   8b648:	0081ffc4 	movi	r2,2047
   8b64c:	003f9b06 	br	8b4bc <__divdf3+0x17c>
   8b650:	00c00044 	movi	r3,1
   8b654:	1887c83a 	sub	r3,r3,r2
   8b658:	01000e04 	movi	r4,56
   8b65c:	20c1530e 	bge	r4,r3,8bbac <__divdf3+0x86c>
   8b660:	9900004c 	andi	r4,r19,1
   8b664:	0005883a 	mov	r2,zero
   8b668:	0021883a 	mov	r16,zero
   8b66c:	002b883a 	mov	r21,zero
   8b670:	003f9206 	br	8b4bc <__divdf3+0x17c>
   8b674:	8c012e36 	bltu	r17,r16,8bb30 <__divdf3+0x7f0>
   8b678:	84412c26 	beq	r16,r17,8bb2c <__divdf3+0x7ec>
   8b67c:	a82f883a 	mov	r23,r21
   8b680:	18ffffc4 	addi	r3,r3,-1
   8b684:	002b883a 	mov	r21,zero
   8b688:	a004d63a 	srli	r2,r20,24
   8b68c:	8822923a 	slli	r17,r17,8
   8b690:	a028923a 	slli	r20,r20,8
   8b694:	8009883a 	mov	r4,r16
   8b698:	88acb03a 	or	r22,r17,r2
   8b69c:	dd000015 	stw	r20,0(sp)
   8b6a0:	b028d43a 	srli	r20,r22,16
   8b6a4:	d8c00215 	stw	r3,8(sp)
   8b6a8:	b4bfffcc 	andi	r18,r22,65535
   8b6ac:	a00b883a 	mov	r5,r20
   8b6b0:	008a9b00 	call	8a9b0 <__udivsi3>
   8b6b4:	100b883a 	mov	r5,r2
   8b6b8:	9009883a 	mov	r4,r18
   8b6bc:	1023883a 	mov	r17,r2
   8b6c0:	008aa6c0 	call	8aa6c <__mulsi3>
   8b6c4:	8009883a 	mov	r4,r16
   8b6c8:	a00b883a 	mov	r5,r20
   8b6cc:	1039883a 	mov	fp,r2
   8b6d0:	008aa140 	call	8aa14 <__umodsi3>
   8b6d4:	1004943a 	slli	r2,r2,16
   8b6d8:	b808d43a 	srli	r4,r23,16
   8b6dc:	d8c00217 	ldw	r3,8(sp)
   8b6e0:	2084b03a 	or	r2,r4,r2
   8b6e4:	1700062e 	bgeu	r2,fp,8b700 <__divdf3+0x3c0>
   8b6e8:	1585883a 	add	r2,r2,r22
   8b6ec:	893fffc4 	addi	r4,r17,-1
   8b6f0:	15811d36 	bltu	r2,r22,8bb68 <__divdf3+0x828>
   8b6f4:	17011c2e 	bgeu	r2,fp,8bb68 <__divdf3+0x828>
   8b6f8:	8c7fff84 	addi	r17,r17,-2
   8b6fc:	1585883a 	add	r2,r2,r22
   8b700:	1739c83a 	sub	fp,r2,fp
   8b704:	a00b883a 	mov	r5,r20
   8b708:	e009883a 	mov	r4,fp
   8b70c:	d8c00215 	stw	r3,8(sp)
   8b710:	008a9b00 	call	8a9b0 <__udivsi3>
   8b714:	100b883a 	mov	r5,r2
   8b718:	9009883a 	mov	r4,r18
   8b71c:	1021883a 	mov	r16,r2
   8b720:	008aa6c0 	call	8aa6c <__mulsi3>
   8b724:	a00b883a 	mov	r5,r20
   8b728:	e009883a 	mov	r4,fp
   8b72c:	d8800415 	stw	r2,16(sp)
   8b730:	008aa140 	call	8aa14 <__umodsi3>
   8b734:	1004943a 	slli	r2,r2,16
   8b738:	da000417 	ldw	r8,16(sp)
   8b73c:	bdffffcc 	andi	r23,r23,65535
   8b740:	b884b03a 	or	r2,r23,r2
   8b744:	d8c00217 	ldw	r3,8(sp)
   8b748:	1200062e 	bgeu	r2,r8,8b764 <__divdf3+0x424>
   8b74c:	1585883a 	add	r2,r2,r22
   8b750:	813fffc4 	addi	r4,r16,-1
   8b754:	15810236 	bltu	r2,r22,8bb60 <__divdf3+0x820>
   8b758:	1201012e 	bgeu	r2,r8,8bb60 <__divdf3+0x820>
   8b75c:	843fff84 	addi	r16,r16,-2
   8b760:	1585883a 	add	r2,r2,r22
   8b764:	8822943a 	slli	r17,r17,16
   8b768:	d9800017 	ldw	r6,0(sp)
   8b76c:	1211c83a 	sub	r8,r2,r8
   8b770:	8c22b03a 	or	r17,r17,r16
   8b774:	373fffcc 	andi	fp,r6,65535
   8b778:	8abfffcc 	andi	r10,r17,65535
   8b77c:	8820d43a 	srli	r16,r17,16
   8b780:	5009883a 	mov	r4,r10
   8b784:	e00b883a 	mov	r5,fp
   8b788:	302ed43a 	srli	r23,r6,16
   8b78c:	d8c00215 	stw	r3,8(sp)
   8b790:	da000415 	stw	r8,16(sp)
   8b794:	da800115 	stw	r10,4(sp)
   8b798:	008aa6c0 	call	8aa6c <__mulsi3>
   8b79c:	800b883a 	mov	r5,r16
   8b7a0:	e009883a 	mov	r4,fp
   8b7a4:	d8800515 	stw	r2,20(sp)
   8b7a8:	008aa6c0 	call	8aa6c <__mulsi3>
   8b7ac:	8009883a 	mov	r4,r16
   8b7b0:	b80b883a 	mov	r5,r23
   8b7b4:	d8800315 	stw	r2,12(sp)
   8b7b8:	008aa6c0 	call	8aa6c <__mulsi3>
   8b7bc:	da800117 	ldw	r10,4(sp)
   8b7c0:	b80b883a 	mov	r5,r23
   8b7c4:	1021883a 	mov	r16,r2
   8b7c8:	5009883a 	mov	r4,r10
   8b7cc:	008aa6c0 	call	8aa6c <__mulsi3>
   8b7d0:	d9c00517 	ldw	r7,20(sp)
   8b7d4:	da400317 	ldw	r9,12(sp)
   8b7d8:	d8c00217 	ldw	r3,8(sp)
   8b7dc:	3808d43a 	srli	r4,r7,16
   8b7e0:	1245883a 	add	r2,r2,r9
   8b7e4:	da000417 	ldw	r8,16(sp)
   8b7e8:	2085883a 	add	r2,r4,r2
   8b7ec:	1240022e 	bgeu	r2,r9,8b7f8 <__divdf3+0x4b8>
   8b7f0:	01000074 	movhi	r4,1
   8b7f4:	8121883a 	add	r16,r16,r4
   8b7f8:	1008d43a 	srli	r4,r2,16
   8b7fc:	1004943a 	slli	r2,r2,16
   8b800:	39ffffcc 	andi	r7,r7,65535
   8b804:	2409883a 	add	r4,r4,r16
   8b808:	11c5883a 	add	r2,r2,r7
   8b80c:	4100bb36 	bltu	r8,r4,8bafc <__divdf3+0x7bc>
   8b810:	4100d726 	beq	r8,r4,8bb70 <__divdf3+0x830>
   8b814:	4109c83a 	sub	r4,r8,r4
   8b818:	a8a1c83a 	sub	r16,r21,r2
   8b81c:	ac2b803a 	cmpltu	r21,r21,r16
   8b820:	256bc83a 	sub	r21,r4,r21
   8b824:	b540d926 	beq	r22,r21,8bb8c <__divdf3+0x84c>
   8b828:	a00b883a 	mov	r5,r20
   8b82c:	a809883a 	mov	r4,r21
   8b830:	d8c00215 	stw	r3,8(sp)
   8b834:	008a9b00 	call	8a9b0 <__udivsi3>
   8b838:	100b883a 	mov	r5,r2
   8b83c:	9009883a 	mov	r4,r18
   8b840:	d8800515 	stw	r2,20(sp)
   8b844:	008aa6c0 	call	8aa6c <__mulsi3>
   8b848:	a809883a 	mov	r4,r21
   8b84c:	a00b883a 	mov	r5,r20
   8b850:	d8800415 	stw	r2,16(sp)
   8b854:	008aa140 	call	8aa14 <__umodsi3>
   8b858:	1004943a 	slli	r2,r2,16
   8b85c:	8008d43a 	srli	r4,r16,16
   8b860:	da000417 	ldw	r8,16(sp)
   8b864:	d8c00217 	ldw	r3,8(sp)
   8b868:	2084b03a 	or	r2,r4,r2
   8b86c:	d9c00517 	ldw	r7,20(sp)
   8b870:	1200062e 	bgeu	r2,r8,8b88c <__divdf3+0x54c>
   8b874:	1585883a 	add	r2,r2,r22
   8b878:	393fffc4 	addi	r4,r7,-1
   8b87c:	1580c536 	bltu	r2,r22,8bb94 <__divdf3+0x854>
   8b880:	1200c42e 	bgeu	r2,r8,8bb94 <__divdf3+0x854>
   8b884:	39ffff84 	addi	r7,r7,-2
   8b888:	1585883a 	add	r2,r2,r22
   8b88c:	122bc83a 	sub	r21,r2,r8
   8b890:	a00b883a 	mov	r5,r20
   8b894:	a809883a 	mov	r4,r21
   8b898:	d8c00215 	stw	r3,8(sp)
   8b89c:	d9c00515 	stw	r7,20(sp)
   8b8a0:	008a9b00 	call	8a9b0 <__udivsi3>
   8b8a4:	9009883a 	mov	r4,r18
   8b8a8:	100b883a 	mov	r5,r2
   8b8ac:	d8800415 	stw	r2,16(sp)
   8b8b0:	008aa6c0 	call	8aa6c <__mulsi3>
   8b8b4:	a809883a 	mov	r4,r21
   8b8b8:	a00b883a 	mov	r5,r20
   8b8bc:	1025883a 	mov	r18,r2
   8b8c0:	008aa140 	call	8aa14 <__umodsi3>
   8b8c4:	1004943a 	slli	r2,r2,16
   8b8c8:	813fffcc 	andi	r4,r16,65535
   8b8cc:	d8c00217 	ldw	r3,8(sp)
   8b8d0:	20a0b03a 	or	r16,r4,r2
   8b8d4:	d9c00517 	ldw	r7,20(sp)
   8b8d8:	da000417 	ldw	r8,16(sp)
   8b8dc:	8480062e 	bgeu	r16,r18,8b8f8 <__divdf3+0x5b8>
   8b8e0:	85a1883a 	add	r16,r16,r22
   8b8e4:	40bfffc4 	addi	r2,r8,-1
   8b8e8:	8580ac36 	bltu	r16,r22,8bb9c <__divdf3+0x85c>
   8b8ec:	8480ab2e 	bgeu	r16,r18,8bb9c <__divdf3+0x85c>
   8b8f0:	423fff84 	addi	r8,r8,-2
   8b8f4:	85a1883a 	add	r16,r16,r22
   8b8f8:	3804943a 	slli	r2,r7,16
   8b8fc:	84a1c83a 	sub	r16,r16,r18
   8b900:	e009883a 	mov	r4,fp
   8b904:	1228b03a 	or	r20,r2,r8
   8b908:	a1ffffcc 	andi	r7,r20,65535
   8b90c:	a024d43a 	srli	r18,r20,16
   8b910:	380b883a 	mov	r5,r7
   8b914:	d8c00215 	stw	r3,8(sp)
   8b918:	d9c00515 	stw	r7,20(sp)
   8b91c:	008aa6c0 	call	8aa6c <__mulsi3>
   8b920:	900b883a 	mov	r5,r18
   8b924:	e009883a 	mov	r4,fp
   8b928:	102b883a 	mov	r21,r2
   8b92c:	008aa6c0 	call	8aa6c <__mulsi3>
   8b930:	900b883a 	mov	r5,r18
   8b934:	b809883a 	mov	r4,r23
   8b938:	1039883a 	mov	fp,r2
   8b93c:	008aa6c0 	call	8aa6c <__mulsi3>
   8b940:	d9c00517 	ldw	r7,20(sp)
   8b944:	b80b883a 	mov	r5,r23
   8b948:	1025883a 	mov	r18,r2
   8b94c:	3809883a 	mov	r4,r7
   8b950:	008aa6c0 	call	8aa6c <__mulsi3>
   8b954:	a808d43a 	srli	r4,r21,16
   8b958:	1705883a 	add	r2,r2,fp
   8b95c:	d8c00217 	ldw	r3,8(sp)
   8b960:	2085883a 	add	r2,r4,r2
   8b964:	1700022e 	bgeu	r2,fp,8b970 <__divdf3+0x630>
   8b968:	01000074 	movhi	r4,1
   8b96c:	9125883a 	add	r18,r18,r4
   8b970:	1008d43a 	srli	r4,r2,16
   8b974:	1004943a 	slli	r2,r2,16
   8b978:	ad7fffcc 	andi	r21,r21,65535
   8b97c:	2489883a 	add	r4,r4,r18
   8b980:	1545883a 	add	r2,r2,r21
   8b984:	81003836 	bltu	r16,r4,8ba68 <__divdf3+0x728>
   8b988:	81003626 	beq	r16,r4,8ba64 <__divdf3+0x724>
   8b98c:	a5000054 	ori	r20,r20,1
   8b990:	1880ffc4 	addi	r2,r3,1023
   8b994:	00bf2e0e 	bge	zero,r2,8b650 <__divdf3+0x310>
   8b998:	a10001cc 	andi	r4,r20,7
   8b99c:	20000726 	beq	r4,zero,8b9bc <__divdf3+0x67c>
   8b9a0:	a10003cc 	andi	r4,r20,15
   8b9a4:	01400104 	movi	r5,4
   8b9a8:	21400426 	beq	r4,r5,8b9bc <__divdf3+0x67c>
   8b9ac:	a149883a 	add	r4,r20,r5
   8b9b0:	2529803a 	cmpltu	r20,r4,r20
   8b9b4:	8d23883a 	add	r17,r17,r20
   8b9b8:	2029883a 	mov	r20,r4
   8b9bc:	8900402c 	andhi	r4,r17,256
   8b9c0:	20000426 	beq	r4,zero,8b9d4 <__divdf3+0x694>
   8b9c4:	18810004 	addi	r2,r3,1024
   8b9c8:	00ffc034 	movhi	r3,65280
   8b9cc:	18ffffc4 	addi	r3,r3,-1
   8b9d0:	88e2703a 	and	r17,r17,r3
   8b9d4:	00c1ff84 	movi	r3,2046
   8b9d8:	18beb416 	blt	r3,r2,8b4ac <__divdf3+0x16c>
   8b9dc:	a028d0fa 	srli	r20,r20,3
   8b9e0:	882a977a 	slli	r21,r17,29
   8b9e4:	8820927a 	slli	r16,r17,9
   8b9e8:	1081ffcc 	andi	r2,r2,2047
   8b9ec:	ad2ab03a 	or	r21,r21,r20
   8b9f0:	8020d33a 	srli	r16,r16,12
   8b9f4:	9900004c 	andi	r4,r19,1
   8b9f8:	003eb006 	br	8b4bc <__divdf3+0x17c>
   8b9fc:	8080022c 	andhi	r2,r16,8
   8ba00:	10001226 	beq	r2,zero,8ba4c <__divdf3+0x70c>
   8ba04:	8880022c 	andhi	r2,r17,8
   8ba08:	1000101e 	bne	r2,zero,8ba4c <__divdf3+0x70c>
   8ba0c:	00800434 	movhi	r2,16
   8ba10:	8c000234 	orhi	r16,r17,8
   8ba14:	10bfffc4 	addi	r2,r2,-1
   8ba18:	b809883a 	mov	r4,r23
   8ba1c:	80a0703a 	and	r16,r16,r2
   8ba20:	a02b883a 	mov	r21,r20
   8ba24:	003f0806 	br	8b648 <__divdf3+0x308>
   8ba28:	008000c4 	movi	r2,3
   8ba2c:	3880b126 	beq	r7,r2,8bcf4 <__divdf3+0x9b4>
   8ba30:	00800044 	movi	r2,1
   8ba34:	38805b1e 	bne	r7,r2,8bba4 <__divdf3+0x864>
   8ba38:	e009883a 	mov	r4,fp
   8ba3c:	0005883a 	mov	r2,zero
   8ba40:	0021883a 	mov	r16,zero
   8ba44:	002b883a 	mov	r21,zero
   8ba48:	003e9c06 	br	8b4bc <__divdf3+0x17c>
   8ba4c:	00800434 	movhi	r2,16
   8ba50:	84000234 	orhi	r16,r16,8
   8ba54:	10bfffc4 	addi	r2,r2,-1
   8ba58:	b009883a 	mov	r4,r22
   8ba5c:	80a0703a 	and	r16,r16,r2
   8ba60:	003ef906 	br	8b648 <__divdf3+0x308>
   8ba64:	103fca26 	beq	r2,zero,8b990 <__divdf3+0x650>
   8ba68:	b421883a 	add	r16,r22,r16
   8ba6c:	a17fffc4 	addi	r5,r20,-1
   8ba70:	8580422e 	bgeu	r16,r22,8bb7c <__divdf3+0x83c>
   8ba74:	2829883a 	mov	r20,r5
   8ba78:	813fc41e 	bne	r16,r4,8b98c <__divdf3+0x64c>
   8ba7c:	d9800017 	ldw	r6,0(sp)
   8ba80:	30bfc21e 	bne	r6,r2,8b98c <__divdf3+0x64c>
   8ba84:	003fc206 	br	8b990 <__divdf3+0x650>
   8ba88:	143ff604 	addi	r16,r2,-40
   8ba8c:	8c20983a 	sll	r16,r17,r16
   8ba90:	002b883a 	mov	r21,zero
   8ba94:	003eb406 	br	8b568 <__divdf3+0x228>
   8ba98:	d9800215 	stw	r6,8(sp)
   8ba9c:	d9c00515 	stw	r7,20(sp)
   8baa0:	da000415 	stw	r8,16(sp)
   8baa4:	008d2d40 	call	8d2d4 <__clzsi2>
   8baa8:	10800804 	addi	r2,r2,32
   8baac:	da000417 	ldw	r8,16(sp)
   8bab0:	d9c00517 	ldw	r7,20(sp)
   8bab4:	d9800217 	ldw	r6,8(sp)
   8bab8:	003ea106 	br	8b540 <__divdf3+0x200>
   8babc:	147ff604 	addi	r17,r2,-40
   8bac0:	3462983a 	sll	r17,r6,r17
   8bac4:	0029883a 	mov	r20,zero
   8bac8:	003ec906 	br	8b5f0 <__divdf3+0x2b0>
   8bacc:	3009883a 	mov	r4,r6
   8bad0:	d9400115 	stw	r5,4(sp)
   8bad4:	d9800215 	stw	r6,8(sp)
   8bad8:	da000415 	stw	r8,16(sp)
   8badc:	da400315 	stw	r9,12(sp)
   8bae0:	008d2d40 	call	8d2d4 <__clzsi2>
   8bae4:	10800804 	addi	r2,r2,32
   8bae8:	da400317 	ldw	r9,12(sp)
   8baec:	da000417 	ldw	r8,16(sp)
   8baf0:	d9800217 	ldw	r6,8(sp)
   8baf4:	d9400117 	ldw	r5,4(sp)
   8baf8:	003eb306 	br	8b5c8 <__divdf3+0x288>
   8bafc:	d9800017 	ldw	r6,0(sp)
   8bb00:	a9ab883a 	add	r21,r21,r6
   8bb04:	a98b803a 	cmpltu	r5,r21,r6
   8bb08:	2d8b883a 	add	r5,r5,r22
   8bb0c:	2a11883a 	add	r8,r5,r8
   8bb10:	897fffc4 	addi	r5,r17,-1
   8bb14:	b2000c2e 	bgeu	r22,r8,8bb48 <__divdf3+0x808>
   8bb18:	41003f36 	bltu	r8,r4,8bc18 <__divdf3+0x8d8>
   8bb1c:	22006c26 	beq	r4,r8,8bcd0 <__divdf3+0x990>
   8bb20:	4109c83a 	sub	r4,r8,r4
   8bb24:	2823883a 	mov	r17,r5
   8bb28:	003f3b06 	br	8b818 <__divdf3+0x4d8>
   8bb2c:	ad3ed336 	bltu	r21,r20,8b67c <__divdf3+0x33c>
   8bb30:	a804d07a 	srli	r2,r21,1
   8bb34:	802e97fa 	slli	r23,r16,31
   8bb38:	a82a97fa 	slli	r21,r21,31
   8bb3c:	8020d07a 	srli	r16,r16,1
   8bb40:	b8aeb03a 	or	r23,r23,r2
   8bb44:	003ed006 	br	8b688 <__divdf3+0x348>
   8bb48:	b23ff51e 	bne	r22,r8,8bb20 <__divdf3+0x7e0>
   8bb4c:	d9800017 	ldw	r6,0(sp)
   8bb50:	a9bff12e 	bgeu	r21,r6,8bb18 <__divdf3+0x7d8>
   8bb54:	b109c83a 	sub	r4,r22,r4
   8bb58:	2823883a 	mov	r17,r5
   8bb5c:	003f2e06 	br	8b818 <__divdf3+0x4d8>
   8bb60:	2021883a 	mov	r16,r4
   8bb64:	003eff06 	br	8b764 <__divdf3+0x424>
   8bb68:	2023883a 	mov	r17,r4
   8bb6c:	003ee406 	br	8b700 <__divdf3+0x3c0>
   8bb70:	a8bfe236 	bltu	r21,r2,8bafc <__divdf3+0x7bc>
   8bb74:	0009883a 	mov	r4,zero
   8bb78:	003f2706 	br	8b818 <__divdf3+0x4d8>
   8bb7c:	81002d36 	bltu	r16,r4,8bc34 <__divdf3+0x8f4>
   8bb80:	24005626 	beq	r4,r16,8bcdc <__divdf3+0x99c>
   8bb84:	2829883a 	mov	r20,r5
   8bb88:	003f8006 	br	8b98c <__divdf3+0x64c>
   8bb8c:	053fffc4 	movi	r20,-1
   8bb90:	003f7f06 	br	8b990 <__divdf3+0x650>
   8bb94:	200f883a 	mov	r7,r4
   8bb98:	003f3c06 	br	8b88c <__divdf3+0x54c>
   8bb9c:	1011883a 	mov	r8,r2
   8bba0:	003f5506 	br	8b8f8 <__divdf3+0x5b8>
   8bba4:	e027883a 	mov	r19,fp
   8bba8:	003f7906 	br	8b990 <__divdf3+0x650>
   8bbac:	010007c4 	movi	r4,31
   8bbb0:	20c02816 	blt	r4,r3,8bc54 <__divdf3+0x914>
   8bbb4:	00800804 	movi	r2,32
   8bbb8:	10c5c83a 	sub	r2,r2,r3
   8bbbc:	888a983a 	sll	r5,r17,r2
   8bbc0:	a0c8d83a 	srl	r4,r20,r3
   8bbc4:	a084983a 	sll	r2,r20,r2
   8bbc8:	88e2d83a 	srl	r17,r17,r3
   8bbcc:	2906b03a 	or	r3,r5,r4
   8bbd0:	1004c03a 	cmpne	r2,r2,zero
   8bbd4:	1886b03a 	or	r3,r3,r2
   8bbd8:	188001cc 	andi	r2,r3,7
   8bbdc:	10000726 	beq	r2,zero,8bbfc <__divdf3+0x8bc>
   8bbe0:	188003cc 	andi	r2,r3,15
   8bbe4:	01000104 	movi	r4,4
   8bbe8:	11000426 	beq	r2,r4,8bbfc <__divdf3+0x8bc>
   8bbec:	1805883a 	mov	r2,r3
   8bbf0:	10c00104 	addi	r3,r2,4
   8bbf4:	1885803a 	cmpltu	r2,r3,r2
   8bbf8:	88a3883a 	add	r17,r17,r2
   8bbfc:	8880202c 	andhi	r2,r17,128
   8bc00:	10002926 	beq	r2,zero,8bca8 <__divdf3+0x968>
   8bc04:	9900004c 	andi	r4,r19,1
   8bc08:	00800044 	movi	r2,1
   8bc0c:	0021883a 	mov	r16,zero
   8bc10:	002b883a 	mov	r21,zero
   8bc14:	003e2906 	br	8b4bc <__divdf3+0x17c>
   8bc18:	d9800017 	ldw	r6,0(sp)
   8bc1c:	8c7fff84 	addi	r17,r17,-2
   8bc20:	a9ab883a 	add	r21,r21,r6
   8bc24:	a98b803a 	cmpltu	r5,r21,r6
   8bc28:	2d8b883a 	add	r5,r5,r22
   8bc2c:	2a11883a 	add	r8,r5,r8
   8bc30:	003ef806 	br	8b814 <__divdf3+0x4d4>
   8bc34:	d9800017 	ldw	r6,0(sp)
   8bc38:	318f883a 	add	r7,r6,r6
   8bc3c:	398b803a 	cmpltu	r5,r7,r6
   8bc40:	2d8d883a 	add	r6,r5,r22
   8bc44:	81a1883a 	add	r16,r16,r6
   8bc48:	a17fff84 	addi	r5,r20,-2
   8bc4c:	d9c00015 	stw	r7,0(sp)
   8bc50:	003f8806 	br	8ba74 <__divdf3+0x734>
   8bc54:	013ff844 	movi	r4,-31
   8bc58:	2085c83a 	sub	r2,r4,r2
   8bc5c:	8888d83a 	srl	r4,r17,r2
   8bc60:	00800804 	movi	r2,32
   8bc64:	18802126 	beq	r3,r2,8bcec <__divdf3+0x9ac>
   8bc68:	04001004 	movi	r16,64
   8bc6c:	80c7c83a 	sub	r3,r16,r3
   8bc70:	88e0983a 	sll	r16,r17,r3
   8bc74:	8504b03a 	or	r2,r16,r20
   8bc78:	1004c03a 	cmpne	r2,r2,zero
   8bc7c:	2084b03a 	or	r2,r4,r2
   8bc80:	144001cc 	andi	r17,r2,7
   8bc84:	88000d1e 	bne	r17,zero,8bcbc <__divdf3+0x97c>
   8bc88:	0021883a 	mov	r16,zero
   8bc8c:	102ad0fa 	srli	r21,r2,3
   8bc90:	9900004c 	andi	r4,r19,1
   8bc94:	0005883a 	mov	r2,zero
   8bc98:	ac6ab03a 	or	r21,r21,r17
   8bc9c:	003e0706 	br	8b4bc <__divdf3+0x17c>
   8bca0:	1007883a 	mov	r3,r2
   8bca4:	0023883a 	mov	r17,zero
   8bca8:	8820927a 	slli	r16,r17,9
   8bcac:	1805883a 	mov	r2,r3
   8bcb0:	8822977a 	slli	r17,r17,29
   8bcb4:	8020d33a 	srli	r16,r16,12
   8bcb8:	003ff406 	br	8bc8c <__divdf3+0x94c>
   8bcbc:	10c003cc 	andi	r3,r2,15
   8bcc0:	01000104 	movi	r4,4
   8bcc4:	193ff626 	beq	r3,r4,8bca0 <__divdf3+0x960>
   8bcc8:	0023883a 	mov	r17,zero
   8bccc:	003fc806 	br	8bbf0 <__divdf3+0x8b0>
   8bcd0:	a8bfd136 	bltu	r21,r2,8bc18 <__divdf3+0x8d8>
   8bcd4:	2823883a 	mov	r17,r5
   8bcd8:	003fa606 	br	8bb74 <__divdf3+0x834>
   8bcdc:	d9800017 	ldw	r6,0(sp)
   8bce0:	30bfd436 	bltu	r6,r2,8bc34 <__divdf3+0x8f4>
   8bce4:	2829883a 	mov	r20,r5
   8bce8:	003f6406 	br	8ba7c <__divdf3+0x73c>
   8bcec:	0021883a 	mov	r16,zero
   8bcf0:	003fe006 	br	8bc74 <__divdf3+0x934>
   8bcf4:	00800434 	movhi	r2,16
   8bcf8:	8c000234 	orhi	r16,r17,8
   8bcfc:	10bfffc4 	addi	r2,r2,-1
   8bd00:	e009883a 	mov	r4,fp
   8bd04:	80a0703a 	and	r16,r16,r2
   8bd08:	a02b883a 	mov	r21,r20
   8bd0c:	003e4e06 	br	8b648 <__divdf3+0x308>

0008bd10 <__eqdf2>:
   8bd10:	2804d53a 	srli	r2,r5,20
   8bd14:	3806d53a 	srli	r3,r7,20
   8bd18:	02000434 	movhi	r8,16
   8bd1c:	423fffc4 	addi	r8,r8,-1
   8bd20:	1081ffcc 	andi	r2,r2,2047
   8bd24:	0281ffc4 	movi	r10,2047
   8bd28:	2a12703a 	and	r9,r5,r8
   8bd2c:	18c1ffcc 	andi	r3,r3,2047
   8bd30:	3a10703a 	and	r8,r7,r8
   8bd34:	280ad7fa 	srli	r5,r5,31
   8bd38:	380ed7fa 	srli	r7,r7,31
   8bd3c:	12801026 	beq	r2,r10,8bd80 <__eqdf2+0x70>
   8bd40:	0281ffc4 	movi	r10,2047
   8bd44:	1a800a26 	beq	r3,r10,8bd70 <__eqdf2+0x60>
   8bd48:	10c00226 	beq	r2,r3,8bd54 <__eqdf2+0x44>
   8bd4c:	00800044 	movi	r2,1
   8bd50:	f800283a 	ret
   8bd54:	4a3ffd1e 	bne	r9,r8,8bd4c <__eqdf2+0x3c>
   8bd58:	21bffc1e 	bne	r4,r6,8bd4c <__eqdf2+0x3c>
   8bd5c:	29c00c26 	beq	r5,r7,8bd90 <__eqdf2+0x80>
   8bd60:	103ffa1e 	bne	r2,zero,8bd4c <__eqdf2+0x3c>
   8bd64:	2244b03a 	or	r2,r4,r9
   8bd68:	1004c03a 	cmpne	r2,r2,zero
   8bd6c:	f800283a 	ret
   8bd70:	3214b03a 	or	r10,r6,r8
   8bd74:	503ff426 	beq	r10,zero,8bd48 <__eqdf2+0x38>
   8bd78:	00800044 	movi	r2,1
   8bd7c:	f800283a 	ret
   8bd80:	2254b03a 	or	r10,r4,r9
   8bd84:	503fee26 	beq	r10,zero,8bd40 <__eqdf2+0x30>
   8bd88:	00800044 	movi	r2,1
   8bd8c:	f800283a 	ret
   8bd90:	0005883a 	mov	r2,zero
   8bd94:	f800283a 	ret

0008bd98 <__gedf2>:
   8bd98:	2804d53a 	srli	r2,r5,20
   8bd9c:	3806d53a 	srli	r3,r7,20
   8bda0:	02000434 	movhi	r8,16
   8bda4:	423fffc4 	addi	r8,r8,-1
   8bda8:	1081ffcc 	andi	r2,r2,2047
   8bdac:	0241ffc4 	movi	r9,2047
   8bdb0:	2a14703a 	and	r10,r5,r8
   8bdb4:	18c1ffcc 	andi	r3,r3,2047
   8bdb8:	3a10703a 	and	r8,r7,r8
   8bdbc:	280ad7fa 	srli	r5,r5,31
   8bdc0:	380ed7fa 	srli	r7,r7,31
   8bdc4:	12401d26 	beq	r2,r9,8be3c <__gedf2+0xa4>
   8bdc8:	0241ffc4 	movi	r9,2047
   8bdcc:	1a401226 	beq	r3,r9,8be18 <__gedf2+0x80>
   8bdd0:	1000081e 	bne	r2,zero,8bdf4 <__gedf2+0x5c>
   8bdd4:	2296b03a 	or	r11,r4,r10
   8bdd8:	5813003a 	cmpeq	r9,r11,zero
   8bddc:	1800091e 	bne	r3,zero,8be04 <__gedf2+0x6c>
   8bde0:	3218b03a 	or	r12,r6,r8
   8bde4:	6000071e 	bne	r12,zero,8be04 <__gedf2+0x6c>
   8bde8:	0005883a 	mov	r2,zero
   8bdec:	5800101e 	bne	r11,zero,8be30 <__gedf2+0x98>
   8bdf0:	f800283a 	ret
   8bdf4:	18000c1e 	bne	r3,zero,8be28 <__gedf2+0x90>
   8bdf8:	3212b03a 	or	r9,r6,r8
   8bdfc:	48000c26 	beq	r9,zero,8be30 <__gedf2+0x98>
   8be00:	0013883a 	mov	r9,zero
   8be04:	39c03fcc 	andi	r7,r7,255
   8be08:	48000826 	beq	r9,zero,8be2c <__gedf2+0x94>
   8be0c:	38000926 	beq	r7,zero,8be34 <__gedf2+0x9c>
   8be10:	00800044 	movi	r2,1
   8be14:	f800283a 	ret
   8be18:	3212b03a 	or	r9,r6,r8
   8be1c:	483fec26 	beq	r9,zero,8bdd0 <__gedf2+0x38>
   8be20:	00bfff84 	movi	r2,-2
   8be24:	f800283a 	ret
   8be28:	39c03fcc 	andi	r7,r7,255
   8be2c:	29c00626 	beq	r5,r7,8be48 <__gedf2+0xb0>
   8be30:	283ff726 	beq	r5,zero,8be10 <__gedf2+0x78>
   8be34:	00bfffc4 	movi	r2,-1
   8be38:	f800283a 	ret
   8be3c:	2292b03a 	or	r9,r4,r10
   8be40:	483fe126 	beq	r9,zero,8bdc8 <__gedf2+0x30>
   8be44:	003ff606 	br	8be20 <__gedf2+0x88>
   8be48:	18bff916 	blt	r3,r2,8be30 <__gedf2+0x98>
   8be4c:	10c00316 	blt	r2,r3,8be5c <__gedf2+0xc4>
   8be50:	42bff736 	bltu	r8,r10,8be30 <__gedf2+0x98>
   8be54:	52000326 	beq	r10,r8,8be64 <__gedf2+0xcc>
   8be58:	5200042e 	bgeu	r10,r8,8be6c <__gedf2+0xd4>
   8be5c:	283fec1e 	bne	r5,zero,8be10 <__gedf2+0x78>
   8be60:	003ff406 	br	8be34 <__gedf2+0x9c>
   8be64:	313ff236 	bltu	r6,r4,8be30 <__gedf2+0x98>
   8be68:	21bffc36 	bltu	r4,r6,8be5c <__gedf2+0xc4>
   8be6c:	0005883a 	mov	r2,zero
   8be70:	f800283a 	ret

0008be74 <__ledf2>:
   8be74:	2804d53a 	srli	r2,r5,20
   8be78:	3810d53a 	srli	r8,r7,20
   8be7c:	00c00434 	movhi	r3,16
   8be80:	18ffffc4 	addi	r3,r3,-1
   8be84:	1081ffcc 	andi	r2,r2,2047
   8be88:	0241ffc4 	movi	r9,2047
   8be8c:	28d4703a 	and	r10,r5,r3
   8be90:	4201ffcc 	andi	r8,r8,2047
   8be94:	38c6703a 	and	r3,r7,r3
   8be98:	280ad7fa 	srli	r5,r5,31
   8be9c:	380ed7fa 	srli	r7,r7,31
   8bea0:	12401f26 	beq	r2,r9,8bf20 <__ledf2+0xac>
   8bea4:	0241ffc4 	movi	r9,2047
   8bea8:	42401426 	beq	r8,r9,8befc <__ledf2+0x88>
   8beac:	1000091e 	bne	r2,zero,8bed4 <__ledf2+0x60>
   8beb0:	2296b03a 	or	r11,r4,r10
   8beb4:	5813003a 	cmpeq	r9,r11,zero
   8beb8:	29403fcc 	andi	r5,r5,255
   8bebc:	40000a1e 	bne	r8,zero,8bee8 <__ledf2+0x74>
   8bec0:	30d8b03a 	or	r12,r6,r3
   8bec4:	6000081e 	bne	r12,zero,8bee8 <__ledf2+0x74>
   8bec8:	0005883a 	mov	r2,zero
   8becc:	5800111e 	bne	r11,zero,8bf14 <__ledf2+0xa0>
   8bed0:	f800283a 	ret
   8bed4:	29403fcc 	andi	r5,r5,255
   8bed8:	40000c1e 	bne	r8,zero,8bf0c <__ledf2+0x98>
   8bedc:	30d2b03a 	or	r9,r6,r3
   8bee0:	48000c26 	beq	r9,zero,8bf14 <__ledf2+0xa0>
   8bee4:	0013883a 	mov	r9,zero
   8bee8:	39c03fcc 	andi	r7,r7,255
   8beec:	48000826 	beq	r9,zero,8bf10 <__ledf2+0x9c>
   8bef0:	38001126 	beq	r7,zero,8bf38 <__ledf2+0xc4>
   8bef4:	00800044 	movi	r2,1
   8bef8:	f800283a 	ret
   8befc:	30d2b03a 	or	r9,r6,r3
   8bf00:	483fea26 	beq	r9,zero,8beac <__ledf2+0x38>
   8bf04:	00800084 	movi	r2,2
   8bf08:	f800283a 	ret
   8bf0c:	39c03fcc 	andi	r7,r7,255
   8bf10:	39400726 	beq	r7,r5,8bf30 <__ledf2+0xbc>
   8bf14:	2800081e 	bne	r5,zero,8bf38 <__ledf2+0xc4>
   8bf18:	00800044 	movi	r2,1
   8bf1c:	f800283a 	ret
   8bf20:	2292b03a 	or	r9,r4,r10
   8bf24:	483fdf26 	beq	r9,zero,8bea4 <__ledf2+0x30>
   8bf28:	00800084 	movi	r2,2
   8bf2c:	f800283a 	ret
   8bf30:	4080030e 	bge	r8,r2,8bf40 <__ledf2+0xcc>
   8bf34:	383fef26 	beq	r7,zero,8bef4 <__ledf2+0x80>
   8bf38:	00bfffc4 	movi	r2,-1
   8bf3c:	f800283a 	ret
   8bf40:	123feb16 	blt	r2,r8,8bef0 <__ledf2+0x7c>
   8bf44:	1abff336 	bltu	r3,r10,8bf14 <__ledf2+0xa0>
   8bf48:	50c00326 	beq	r10,r3,8bf58 <__ledf2+0xe4>
   8bf4c:	50c0042e 	bgeu	r10,r3,8bf60 <__ledf2+0xec>
   8bf50:	283fe81e 	bne	r5,zero,8bef4 <__ledf2+0x80>
   8bf54:	003ff806 	br	8bf38 <__ledf2+0xc4>
   8bf58:	313fee36 	bltu	r6,r4,8bf14 <__ledf2+0xa0>
   8bf5c:	21bffc36 	bltu	r4,r6,8bf50 <__ledf2+0xdc>
   8bf60:	0005883a 	mov	r2,zero
   8bf64:	f800283a 	ret

0008bf68 <__muldf3>:
   8bf68:	deffee04 	addi	sp,sp,-72
   8bf6c:	dd000c15 	stw	r20,48(sp)
   8bf70:	2828d53a 	srli	r20,r5,20
   8bf74:	ddc00f15 	stw	r23,60(sp)
   8bf78:	282ed7fa 	srli	r23,r5,31
   8bf7c:	dc000815 	stw	r16,32(sp)
   8bf80:	04000434 	movhi	r16,16
   8bf84:	dcc00b15 	stw	r19,44(sp)
   8bf88:	843fffc4 	addi	r16,r16,-1
   8bf8c:	dfc01115 	stw	ra,68(sp)
   8bf90:	df001015 	stw	fp,64(sp)
   8bf94:	dd800e15 	stw	r22,56(sp)
   8bf98:	dd400d15 	stw	r21,52(sp)
   8bf9c:	dc800a15 	stw	r18,40(sp)
   8bfa0:	dc400915 	stw	r17,36(sp)
   8bfa4:	a501ffcc 	andi	r20,r20,2047
   8bfa8:	2c20703a 	and	r16,r5,r16
   8bfac:	b827883a 	mov	r19,r23
   8bfb0:	ba403fcc 	andi	r9,r23,255
   8bfb4:	a0006026 	beq	r20,zero,8c138 <__muldf3+0x1d0>
   8bfb8:	0081ffc4 	movi	r2,2047
   8bfbc:	202d883a 	mov	r22,r4
   8bfc0:	a0803626 	beq	r20,r2,8c09c <__muldf3+0x134>
   8bfc4:	84000434 	orhi	r16,r16,16
   8bfc8:	200ad77a 	srli	r5,r4,29
   8bfcc:	800490fa 	slli	r2,r16,3
   8bfd0:	202c90fa 	slli	r22,r4,3
   8bfd4:	a53f0044 	addi	r20,r20,-1023
   8bfd8:	28a0b03a 	or	r16,r5,r2
   8bfdc:	002b883a 	mov	r21,zero
   8bfe0:	000b883a 	mov	r5,zero
   8bfe4:	3804d53a 	srli	r2,r7,20
   8bfe8:	3838d7fa 	srli	fp,r7,31
   8bfec:	04400434 	movhi	r17,16
   8bff0:	8c7fffc4 	addi	r17,r17,-1
   8bff4:	1081ffcc 	andi	r2,r2,2047
   8bff8:	3025883a 	mov	r18,r6
   8bffc:	3c62703a 	and	r17,r7,r17
   8c000:	e2803fcc 	andi	r10,fp,255
   8c004:	10006d26 	beq	r2,zero,8c1bc <__muldf3+0x254>
   8c008:	00c1ffc4 	movi	r3,2047
   8c00c:	10c06526 	beq	r2,r3,8c1a4 <__muldf3+0x23c>
   8c010:	8c400434 	orhi	r17,r17,16
   8c014:	300ed77a 	srli	r7,r6,29
   8c018:	880690fa 	slli	r3,r17,3
   8c01c:	302490fa 	slli	r18,r6,3
   8c020:	10bf0044 	addi	r2,r2,-1023
   8c024:	38e2b03a 	or	r17,r7,r3
   8c028:	000f883a 	mov	r7,zero
   8c02c:	a087883a 	add	r3,r20,r2
   8c030:	010003c4 	movi	r4,15
   8c034:	3d44b03a 	or	r2,r7,r21
   8c038:	e5ccf03a 	xor	r6,fp,r23
   8c03c:	1a000044 	addi	r8,r3,1
   8c040:	20809b36 	bltu	r4,r2,8c2b0 <__muldf3+0x348>
   8c044:	100490ba 	slli	r2,r2,2
   8c048:	01000274 	movhi	r4,9
   8c04c:	21301704 	addi	r4,r4,-16292
   8c050:	1105883a 	add	r2,r2,r4
   8c054:	10800017 	ldw	r2,0(r2)
   8c058:	1000683a 	jmp	r2
   8c05c:	0008c2b0 	cmpltui	zero,zero,8970
   8c060:	0008c0bc 	xorhi	zero,zero,8962
   8c064:	0008c0bc 	xorhi	zero,zero,8962
   8c068:	0008c0b8 	rdprs	zero,zero,8962
   8c06c:	0008c28c 	andi	zero,zero,8970
   8c070:	0008c28c 	andi	zero,zero,8970
   8c074:	0008c274 	movhi	zero,8969
   8c078:	0008c0b8 	rdprs	zero,zero,8962
   8c07c:	0008c28c 	andi	zero,zero,8970
   8c080:	0008c274 	movhi	zero,8969
   8c084:	0008c28c 	andi	zero,zero,8970
   8c088:	0008c0b8 	rdprs	zero,zero,8962
   8c08c:	0008c29c 	xori	zero,zero,8970
   8c090:	0008c29c 	xori	zero,zero,8970
   8c094:	0008c29c 	xori	zero,zero,8970
   8c098:	0008c5fc 	xorhi	zero,zero,8983
   8c09c:	2404b03a 	or	r2,r4,r16
   8c0a0:	1000711e 	bne	r2,zero,8c268 <__muldf3+0x300>
   8c0a4:	05400204 	movi	r21,8
   8c0a8:	0021883a 	mov	r16,zero
   8c0ac:	002d883a 	mov	r22,zero
   8c0b0:	01400084 	movi	r5,2
   8c0b4:	003fcb06 	br	8bfe4 <__muldf3+0x7c>
   8c0b8:	500d883a 	mov	r6,r10
   8c0bc:	00800084 	movi	r2,2
   8c0c0:	38805926 	beq	r7,r2,8c228 <__muldf3+0x2c0>
   8c0c4:	008000c4 	movi	r2,3
   8c0c8:	3881bb26 	beq	r7,r2,8c7b8 <__muldf3+0x850>
   8c0cc:	00800044 	movi	r2,1
   8c0d0:	3881961e 	bne	r7,r2,8c72c <__muldf3+0x7c4>
   8c0d4:	3027883a 	mov	r19,r6
   8c0d8:	0005883a 	mov	r2,zero
   8c0dc:	0021883a 	mov	r16,zero
   8c0e0:	002d883a 	mov	r22,zero
   8c0e4:	1004953a 	slli	r2,r2,20
   8c0e8:	98c03fcc 	andi	r3,r19,255
   8c0ec:	04400434 	movhi	r17,16
   8c0f0:	8c7fffc4 	addi	r17,r17,-1
   8c0f4:	180697fa 	slli	r3,r3,31
   8c0f8:	8460703a 	and	r16,r16,r17
   8c0fc:	80a0b03a 	or	r16,r16,r2
   8c100:	80c6b03a 	or	r3,r16,r3
   8c104:	b005883a 	mov	r2,r22
   8c108:	dfc01117 	ldw	ra,68(sp)
   8c10c:	df001017 	ldw	fp,64(sp)
   8c110:	ddc00f17 	ldw	r23,60(sp)
   8c114:	dd800e17 	ldw	r22,56(sp)
   8c118:	dd400d17 	ldw	r21,52(sp)
   8c11c:	dd000c17 	ldw	r20,48(sp)
   8c120:	dcc00b17 	ldw	r19,44(sp)
   8c124:	dc800a17 	ldw	r18,40(sp)
   8c128:	dc400917 	ldw	r17,36(sp)
   8c12c:	dc000817 	ldw	r16,32(sp)
   8c130:	dec01204 	addi	sp,sp,72
   8c134:	f800283a 	ret
   8c138:	2404b03a 	or	r2,r4,r16
   8c13c:	202b883a 	mov	r21,r4
   8c140:	10004426 	beq	r2,zero,8c254 <__muldf3+0x2ec>
   8c144:	80015126 	beq	r16,zero,8c68c <__muldf3+0x724>
   8c148:	8009883a 	mov	r4,r16
   8c14c:	d9800715 	stw	r6,28(sp)
   8c150:	d9c00215 	stw	r7,8(sp)
   8c154:	da400415 	stw	r9,16(sp)
   8c158:	008d2d40 	call	8d2d4 <__clzsi2>
   8c15c:	d9800717 	ldw	r6,28(sp)
   8c160:	d9c00217 	ldw	r7,8(sp)
   8c164:	da400417 	ldw	r9,16(sp)
   8c168:	113ffd44 	addi	r4,r2,-11
   8c16c:	00c00704 	movi	r3,28
   8c170:	19014216 	blt	r3,r4,8c67c <__muldf3+0x714>
   8c174:	00c00744 	movi	r3,29
   8c178:	15bffe04 	addi	r22,r2,-8
   8c17c:	1907c83a 	sub	r3,r3,r4
   8c180:	85a0983a 	sll	r16,r16,r22
   8c184:	a8c6d83a 	srl	r3,r21,r3
   8c188:	adac983a 	sll	r22,r21,r22
   8c18c:	1c20b03a 	or	r16,r3,r16
   8c190:	1080fcc4 	addi	r2,r2,1011
   8c194:	00a9c83a 	sub	r20,zero,r2
   8c198:	002b883a 	mov	r21,zero
   8c19c:	000b883a 	mov	r5,zero
   8c1a0:	003f9006 	br	8bfe4 <__muldf3+0x7c>
   8c1a4:	3446b03a 	or	r3,r6,r17
   8c1a8:	1800281e 	bne	r3,zero,8c24c <__muldf3+0x2e4>
   8c1ac:	0023883a 	mov	r17,zero
   8c1b0:	0025883a 	mov	r18,zero
   8c1b4:	01c00084 	movi	r7,2
   8c1b8:	003f9c06 	br	8c02c <__muldf3+0xc4>
   8c1bc:	3446b03a 	or	r3,r6,r17
   8c1c0:	18001e26 	beq	r3,zero,8c23c <__muldf3+0x2d4>
   8c1c4:	88012126 	beq	r17,zero,8c64c <__muldf3+0x6e4>
   8c1c8:	8809883a 	mov	r4,r17
   8c1cc:	d9400215 	stw	r5,8(sp)
   8c1d0:	d9800715 	stw	r6,28(sp)
   8c1d4:	da400415 	stw	r9,16(sp)
   8c1d8:	da800315 	stw	r10,12(sp)
   8c1dc:	008d2d40 	call	8d2d4 <__clzsi2>
   8c1e0:	d9400217 	ldw	r5,8(sp)
   8c1e4:	d9800717 	ldw	r6,28(sp)
   8c1e8:	da400417 	ldw	r9,16(sp)
   8c1ec:	da800317 	ldw	r10,12(sp)
   8c1f0:	113ffd44 	addi	r4,r2,-11
   8c1f4:	00c00704 	movi	r3,28
   8c1f8:	19011016 	blt	r3,r4,8c63c <__muldf3+0x6d4>
   8c1fc:	00c00744 	movi	r3,29
   8c200:	14bffe04 	addi	r18,r2,-8
   8c204:	1907c83a 	sub	r3,r3,r4
   8c208:	8ca2983a 	sll	r17,r17,r18
   8c20c:	30c6d83a 	srl	r3,r6,r3
   8c210:	34a4983a 	sll	r18,r6,r18
   8c214:	1c62b03a 	or	r17,r3,r17
   8c218:	1080fcc4 	addi	r2,r2,1011
   8c21c:	0085c83a 	sub	r2,zero,r2
   8c220:	000f883a 	mov	r7,zero
   8c224:	003f8106 	br	8c02c <__muldf3+0xc4>
   8c228:	3027883a 	mov	r19,r6
   8c22c:	0081ffc4 	movi	r2,2047
   8c230:	0021883a 	mov	r16,zero
   8c234:	002d883a 	mov	r22,zero
   8c238:	003faa06 	br	8c0e4 <__muldf3+0x17c>
   8c23c:	0023883a 	mov	r17,zero
   8c240:	0025883a 	mov	r18,zero
   8c244:	01c00044 	movi	r7,1
   8c248:	003f7806 	br	8c02c <__muldf3+0xc4>
   8c24c:	01c000c4 	movi	r7,3
   8c250:	003f7606 	br	8c02c <__muldf3+0xc4>
   8c254:	05400104 	movi	r21,4
   8c258:	0021883a 	mov	r16,zero
   8c25c:	002d883a 	mov	r22,zero
   8c260:	01400044 	movi	r5,1
   8c264:	003f5f06 	br	8bfe4 <__muldf3+0x7c>
   8c268:	05400304 	movi	r21,12
   8c26c:	014000c4 	movi	r5,3
   8c270:	003f5c06 	br	8bfe4 <__muldf3+0x7c>
   8c274:	04000434 	movhi	r16,16
   8c278:	0027883a 	mov	r19,zero
   8c27c:	843fffc4 	addi	r16,r16,-1
   8c280:	05bfffc4 	movi	r22,-1
   8c284:	0081ffc4 	movi	r2,2047
   8c288:	003f9606 	br	8c0e4 <__muldf3+0x17c>
   8c28c:	8023883a 	mov	r17,r16
   8c290:	b025883a 	mov	r18,r22
   8c294:	280f883a 	mov	r7,r5
   8c298:	003f8806 	br	8c0bc <__muldf3+0x154>
   8c29c:	8023883a 	mov	r17,r16
   8c2a0:	b025883a 	mov	r18,r22
   8c2a4:	480d883a 	mov	r6,r9
   8c2a8:	280f883a 	mov	r7,r5
   8c2ac:	003f8306 	br	8c0bc <__muldf3+0x154>
   8c2b0:	b026d43a 	srli	r19,r22,16
   8c2b4:	902ed43a 	srli	r23,r18,16
   8c2b8:	b5bfffcc 	andi	r22,r22,65535
   8c2bc:	94bfffcc 	andi	r18,r18,65535
   8c2c0:	b00b883a 	mov	r5,r22
   8c2c4:	9009883a 	mov	r4,r18
   8c2c8:	d8c00515 	stw	r3,20(sp)
   8c2cc:	d9800715 	stw	r6,28(sp)
   8c2d0:	da000615 	stw	r8,24(sp)
   8c2d4:	008aa6c0 	call	8aa6c <__mulsi3>
   8c2d8:	980b883a 	mov	r5,r19
   8c2dc:	9009883a 	mov	r4,r18
   8c2e0:	1029883a 	mov	r20,r2
   8c2e4:	008aa6c0 	call	8aa6c <__mulsi3>
   8c2e8:	b80b883a 	mov	r5,r23
   8c2ec:	9809883a 	mov	r4,r19
   8c2f0:	102b883a 	mov	r21,r2
   8c2f4:	008aa6c0 	call	8aa6c <__mulsi3>
   8c2f8:	b809883a 	mov	r4,r23
   8c2fc:	b00b883a 	mov	r5,r22
   8c300:	1039883a 	mov	fp,r2
   8c304:	008aa6c0 	call	8aa6c <__mulsi3>
   8c308:	a008d43a 	srli	r4,r20,16
   8c30c:	1545883a 	add	r2,r2,r21
   8c310:	d8c00517 	ldw	r3,20(sp)
   8c314:	2085883a 	add	r2,r4,r2
   8c318:	d9800717 	ldw	r6,28(sp)
   8c31c:	da000617 	ldw	r8,24(sp)
   8c320:	1540022e 	bgeu	r2,r21,8c32c <__muldf3+0x3c4>
   8c324:	01000074 	movhi	r4,1
   8c328:	e139883a 	add	fp,fp,r4
   8c32c:	100e943a 	slli	r7,r2,16
   8c330:	1004d43a 	srli	r2,r2,16
   8c334:	882ad43a 	srli	r21,r17,16
   8c338:	a53fffcc 	andi	r20,r20,65535
   8c33c:	8c7fffcc 	andi	r17,r17,65535
   8c340:	3d29883a 	add	r20,r7,r20
   8c344:	b00b883a 	mov	r5,r22
   8c348:	8809883a 	mov	r4,r17
   8c34c:	d8c00515 	stw	r3,20(sp)
   8c350:	d9800715 	stw	r6,28(sp)
   8c354:	da000615 	stw	r8,24(sp)
   8c358:	dd000115 	stw	r20,4(sp)
   8c35c:	d8800015 	stw	r2,0(sp)
   8c360:	008aa6c0 	call	8aa6c <__mulsi3>
   8c364:	980b883a 	mov	r5,r19
   8c368:	8809883a 	mov	r4,r17
   8c36c:	d8800215 	stw	r2,8(sp)
   8c370:	008aa6c0 	call	8aa6c <__mulsi3>
   8c374:	9809883a 	mov	r4,r19
   8c378:	a80b883a 	mov	r5,r21
   8c37c:	1029883a 	mov	r20,r2
   8c380:	008aa6c0 	call	8aa6c <__mulsi3>
   8c384:	b00b883a 	mov	r5,r22
   8c388:	a809883a 	mov	r4,r21
   8c38c:	d8800415 	stw	r2,16(sp)
   8c390:	008aa6c0 	call	8aa6c <__mulsi3>
   8c394:	d9c00217 	ldw	r7,8(sp)
   8c398:	1505883a 	add	r2,r2,r20
   8c39c:	d8c00517 	ldw	r3,20(sp)
   8c3a0:	3826d43a 	srli	r19,r7,16
   8c3a4:	d9800717 	ldw	r6,28(sp)
   8c3a8:	da000617 	ldw	r8,24(sp)
   8c3ac:	9885883a 	add	r2,r19,r2
   8c3b0:	da400417 	ldw	r9,16(sp)
   8c3b4:	1500022e 	bgeu	r2,r20,8c3c0 <__muldf3+0x458>
   8c3b8:	01000074 	movhi	r4,1
   8c3bc:	4913883a 	add	r9,r9,r4
   8c3c0:	1028d43a 	srli	r20,r2,16
   8c3c4:	1004943a 	slli	r2,r2,16
   8c3c8:	802cd43a 	srli	r22,r16,16
   8c3cc:	843fffcc 	andi	r16,r16,65535
   8c3d0:	3cffffcc 	andi	r19,r7,65535
   8c3d4:	9009883a 	mov	r4,r18
   8c3d8:	800b883a 	mov	r5,r16
   8c3dc:	a269883a 	add	r20,r20,r9
   8c3e0:	d8c00515 	stw	r3,20(sp)
   8c3e4:	d9800715 	stw	r6,28(sp)
   8c3e8:	da000615 	stw	r8,24(sp)
   8c3ec:	14e7883a 	add	r19,r2,r19
   8c3f0:	008aa6c0 	call	8aa6c <__mulsi3>
   8c3f4:	9009883a 	mov	r4,r18
   8c3f8:	b00b883a 	mov	r5,r22
   8c3fc:	d8800315 	stw	r2,12(sp)
   8c400:	008aa6c0 	call	8aa6c <__mulsi3>
   8c404:	b809883a 	mov	r4,r23
   8c408:	b00b883a 	mov	r5,r22
   8c40c:	d8800215 	stw	r2,8(sp)
   8c410:	008aa6c0 	call	8aa6c <__mulsi3>
   8c414:	b80b883a 	mov	r5,r23
   8c418:	8009883a 	mov	r4,r16
   8c41c:	d8800415 	stw	r2,16(sp)
   8c420:	008aa6c0 	call	8aa6c <__mulsi3>
   8c424:	da800317 	ldw	r10,12(sp)
   8c428:	d9c00217 	ldw	r7,8(sp)
   8c42c:	d9000017 	ldw	r4,0(sp)
   8c430:	502ed43a 	srli	r23,r10,16
   8c434:	11c5883a 	add	r2,r2,r7
   8c438:	24e5883a 	add	r18,r4,r19
   8c43c:	b885883a 	add	r2,r23,r2
   8c440:	d8c00517 	ldw	r3,20(sp)
   8c444:	d9800717 	ldw	r6,28(sp)
   8c448:	da000617 	ldw	r8,24(sp)
   8c44c:	da400417 	ldw	r9,16(sp)
   8c450:	11c0022e 	bgeu	r2,r7,8c45c <__muldf3+0x4f4>
   8c454:	01000074 	movhi	r4,1
   8c458:	4913883a 	add	r9,r9,r4
   8c45c:	100ed43a 	srli	r7,r2,16
   8c460:	1004943a 	slli	r2,r2,16
   8c464:	55ffffcc 	andi	r23,r10,65535
   8c468:	3a53883a 	add	r9,r7,r9
   8c46c:	8809883a 	mov	r4,r17
   8c470:	800b883a 	mov	r5,r16
   8c474:	d8c00515 	stw	r3,20(sp)
   8c478:	d9800715 	stw	r6,28(sp)
   8c47c:	da000615 	stw	r8,24(sp)
   8c480:	da400415 	stw	r9,16(sp)
   8c484:	15ef883a 	add	r23,r2,r23
   8c488:	008aa6c0 	call	8aa6c <__mulsi3>
   8c48c:	8809883a 	mov	r4,r17
   8c490:	b00b883a 	mov	r5,r22
   8c494:	d8800215 	stw	r2,8(sp)
   8c498:	008aa6c0 	call	8aa6c <__mulsi3>
   8c49c:	b00b883a 	mov	r5,r22
   8c4a0:	a809883a 	mov	r4,r21
   8c4a4:	d8800315 	stw	r2,12(sp)
   8c4a8:	008aa6c0 	call	8aa6c <__mulsi3>
   8c4ac:	8009883a 	mov	r4,r16
   8c4b0:	a80b883a 	mov	r5,r21
   8c4b4:	1023883a 	mov	r17,r2
   8c4b8:	008aa6c0 	call	8aa6c <__mulsi3>
   8c4bc:	d9c00217 	ldw	r7,8(sp)
   8c4c0:	da800317 	ldw	r10,12(sp)
   8c4c4:	d8c00517 	ldw	r3,20(sp)
   8c4c8:	3808d43a 	srli	r4,r7,16
   8c4cc:	1285883a 	add	r2,r2,r10
   8c4d0:	d9800717 	ldw	r6,28(sp)
   8c4d4:	2085883a 	add	r2,r4,r2
   8c4d8:	da000617 	ldw	r8,24(sp)
   8c4dc:	da400417 	ldw	r9,16(sp)
   8c4e0:	1280022e 	bgeu	r2,r10,8c4ec <__muldf3+0x584>
   8c4e4:	01000074 	movhi	r4,1
   8c4e8:	8923883a 	add	r17,r17,r4
   8c4ec:	1008943a 	slli	r4,r2,16
   8c4f0:	39ffffcc 	andi	r7,r7,65535
   8c4f4:	e4b9883a 	add	fp,fp,r18
   8c4f8:	21cf883a 	add	r7,r4,r7
   8c4fc:	e4e7803a 	cmpltu	r19,fp,r19
   8c500:	3d0f883a 	add	r7,r7,r20
   8c504:	bf39883a 	add	fp,r23,fp
   8c508:	99c9883a 	add	r4,r19,r7
   8c50c:	e5ef803a 	cmpltu	r23,fp,r23
   8c510:	490b883a 	add	r5,r9,r4
   8c514:	1004d43a 	srli	r2,r2,16
   8c518:	b965883a 	add	r18,r23,r5
   8c51c:	24c9803a 	cmpltu	r4,r4,r19
   8c520:	3d29803a 	cmpltu	r20,r7,r20
   8c524:	a128b03a 	or	r20,r20,r4
   8c528:	95ef803a 	cmpltu	r23,r18,r23
   8c52c:	2a53803a 	cmpltu	r9,r5,r9
   8c530:	a0a9883a 	add	r20,r20,r2
   8c534:	4deeb03a 	or	r23,r9,r23
   8c538:	a5ef883a 	add	r23,r20,r23
   8c53c:	bc63883a 	add	r17,r23,r17
   8c540:	e004927a 	slli	r2,fp,9
   8c544:	d9000117 	ldw	r4,4(sp)
   8c548:	882e927a 	slli	r23,r17,9
   8c54c:	9022d5fa 	srli	r17,r18,23
   8c550:	e038d5fa 	srli	fp,fp,23
   8c554:	1104b03a 	or	r2,r2,r4
   8c558:	9024927a 	slli	r18,r18,9
   8c55c:	1004c03a 	cmpne	r2,r2,zero
   8c560:	bc62b03a 	or	r17,r23,r17
   8c564:	1738b03a 	or	fp,r2,fp
   8c568:	8880402c 	andhi	r2,r17,256
   8c56c:	e4a4b03a 	or	r18,fp,r18
   8c570:	10000726 	beq	r2,zero,8c590 <__muldf3+0x628>
   8c574:	9006d07a 	srli	r3,r18,1
   8c578:	880497fa 	slli	r2,r17,31
   8c57c:	9480004c 	andi	r18,r18,1
   8c580:	8822d07a 	srli	r17,r17,1
   8c584:	1ca4b03a 	or	r18,r3,r18
   8c588:	14a4b03a 	or	r18,r2,r18
   8c58c:	4007883a 	mov	r3,r8
   8c590:	1880ffc4 	addi	r2,r3,1023
   8c594:	0080460e 	bge	zero,r2,8c6b0 <__muldf3+0x748>
   8c598:	910001cc 	andi	r4,r18,7
   8c59c:	20000726 	beq	r4,zero,8c5bc <__muldf3+0x654>
   8c5a0:	910003cc 	andi	r4,r18,15
   8c5a4:	01400104 	movi	r5,4
   8c5a8:	21400426 	beq	r4,r5,8c5bc <__muldf3+0x654>
   8c5ac:	9149883a 	add	r4,r18,r5
   8c5b0:	24a5803a 	cmpltu	r18,r4,r18
   8c5b4:	8ca3883a 	add	r17,r17,r18
   8c5b8:	2025883a 	mov	r18,r4
   8c5bc:	8900402c 	andhi	r4,r17,256
   8c5c0:	20000426 	beq	r4,zero,8c5d4 <__muldf3+0x66c>
   8c5c4:	18810004 	addi	r2,r3,1024
   8c5c8:	00ffc034 	movhi	r3,65280
   8c5cc:	18ffffc4 	addi	r3,r3,-1
   8c5d0:	88e2703a 	and	r17,r17,r3
   8c5d4:	00c1ff84 	movi	r3,2046
   8c5d8:	18bf1316 	blt	r3,r2,8c228 <__muldf3+0x2c0>
   8c5dc:	882c977a 	slli	r22,r17,29
   8c5e0:	9024d0fa 	srli	r18,r18,3
   8c5e4:	8822927a 	slli	r17,r17,9
   8c5e8:	1081ffcc 	andi	r2,r2,2047
   8c5ec:	b4acb03a 	or	r22,r22,r18
   8c5f0:	8820d33a 	srli	r16,r17,12
   8c5f4:	3027883a 	mov	r19,r6
   8c5f8:	003eba06 	br	8c0e4 <__muldf3+0x17c>
   8c5fc:	8080022c 	andhi	r2,r16,8
   8c600:	10000926 	beq	r2,zero,8c628 <__muldf3+0x6c0>
   8c604:	8880022c 	andhi	r2,r17,8
   8c608:	1000071e 	bne	r2,zero,8c628 <__muldf3+0x6c0>
   8c60c:	00800434 	movhi	r2,16
   8c610:	8c000234 	orhi	r16,r17,8
   8c614:	10bfffc4 	addi	r2,r2,-1
   8c618:	e027883a 	mov	r19,fp
   8c61c:	80a0703a 	and	r16,r16,r2
   8c620:	902d883a 	mov	r22,r18
   8c624:	003f1706 	br	8c284 <__muldf3+0x31c>
   8c628:	00800434 	movhi	r2,16
   8c62c:	84000234 	orhi	r16,r16,8
   8c630:	10bfffc4 	addi	r2,r2,-1
   8c634:	80a0703a 	and	r16,r16,r2
   8c638:	003f1206 	br	8c284 <__muldf3+0x31c>
   8c63c:	147ff604 	addi	r17,r2,-40
   8c640:	3462983a 	sll	r17,r6,r17
   8c644:	0025883a 	mov	r18,zero
   8c648:	003ef306 	br	8c218 <__muldf3+0x2b0>
   8c64c:	3009883a 	mov	r4,r6
   8c650:	d9400215 	stw	r5,8(sp)
   8c654:	d9800715 	stw	r6,28(sp)
   8c658:	da400415 	stw	r9,16(sp)
   8c65c:	da800315 	stw	r10,12(sp)
   8c660:	008d2d40 	call	8d2d4 <__clzsi2>
   8c664:	10800804 	addi	r2,r2,32
   8c668:	da800317 	ldw	r10,12(sp)
   8c66c:	da400417 	ldw	r9,16(sp)
   8c670:	d9800717 	ldw	r6,28(sp)
   8c674:	d9400217 	ldw	r5,8(sp)
   8c678:	003edd06 	br	8c1f0 <__muldf3+0x288>
   8c67c:	143ff604 	addi	r16,r2,-40
   8c680:	ac20983a 	sll	r16,r21,r16
   8c684:	002d883a 	mov	r22,zero
   8c688:	003ec106 	br	8c190 <__muldf3+0x228>
   8c68c:	d9800715 	stw	r6,28(sp)
   8c690:	d9c00215 	stw	r7,8(sp)
   8c694:	da400415 	stw	r9,16(sp)
   8c698:	008d2d40 	call	8d2d4 <__clzsi2>
   8c69c:	10800804 	addi	r2,r2,32
   8c6a0:	da400417 	ldw	r9,16(sp)
   8c6a4:	d9c00217 	ldw	r7,8(sp)
   8c6a8:	d9800717 	ldw	r6,28(sp)
   8c6ac:	003eae06 	br	8c168 <__muldf3+0x200>
   8c6b0:	00c00044 	movi	r3,1
   8c6b4:	1887c83a 	sub	r3,r3,r2
   8c6b8:	01000e04 	movi	r4,56
   8c6bc:	20fe8516 	blt	r4,r3,8c0d4 <__muldf3+0x16c>
   8c6c0:	010007c4 	movi	r4,31
   8c6c4:	20c01b16 	blt	r4,r3,8c734 <__muldf3+0x7cc>
   8c6c8:	00800804 	movi	r2,32
   8c6cc:	10c5c83a 	sub	r2,r2,r3
   8c6d0:	888a983a 	sll	r5,r17,r2
   8c6d4:	90c8d83a 	srl	r4,r18,r3
   8c6d8:	9084983a 	sll	r2,r18,r2
   8c6dc:	88e2d83a 	srl	r17,r17,r3
   8c6e0:	2906b03a 	or	r3,r5,r4
   8c6e4:	1004c03a 	cmpne	r2,r2,zero
   8c6e8:	1886b03a 	or	r3,r3,r2
   8c6ec:	188001cc 	andi	r2,r3,7
   8c6f0:	10000726 	beq	r2,zero,8c710 <__muldf3+0x7a8>
   8c6f4:	188003cc 	andi	r2,r3,15
   8c6f8:	01000104 	movi	r4,4
   8c6fc:	11000426 	beq	r2,r4,8c710 <__muldf3+0x7a8>
   8c700:	1805883a 	mov	r2,r3
   8c704:	10c00104 	addi	r3,r2,4
   8c708:	1885803a 	cmpltu	r2,r3,r2
   8c70c:	88a3883a 	add	r17,r17,r2
   8c710:	8880202c 	andhi	r2,r17,128
   8c714:	10001c26 	beq	r2,zero,8c788 <__muldf3+0x820>
   8c718:	3027883a 	mov	r19,r6
   8c71c:	00800044 	movi	r2,1
   8c720:	0021883a 	mov	r16,zero
   8c724:	002d883a 	mov	r22,zero
   8c728:	003e6e06 	br	8c0e4 <__muldf3+0x17c>
   8c72c:	4007883a 	mov	r3,r8
   8c730:	003f9706 	br	8c590 <__muldf3+0x628>
   8c734:	017ff844 	movi	r5,-31
   8c738:	2885c83a 	sub	r2,r5,r2
   8c73c:	888ad83a 	srl	r5,r17,r2
   8c740:	00800804 	movi	r2,32
   8c744:	18801a26 	beq	r3,r2,8c7b0 <__muldf3+0x848>
   8c748:	01001004 	movi	r4,64
   8c74c:	20c7c83a 	sub	r3,r4,r3
   8c750:	88e2983a 	sll	r17,r17,r3
   8c754:	8ca4b03a 	or	r18,r17,r18
   8c758:	9004c03a 	cmpne	r2,r18,zero
   8c75c:	2884b03a 	or	r2,r5,r2
   8c760:	144001cc 	andi	r17,r2,7
   8c764:	88000d1e 	bne	r17,zero,8c79c <__muldf3+0x834>
   8c768:	0021883a 	mov	r16,zero
   8c76c:	102cd0fa 	srli	r22,r2,3
   8c770:	3027883a 	mov	r19,r6
   8c774:	0005883a 	mov	r2,zero
   8c778:	b46cb03a 	or	r22,r22,r17
   8c77c:	003e5906 	br	8c0e4 <__muldf3+0x17c>
   8c780:	1007883a 	mov	r3,r2
   8c784:	0023883a 	mov	r17,zero
   8c788:	8820927a 	slli	r16,r17,9
   8c78c:	1805883a 	mov	r2,r3
   8c790:	8822977a 	slli	r17,r17,29
   8c794:	8020d33a 	srli	r16,r16,12
   8c798:	003ff406 	br	8c76c <__muldf3+0x804>
   8c79c:	10c003cc 	andi	r3,r2,15
   8c7a0:	01000104 	movi	r4,4
   8c7a4:	193ff626 	beq	r3,r4,8c780 <__muldf3+0x818>
   8c7a8:	0023883a 	mov	r17,zero
   8c7ac:	003fd506 	br	8c704 <__muldf3+0x79c>
   8c7b0:	0023883a 	mov	r17,zero
   8c7b4:	003fe706 	br	8c754 <__muldf3+0x7ec>
   8c7b8:	00800434 	movhi	r2,16
   8c7bc:	8c000234 	orhi	r16,r17,8
   8c7c0:	10bfffc4 	addi	r2,r2,-1
   8c7c4:	3027883a 	mov	r19,r6
   8c7c8:	80a0703a 	and	r16,r16,r2
   8c7cc:	902d883a 	mov	r22,r18
   8c7d0:	003eac06 	br	8c284 <__muldf3+0x31c>

0008c7d4 <__subdf3>:
   8c7d4:	02000434 	movhi	r8,16
   8c7d8:	423fffc4 	addi	r8,r8,-1
   8c7dc:	defffb04 	addi	sp,sp,-20
   8c7e0:	2a14703a 	and	r10,r5,r8
   8c7e4:	3812d53a 	srli	r9,r7,20
   8c7e8:	3a10703a 	and	r8,r7,r8
   8c7ec:	2006d77a 	srli	r3,r4,29
   8c7f0:	3004d77a 	srli	r2,r6,29
   8c7f4:	dc000015 	stw	r16,0(sp)
   8c7f8:	501490fa 	slli	r10,r10,3
   8c7fc:	2820d53a 	srli	r16,r5,20
   8c800:	401090fa 	slli	r8,r8,3
   8c804:	dc800215 	stw	r18,8(sp)
   8c808:	dc400115 	stw	r17,4(sp)
   8c80c:	dfc00415 	stw	ra,16(sp)
   8c810:	202290fa 	slli	r17,r4,3
   8c814:	dcc00315 	stw	r19,12(sp)
   8c818:	4a41ffcc 	andi	r9,r9,2047
   8c81c:	0101ffc4 	movi	r4,2047
   8c820:	2824d7fa 	srli	r18,r5,31
   8c824:	8401ffcc 	andi	r16,r16,2047
   8c828:	50c6b03a 	or	r3,r10,r3
   8c82c:	380ed7fa 	srli	r7,r7,31
   8c830:	408ab03a 	or	r5,r8,r2
   8c834:	300c90fa 	slli	r6,r6,3
   8c838:	49009626 	beq	r9,r4,8ca94 <__subdf3+0x2c0>
   8c83c:	39c0005c 	xori	r7,r7,1
   8c840:	8245c83a 	sub	r2,r16,r9
   8c844:	3c807426 	beq	r7,r18,8ca18 <__subdf3+0x244>
   8c848:	0080af0e 	bge	zero,r2,8cb08 <__subdf3+0x334>
   8c84c:	48002a1e 	bne	r9,zero,8c8f8 <__subdf3+0x124>
   8c850:	2988b03a 	or	r4,r5,r6
   8c854:	20009a1e 	bne	r4,zero,8cac0 <__subdf3+0x2ec>
   8c858:	888001cc 	andi	r2,r17,7
   8c85c:	10000726 	beq	r2,zero,8c87c <__subdf3+0xa8>
   8c860:	888003cc 	andi	r2,r17,15
   8c864:	01000104 	movi	r4,4
   8c868:	11000426 	beq	r2,r4,8c87c <__subdf3+0xa8>
   8c86c:	890b883a 	add	r5,r17,r4
   8c870:	2c63803a 	cmpltu	r17,r5,r17
   8c874:	1c47883a 	add	r3,r3,r17
   8c878:	2823883a 	mov	r17,r5
   8c87c:	1880202c 	andhi	r2,r3,128
   8c880:	10005926 	beq	r2,zero,8c9e8 <__subdf3+0x214>
   8c884:	84000044 	addi	r16,r16,1
   8c888:	0081ffc4 	movi	r2,2047
   8c88c:	8080be26 	beq	r16,r2,8cb88 <__subdf3+0x3b4>
   8c890:	017fe034 	movhi	r5,65408
   8c894:	297fffc4 	addi	r5,r5,-1
   8c898:	1946703a 	and	r3,r3,r5
   8c89c:	1804977a 	slli	r2,r3,29
   8c8a0:	1806927a 	slli	r3,r3,9
   8c8a4:	8822d0fa 	srli	r17,r17,3
   8c8a8:	8401ffcc 	andi	r16,r16,2047
   8c8ac:	180ad33a 	srli	r5,r3,12
   8c8b0:	9100004c 	andi	r4,r18,1
   8c8b4:	1444b03a 	or	r2,r2,r17
   8c8b8:	80c1ffcc 	andi	r3,r16,2047
   8c8bc:	1820953a 	slli	r16,r3,20
   8c8c0:	20c03fcc 	andi	r3,r4,255
   8c8c4:	180897fa 	slli	r4,r3,31
   8c8c8:	00c00434 	movhi	r3,16
   8c8cc:	18ffffc4 	addi	r3,r3,-1
   8c8d0:	28c6703a 	and	r3,r5,r3
   8c8d4:	1c06b03a 	or	r3,r3,r16
   8c8d8:	1906b03a 	or	r3,r3,r4
   8c8dc:	dfc00417 	ldw	ra,16(sp)
   8c8e0:	dcc00317 	ldw	r19,12(sp)
   8c8e4:	dc800217 	ldw	r18,8(sp)
   8c8e8:	dc400117 	ldw	r17,4(sp)
   8c8ec:	dc000017 	ldw	r16,0(sp)
   8c8f0:	dec00504 	addi	sp,sp,20
   8c8f4:	f800283a 	ret
   8c8f8:	0101ffc4 	movi	r4,2047
   8c8fc:	813fd626 	beq	r16,r4,8c858 <__subdf3+0x84>
   8c900:	29402034 	orhi	r5,r5,128
   8c904:	01000e04 	movi	r4,56
   8c908:	2080a316 	blt	r4,r2,8cb98 <__subdf3+0x3c4>
   8c90c:	010007c4 	movi	r4,31
   8c910:	2080c616 	blt	r4,r2,8cc2c <__subdf3+0x458>
   8c914:	01000804 	movi	r4,32
   8c918:	2089c83a 	sub	r4,r4,r2
   8c91c:	2910983a 	sll	r8,r5,r4
   8c920:	308ed83a 	srl	r7,r6,r2
   8c924:	3108983a 	sll	r4,r6,r4
   8c928:	2884d83a 	srl	r2,r5,r2
   8c92c:	41ccb03a 	or	r6,r8,r7
   8c930:	2008c03a 	cmpne	r4,r4,zero
   8c934:	310cb03a 	or	r6,r6,r4
   8c938:	898dc83a 	sub	r6,r17,r6
   8c93c:	89a3803a 	cmpltu	r17,r17,r6
   8c940:	1887c83a 	sub	r3,r3,r2
   8c944:	1c47c83a 	sub	r3,r3,r17
   8c948:	3023883a 	mov	r17,r6
   8c94c:	1880202c 	andhi	r2,r3,128
   8c950:	10002326 	beq	r2,zero,8c9e0 <__subdf3+0x20c>
   8c954:	04c02034 	movhi	r19,128
   8c958:	9cffffc4 	addi	r19,r19,-1
   8c95c:	1ce6703a 	and	r19,r3,r19
   8c960:	98007a26 	beq	r19,zero,8cb4c <__subdf3+0x378>
   8c964:	9809883a 	mov	r4,r19
   8c968:	008d2d40 	call	8d2d4 <__clzsi2>
   8c96c:	113ffe04 	addi	r4,r2,-8
   8c970:	00c007c4 	movi	r3,31
   8c974:	19007b16 	blt	r3,r4,8cb64 <__subdf3+0x390>
   8c978:	00800804 	movi	r2,32
   8c97c:	1105c83a 	sub	r2,r2,r4
   8c980:	8884d83a 	srl	r2,r17,r2
   8c984:	9906983a 	sll	r3,r19,r4
   8c988:	8922983a 	sll	r17,r17,r4
   8c98c:	10c4b03a 	or	r2,r2,r3
   8c990:	24007816 	blt	r4,r16,8cb74 <__subdf3+0x3a0>
   8c994:	2421c83a 	sub	r16,r4,r16
   8c998:	80c00044 	addi	r3,r16,1
   8c99c:	010007c4 	movi	r4,31
   8c9a0:	20c09516 	blt	r4,r3,8cbf8 <__subdf3+0x424>
   8c9a4:	01400804 	movi	r5,32
   8c9a8:	28cbc83a 	sub	r5,r5,r3
   8c9ac:	88c8d83a 	srl	r4,r17,r3
   8c9b0:	8962983a 	sll	r17,r17,r5
   8c9b4:	114a983a 	sll	r5,r2,r5
   8c9b8:	10c6d83a 	srl	r3,r2,r3
   8c9bc:	8804c03a 	cmpne	r2,r17,zero
   8c9c0:	290ab03a 	or	r5,r5,r4
   8c9c4:	28a2b03a 	or	r17,r5,r2
   8c9c8:	0021883a 	mov	r16,zero
   8c9cc:	003fa206 	br	8c858 <__subdf3+0x84>
   8c9d0:	2090b03a 	or	r8,r4,r2
   8c9d4:	40018e26 	beq	r8,zero,8d010 <__subdf3+0x83c>
   8c9d8:	1007883a 	mov	r3,r2
   8c9dc:	2023883a 	mov	r17,r4
   8c9e0:	888001cc 	andi	r2,r17,7
   8c9e4:	103f9e1e 	bne	r2,zero,8c860 <__subdf3+0x8c>
   8c9e8:	1804977a 	slli	r2,r3,29
   8c9ec:	8822d0fa 	srli	r17,r17,3
   8c9f0:	1810d0fa 	srli	r8,r3,3
   8c9f4:	9100004c 	andi	r4,r18,1
   8c9f8:	1444b03a 	or	r2,r2,r17
   8c9fc:	00c1ffc4 	movi	r3,2047
   8ca00:	80c02826 	beq	r16,r3,8caa4 <__subdf3+0x2d0>
   8ca04:	01400434 	movhi	r5,16
   8ca08:	297fffc4 	addi	r5,r5,-1
   8ca0c:	80e0703a 	and	r16,r16,r3
   8ca10:	414a703a 	and	r5,r8,r5
   8ca14:	003fa806 	br	8c8b8 <__subdf3+0xe4>
   8ca18:	0080630e 	bge	zero,r2,8cba8 <__subdf3+0x3d4>
   8ca1c:	48003026 	beq	r9,zero,8cae0 <__subdf3+0x30c>
   8ca20:	0101ffc4 	movi	r4,2047
   8ca24:	813f8c26 	beq	r16,r4,8c858 <__subdf3+0x84>
   8ca28:	29402034 	orhi	r5,r5,128
   8ca2c:	01000e04 	movi	r4,56
   8ca30:	2080a90e 	bge	r4,r2,8ccd8 <__subdf3+0x504>
   8ca34:	298cb03a 	or	r6,r5,r6
   8ca38:	3012c03a 	cmpne	r9,r6,zero
   8ca3c:	0005883a 	mov	r2,zero
   8ca40:	4c53883a 	add	r9,r9,r17
   8ca44:	4c63803a 	cmpltu	r17,r9,r17
   8ca48:	10c7883a 	add	r3,r2,r3
   8ca4c:	88c7883a 	add	r3,r17,r3
   8ca50:	4823883a 	mov	r17,r9
   8ca54:	1880202c 	andhi	r2,r3,128
   8ca58:	1000d026 	beq	r2,zero,8cd9c <__subdf3+0x5c8>
   8ca5c:	84000044 	addi	r16,r16,1
   8ca60:	0081ffc4 	movi	r2,2047
   8ca64:	8080fe26 	beq	r16,r2,8ce60 <__subdf3+0x68c>
   8ca68:	00bfe034 	movhi	r2,65408
   8ca6c:	10bfffc4 	addi	r2,r2,-1
   8ca70:	1886703a 	and	r3,r3,r2
   8ca74:	880ad07a 	srli	r5,r17,1
   8ca78:	180497fa 	slli	r2,r3,31
   8ca7c:	8900004c 	andi	r4,r17,1
   8ca80:	2922b03a 	or	r17,r5,r4
   8ca84:	1806d07a 	srli	r3,r3,1
   8ca88:	1462b03a 	or	r17,r2,r17
   8ca8c:	3825883a 	mov	r18,r7
   8ca90:	003f7106 	br	8c858 <__subdf3+0x84>
   8ca94:	2984b03a 	or	r2,r5,r6
   8ca98:	103f6826 	beq	r2,zero,8c83c <__subdf3+0x68>
   8ca9c:	39c03fcc 	andi	r7,r7,255
   8caa0:	003f6706 	br	8c840 <__subdf3+0x6c>
   8caa4:	4086b03a 	or	r3,r8,r2
   8caa8:	18015226 	beq	r3,zero,8cff4 <__subdf3+0x820>
   8caac:	00c00434 	movhi	r3,16
   8cab0:	41400234 	orhi	r5,r8,8
   8cab4:	18ffffc4 	addi	r3,r3,-1
   8cab8:	28ca703a 	and	r5,r5,r3
   8cabc:	003f7e06 	br	8c8b8 <__subdf3+0xe4>
   8cac0:	10bfffc4 	addi	r2,r2,-1
   8cac4:	1000491e 	bne	r2,zero,8cbec <__subdf3+0x418>
   8cac8:	898fc83a 	sub	r7,r17,r6
   8cacc:	89e3803a 	cmpltu	r17,r17,r7
   8cad0:	1947c83a 	sub	r3,r3,r5
   8cad4:	1c47c83a 	sub	r3,r3,r17
   8cad8:	3823883a 	mov	r17,r7
   8cadc:	003f9b06 	br	8c94c <__subdf3+0x178>
   8cae0:	2988b03a 	or	r4,r5,r6
   8cae4:	203f5c26 	beq	r4,zero,8c858 <__subdf3+0x84>
   8cae8:	10bfffc4 	addi	r2,r2,-1
   8caec:	1000931e 	bne	r2,zero,8cd3c <__subdf3+0x568>
   8caf0:	898d883a 	add	r6,r17,r6
   8caf4:	3463803a 	cmpltu	r17,r6,r17
   8caf8:	1947883a 	add	r3,r3,r5
   8cafc:	88c7883a 	add	r3,r17,r3
   8cb00:	3023883a 	mov	r17,r6
   8cb04:	003fd306 	br	8ca54 <__subdf3+0x280>
   8cb08:	1000541e 	bne	r2,zero,8cc5c <__subdf3+0x488>
   8cb0c:	80800044 	addi	r2,r16,1
   8cb10:	1081ffcc 	andi	r2,r2,2047
   8cb14:	01000044 	movi	r4,1
   8cb18:	2080a20e 	bge	r4,r2,8cda4 <__subdf3+0x5d0>
   8cb1c:	8989c83a 	sub	r4,r17,r6
   8cb20:	8905803a 	cmpltu	r2,r17,r4
   8cb24:	1967c83a 	sub	r19,r3,r5
   8cb28:	98a7c83a 	sub	r19,r19,r2
   8cb2c:	9880202c 	andhi	r2,r19,128
   8cb30:	10006326 	beq	r2,zero,8ccc0 <__subdf3+0x4ec>
   8cb34:	3463c83a 	sub	r17,r6,r17
   8cb38:	28c7c83a 	sub	r3,r5,r3
   8cb3c:	344d803a 	cmpltu	r6,r6,r17
   8cb40:	19a7c83a 	sub	r19,r3,r6
   8cb44:	3825883a 	mov	r18,r7
   8cb48:	983f861e 	bne	r19,zero,8c964 <__subdf3+0x190>
   8cb4c:	8809883a 	mov	r4,r17
   8cb50:	008d2d40 	call	8d2d4 <__clzsi2>
   8cb54:	10800804 	addi	r2,r2,32
   8cb58:	113ffe04 	addi	r4,r2,-8
   8cb5c:	00c007c4 	movi	r3,31
   8cb60:	193f850e 	bge	r3,r4,8c978 <__subdf3+0x1a4>
   8cb64:	10bff604 	addi	r2,r2,-40
   8cb68:	8884983a 	sll	r2,r17,r2
   8cb6c:	0023883a 	mov	r17,zero
   8cb70:	243f880e 	bge	r4,r16,8c994 <__subdf3+0x1c0>
   8cb74:	00ffe034 	movhi	r3,65408
   8cb78:	18ffffc4 	addi	r3,r3,-1
   8cb7c:	8121c83a 	sub	r16,r16,r4
   8cb80:	10c6703a 	and	r3,r2,r3
   8cb84:	003f3406 	br	8c858 <__subdf3+0x84>
   8cb88:	9100004c 	andi	r4,r18,1
   8cb8c:	000b883a 	mov	r5,zero
   8cb90:	0005883a 	mov	r2,zero
   8cb94:	003f4806 	br	8c8b8 <__subdf3+0xe4>
   8cb98:	298cb03a 	or	r6,r5,r6
   8cb9c:	300cc03a 	cmpne	r6,r6,zero
   8cba0:	0005883a 	mov	r2,zero
   8cba4:	003f6406 	br	8c938 <__subdf3+0x164>
   8cba8:	10009a1e 	bne	r2,zero,8ce14 <__subdf3+0x640>
   8cbac:	82400044 	addi	r9,r16,1
   8cbb0:	4881ffcc 	andi	r2,r9,2047
   8cbb4:	02800044 	movi	r10,1
   8cbb8:	5080670e 	bge	r10,r2,8cd58 <__subdf3+0x584>
   8cbbc:	0081ffc4 	movi	r2,2047
   8cbc0:	4880af26 	beq	r9,r2,8ce80 <__subdf3+0x6ac>
   8cbc4:	898d883a 	add	r6,r17,r6
   8cbc8:	1945883a 	add	r2,r3,r5
   8cbcc:	3447803a 	cmpltu	r3,r6,r17
   8cbd0:	1887883a 	add	r3,r3,r2
   8cbd4:	182297fa 	slli	r17,r3,31
   8cbd8:	300cd07a 	srli	r6,r6,1
   8cbdc:	1806d07a 	srli	r3,r3,1
   8cbe0:	4821883a 	mov	r16,r9
   8cbe4:	89a2b03a 	or	r17,r17,r6
   8cbe8:	003f1b06 	br	8c858 <__subdf3+0x84>
   8cbec:	0101ffc4 	movi	r4,2047
   8cbf0:	813f441e 	bne	r16,r4,8c904 <__subdf3+0x130>
   8cbf4:	003f1806 	br	8c858 <__subdf3+0x84>
   8cbf8:	843ff844 	addi	r16,r16,-31
   8cbfc:	01400804 	movi	r5,32
   8cc00:	1408d83a 	srl	r4,r2,r16
   8cc04:	19405026 	beq	r3,r5,8cd48 <__subdf3+0x574>
   8cc08:	01401004 	movi	r5,64
   8cc0c:	28c7c83a 	sub	r3,r5,r3
   8cc10:	10c4983a 	sll	r2,r2,r3
   8cc14:	88a2b03a 	or	r17,r17,r2
   8cc18:	8822c03a 	cmpne	r17,r17,zero
   8cc1c:	2462b03a 	or	r17,r4,r17
   8cc20:	0007883a 	mov	r3,zero
   8cc24:	0021883a 	mov	r16,zero
   8cc28:	003f6d06 	br	8c9e0 <__subdf3+0x20c>
   8cc2c:	11fff804 	addi	r7,r2,-32
   8cc30:	01000804 	movi	r4,32
   8cc34:	29ced83a 	srl	r7,r5,r7
   8cc38:	11004526 	beq	r2,r4,8cd50 <__subdf3+0x57c>
   8cc3c:	01001004 	movi	r4,64
   8cc40:	2089c83a 	sub	r4,r4,r2
   8cc44:	2904983a 	sll	r2,r5,r4
   8cc48:	118cb03a 	or	r6,r2,r6
   8cc4c:	300cc03a 	cmpne	r6,r6,zero
   8cc50:	398cb03a 	or	r6,r7,r6
   8cc54:	0005883a 	mov	r2,zero
   8cc58:	003f3706 	br	8c938 <__subdf3+0x164>
   8cc5c:	80002a26 	beq	r16,zero,8cd08 <__subdf3+0x534>
   8cc60:	0101ffc4 	movi	r4,2047
   8cc64:	49006626 	beq	r9,r4,8ce00 <__subdf3+0x62c>
   8cc68:	0085c83a 	sub	r2,zero,r2
   8cc6c:	18c02034 	orhi	r3,r3,128
   8cc70:	01000e04 	movi	r4,56
   8cc74:	20807e16 	blt	r4,r2,8ce70 <__subdf3+0x69c>
   8cc78:	010007c4 	movi	r4,31
   8cc7c:	2080e716 	blt	r4,r2,8d01c <__subdf3+0x848>
   8cc80:	01000804 	movi	r4,32
   8cc84:	2089c83a 	sub	r4,r4,r2
   8cc88:	1914983a 	sll	r10,r3,r4
   8cc8c:	8890d83a 	srl	r8,r17,r2
   8cc90:	8908983a 	sll	r4,r17,r4
   8cc94:	1884d83a 	srl	r2,r3,r2
   8cc98:	5222b03a 	or	r17,r10,r8
   8cc9c:	2006c03a 	cmpne	r3,r4,zero
   8cca0:	88e2b03a 	or	r17,r17,r3
   8cca4:	3463c83a 	sub	r17,r6,r17
   8cca8:	2885c83a 	sub	r2,r5,r2
   8ccac:	344d803a 	cmpltu	r6,r6,r17
   8ccb0:	1187c83a 	sub	r3,r2,r6
   8ccb4:	4821883a 	mov	r16,r9
   8ccb8:	3825883a 	mov	r18,r7
   8ccbc:	003f2306 	br	8c94c <__subdf3+0x178>
   8ccc0:	24d0b03a 	or	r8,r4,r19
   8ccc4:	40001b1e 	bne	r8,zero,8cd34 <__subdf3+0x560>
   8ccc8:	0005883a 	mov	r2,zero
   8cccc:	0009883a 	mov	r4,zero
   8ccd0:	0021883a 	mov	r16,zero
   8ccd4:	003f4906 	br	8c9fc <__subdf3+0x228>
   8ccd8:	010007c4 	movi	r4,31
   8ccdc:	20803a16 	blt	r4,r2,8cdc8 <__subdf3+0x5f4>
   8cce0:	01000804 	movi	r4,32
   8cce4:	2089c83a 	sub	r4,r4,r2
   8cce8:	2912983a 	sll	r9,r5,r4
   8ccec:	3090d83a 	srl	r8,r6,r2
   8ccf0:	3108983a 	sll	r4,r6,r4
   8ccf4:	2884d83a 	srl	r2,r5,r2
   8ccf8:	4a12b03a 	or	r9,r9,r8
   8ccfc:	2008c03a 	cmpne	r4,r4,zero
   8cd00:	4912b03a 	or	r9,r9,r4
   8cd04:	003f4e06 	br	8ca40 <__subdf3+0x26c>
   8cd08:	1c48b03a 	or	r4,r3,r17
   8cd0c:	20003c26 	beq	r4,zero,8ce00 <__subdf3+0x62c>
   8cd10:	0084303a 	nor	r2,zero,r2
   8cd14:	1000381e 	bne	r2,zero,8cdf8 <__subdf3+0x624>
   8cd18:	3463c83a 	sub	r17,r6,r17
   8cd1c:	28c5c83a 	sub	r2,r5,r3
   8cd20:	344d803a 	cmpltu	r6,r6,r17
   8cd24:	1187c83a 	sub	r3,r2,r6
   8cd28:	4821883a 	mov	r16,r9
   8cd2c:	3825883a 	mov	r18,r7
   8cd30:	003f0606 	br	8c94c <__subdf3+0x178>
   8cd34:	2023883a 	mov	r17,r4
   8cd38:	003f0906 	br	8c960 <__subdf3+0x18c>
   8cd3c:	0101ffc4 	movi	r4,2047
   8cd40:	813f3a1e 	bne	r16,r4,8ca2c <__subdf3+0x258>
   8cd44:	003ec406 	br	8c858 <__subdf3+0x84>
   8cd48:	0005883a 	mov	r2,zero
   8cd4c:	003fb106 	br	8cc14 <__subdf3+0x440>
   8cd50:	0005883a 	mov	r2,zero
   8cd54:	003fbc06 	br	8cc48 <__subdf3+0x474>
   8cd58:	1c44b03a 	or	r2,r3,r17
   8cd5c:	80008e1e 	bne	r16,zero,8cf98 <__subdf3+0x7c4>
   8cd60:	1000c826 	beq	r2,zero,8d084 <__subdf3+0x8b0>
   8cd64:	2984b03a 	or	r2,r5,r6
   8cd68:	103ebb26 	beq	r2,zero,8c858 <__subdf3+0x84>
   8cd6c:	8989883a 	add	r4,r17,r6
   8cd70:	1945883a 	add	r2,r3,r5
   8cd74:	2447803a 	cmpltu	r3,r4,r17
   8cd78:	1887883a 	add	r3,r3,r2
   8cd7c:	1880202c 	andhi	r2,r3,128
   8cd80:	2023883a 	mov	r17,r4
   8cd84:	103f1626 	beq	r2,zero,8c9e0 <__subdf3+0x20c>
   8cd88:	00bfe034 	movhi	r2,65408
   8cd8c:	10bfffc4 	addi	r2,r2,-1
   8cd90:	5021883a 	mov	r16,r10
   8cd94:	1886703a 	and	r3,r3,r2
   8cd98:	003eaf06 	br	8c858 <__subdf3+0x84>
   8cd9c:	3825883a 	mov	r18,r7
   8cda0:	003f0f06 	br	8c9e0 <__subdf3+0x20c>
   8cda4:	1c44b03a 	or	r2,r3,r17
   8cda8:	8000251e 	bne	r16,zero,8ce40 <__subdf3+0x66c>
   8cdac:	1000661e 	bne	r2,zero,8cf48 <__subdf3+0x774>
   8cdb0:	2990b03a 	or	r8,r5,r6
   8cdb4:	40009626 	beq	r8,zero,8d010 <__subdf3+0x83c>
   8cdb8:	2807883a 	mov	r3,r5
   8cdbc:	3023883a 	mov	r17,r6
   8cdc0:	3825883a 	mov	r18,r7
   8cdc4:	003ea406 	br	8c858 <__subdf3+0x84>
   8cdc8:	127ff804 	addi	r9,r2,-32
   8cdcc:	01000804 	movi	r4,32
   8cdd0:	2a52d83a 	srl	r9,r5,r9
   8cdd4:	11008c26 	beq	r2,r4,8d008 <__subdf3+0x834>
   8cdd8:	01001004 	movi	r4,64
   8cddc:	2085c83a 	sub	r2,r4,r2
   8cde0:	2884983a 	sll	r2,r5,r2
   8cde4:	118cb03a 	or	r6,r2,r6
   8cde8:	300cc03a 	cmpne	r6,r6,zero
   8cdec:	4992b03a 	or	r9,r9,r6
   8cdf0:	0005883a 	mov	r2,zero
   8cdf4:	003f1206 	br	8ca40 <__subdf3+0x26c>
   8cdf8:	0101ffc4 	movi	r4,2047
   8cdfc:	493f9c1e 	bne	r9,r4,8cc70 <__subdf3+0x49c>
   8ce00:	2807883a 	mov	r3,r5
   8ce04:	3023883a 	mov	r17,r6
   8ce08:	4821883a 	mov	r16,r9
   8ce0c:	3825883a 	mov	r18,r7
   8ce10:	003e9106 	br	8c858 <__subdf3+0x84>
   8ce14:	80001f1e 	bne	r16,zero,8ce94 <__subdf3+0x6c0>
   8ce18:	1c48b03a 	or	r4,r3,r17
   8ce1c:	20005a26 	beq	r4,zero,8cf88 <__subdf3+0x7b4>
   8ce20:	0084303a 	nor	r2,zero,r2
   8ce24:	1000561e 	bne	r2,zero,8cf80 <__subdf3+0x7ac>
   8ce28:	89a3883a 	add	r17,r17,r6
   8ce2c:	1945883a 	add	r2,r3,r5
   8ce30:	898d803a 	cmpltu	r6,r17,r6
   8ce34:	3087883a 	add	r3,r6,r2
   8ce38:	4821883a 	mov	r16,r9
   8ce3c:	003f0506 	br	8ca54 <__subdf3+0x280>
   8ce40:	10002b1e 	bne	r2,zero,8cef0 <__subdf3+0x71c>
   8ce44:	2984b03a 	or	r2,r5,r6
   8ce48:	10008026 	beq	r2,zero,8d04c <__subdf3+0x878>
   8ce4c:	2807883a 	mov	r3,r5
   8ce50:	3023883a 	mov	r17,r6
   8ce54:	3825883a 	mov	r18,r7
   8ce58:	0401ffc4 	movi	r16,2047
   8ce5c:	003e7e06 	br	8c858 <__subdf3+0x84>
   8ce60:	3809883a 	mov	r4,r7
   8ce64:	0011883a 	mov	r8,zero
   8ce68:	0005883a 	mov	r2,zero
   8ce6c:	003ee306 	br	8c9fc <__subdf3+0x228>
   8ce70:	1c62b03a 	or	r17,r3,r17
   8ce74:	8822c03a 	cmpne	r17,r17,zero
   8ce78:	0005883a 	mov	r2,zero
   8ce7c:	003f8906 	br	8cca4 <__subdf3+0x4d0>
   8ce80:	3809883a 	mov	r4,r7
   8ce84:	4821883a 	mov	r16,r9
   8ce88:	0011883a 	mov	r8,zero
   8ce8c:	0005883a 	mov	r2,zero
   8ce90:	003eda06 	br	8c9fc <__subdf3+0x228>
   8ce94:	0101ffc4 	movi	r4,2047
   8ce98:	49003b26 	beq	r9,r4,8cf88 <__subdf3+0x7b4>
   8ce9c:	0085c83a 	sub	r2,zero,r2
   8cea0:	18c02034 	orhi	r3,r3,128
   8cea4:	01000e04 	movi	r4,56
   8cea8:	20806e16 	blt	r4,r2,8d064 <__subdf3+0x890>
   8ceac:	010007c4 	movi	r4,31
   8ceb0:	20807716 	blt	r4,r2,8d090 <__subdf3+0x8bc>
   8ceb4:	01000804 	movi	r4,32
   8ceb8:	2089c83a 	sub	r4,r4,r2
   8cebc:	1914983a 	sll	r10,r3,r4
   8cec0:	8890d83a 	srl	r8,r17,r2
   8cec4:	8908983a 	sll	r4,r17,r4
   8cec8:	1884d83a 	srl	r2,r3,r2
   8cecc:	5222b03a 	or	r17,r10,r8
   8ced0:	2006c03a 	cmpne	r3,r4,zero
   8ced4:	88e2b03a 	or	r17,r17,r3
   8ced8:	89a3883a 	add	r17,r17,r6
   8cedc:	1145883a 	add	r2,r2,r5
   8cee0:	898d803a 	cmpltu	r6,r17,r6
   8cee4:	3087883a 	add	r3,r6,r2
   8cee8:	4821883a 	mov	r16,r9
   8ceec:	003ed906 	br	8ca54 <__subdf3+0x280>
   8cef0:	2984b03a 	or	r2,r5,r6
   8cef4:	10004226 	beq	r2,zero,8d000 <__subdf3+0x82c>
   8cef8:	1808d0fa 	srli	r4,r3,3
   8cefc:	8822d0fa 	srli	r17,r17,3
   8cf00:	1806977a 	slli	r3,r3,29
   8cf04:	2080022c 	andhi	r2,r4,8
   8cf08:	1c62b03a 	or	r17,r3,r17
   8cf0c:	10000826 	beq	r2,zero,8cf30 <__subdf3+0x75c>
   8cf10:	2812d0fa 	srli	r9,r5,3
   8cf14:	4880022c 	andhi	r2,r9,8
   8cf18:	1000051e 	bne	r2,zero,8cf30 <__subdf3+0x75c>
   8cf1c:	300cd0fa 	srli	r6,r6,3
   8cf20:	2804977a 	slli	r2,r5,29
   8cf24:	4809883a 	mov	r4,r9
   8cf28:	3825883a 	mov	r18,r7
   8cf2c:	11a2b03a 	or	r17,r2,r6
   8cf30:	8806d77a 	srli	r3,r17,29
   8cf34:	200890fa 	slli	r4,r4,3
   8cf38:	882290fa 	slli	r17,r17,3
   8cf3c:	0401ffc4 	movi	r16,2047
   8cf40:	1906b03a 	or	r3,r3,r4
   8cf44:	003e4406 	br	8c858 <__subdf3+0x84>
   8cf48:	2984b03a 	or	r2,r5,r6
   8cf4c:	103e4226 	beq	r2,zero,8c858 <__subdf3+0x84>
   8cf50:	8989c83a 	sub	r4,r17,r6
   8cf54:	8911803a 	cmpltu	r8,r17,r4
   8cf58:	1945c83a 	sub	r2,r3,r5
   8cf5c:	1205c83a 	sub	r2,r2,r8
   8cf60:	1200202c 	andhi	r8,r2,128
   8cf64:	403e9a26 	beq	r8,zero,8c9d0 <__subdf3+0x1fc>
   8cf68:	3463c83a 	sub	r17,r6,r17
   8cf6c:	28c5c83a 	sub	r2,r5,r3
   8cf70:	344d803a 	cmpltu	r6,r6,r17
   8cf74:	1187c83a 	sub	r3,r2,r6
   8cf78:	3825883a 	mov	r18,r7
   8cf7c:	003e3606 	br	8c858 <__subdf3+0x84>
   8cf80:	0101ffc4 	movi	r4,2047
   8cf84:	493fc71e 	bne	r9,r4,8cea4 <__subdf3+0x6d0>
   8cf88:	2807883a 	mov	r3,r5
   8cf8c:	3023883a 	mov	r17,r6
   8cf90:	4821883a 	mov	r16,r9
   8cf94:	003e3006 	br	8c858 <__subdf3+0x84>
   8cf98:	10003626 	beq	r2,zero,8d074 <__subdf3+0x8a0>
   8cf9c:	2984b03a 	or	r2,r5,r6
   8cfa0:	10001726 	beq	r2,zero,8d000 <__subdf3+0x82c>
   8cfa4:	1808d0fa 	srli	r4,r3,3
   8cfa8:	8822d0fa 	srli	r17,r17,3
   8cfac:	1806977a 	slli	r3,r3,29
   8cfb0:	2080022c 	andhi	r2,r4,8
   8cfb4:	1c62b03a 	or	r17,r3,r17
   8cfb8:	10000726 	beq	r2,zero,8cfd8 <__subdf3+0x804>
   8cfbc:	2812d0fa 	srli	r9,r5,3
   8cfc0:	4880022c 	andhi	r2,r9,8
   8cfc4:	1000041e 	bne	r2,zero,8cfd8 <__subdf3+0x804>
   8cfc8:	300cd0fa 	srli	r6,r6,3
   8cfcc:	2804977a 	slli	r2,r5,29
   8cfd0:	4809883a 	mov	r4,r9
   8cfd4:	11a2b03a 	or	r17,r2,r6
   8cfd8:	8806d77a 	srli	r3,r17,29
   8cfdc:	200890fa 	slli	r4,r4,3
   8cfe0:	882290fa 	slli	r17,r17,3
   8cfe4:	3825883a 	mov	r18,r7
   8cfe8:	1906b03a 	or	r3,r3,r4
   8cfec:	0401ffc4 	movi	r16,2047
   8cff0:	003e1906 	br	8c858 <__subdf3+0x84>
   8cff4:	000b883a 	mov	r5,zero
   8cff8:	0005883a 	mov	r2,zero
   8cffc:	003e2e06 	br	8c8b8 <__subdf3+0xe4>
   8d000:	0401ffc4 	movi	r16,2047
   8d004:	003e1406 	br	8c858 <__subdf3+0x84>
   8d008:	0005883a 	mov	r2,zero
   8d00c:	003f7506 	br	8cde4 <__subdf3+0x610>
   8d010:	0005883a 	mov	r2,zero
   8d014:	0009883a 	mov	r4,zero
   8d018:	003e7806 	br	8c9fc <__subdf3+0x228>
   8d01c:	123ff804 	addi	r8,r2,-32
   8d020:	01000804 	movi	r4,32
   8d024:	1a10d83a 	srl	r8,r3,r8
   8d028:	11002526 	beq	r2,r4,8d0c0 <__subdf3+0x8ec>
   8d02c:	01001004 	movi	r4,64
   8d030:	2085c83a 	sub	r2,r4,r2
   8d034:	1884983a 	sll	r2,r3,r2
   8d038:	1444b03a 	or	r2,r2,r17
   8d03c:	1004c03a 	cmpne	r2,r2,zero
   8d040:	40a2b03a 	or	r17,r8,r2
   8d044:	0005883a 	mov	r2,zero
   8d048:	003f1606 	br	8cca4 <__subdf3+0x4d0>
   8d04c:	02000434 	movhi	r8,16
   8d050:	0009883a 	mov	r4,zero
   8d054:	423fffc4 	addi	r8,r8,-1
   8d058:	00bfffc4 	movi	r2,-1
   8d05c:	0401ffc4 	movi	r16,2047
   8d060:	003e6606 	br	8c9fc <__subdf3+0x228>
   8d064:	1c62b03a 	or	r17,r3,r17
   8d068:	8822c03a 	cmpne	r17,r17,zero
   8d06c:	0005883a 	mov	r2,zero
   8d070:	003f9906 	br	8ced8 <__subdf3+0x704>
   8d074:	2807883a 	mov	r3,r5
   8d078:	3023883a 	mov	r17,r6
   8d07c:	0401ffc4 	movi	r16,2047
   8d080:	003df506 	br	8c858 <__subdf3+0x84>
   8d084:	2807883a 	mov	r3,r5
   8d088:	3023883a 	mov	r17,r6
   8d08c:	003df206 	br	8c858 <__subdf3+0x84>
   8d090:	123ff804 	addi	r8,r2,-32
   8d094:	01000804 	movi	r4,32
   8d098:	1a10d83a 	srl	r8,r3,r8
   8d09c:	11000a26 	beq	r2,r4,8d0c8 <__subdf3+0x8f4>
   8d0a0:	01001004 	movi	r4,64
   8d0a4:	2085c83a 	sub	r2,r4,r2
   8d0a8:	1884983a 	sll	r2,r3,r2
   8d0ac:	1444b03a 	or	r2,r2,r17
   8d0b0:	1004c03a 	cmpne	r2,r2,zero
   8d0b4:	40a2b03a 	or	r17,r8,r2
   8d0b8:	0005883a 	mov	r2,zero
   8d0bc:	003f8606 	br	8ced8 <__subdf3+0x704>
   8d0c0:	0005883a 	mov	r2,zero
   8d0c4:	003fdc06 	br	8d038 <__subdf3+0x864>
   8d0c8:	0005883a 	mov	r2,zero
   8d0cc:	003ff706 	br	8d0ac <__subdf3+0x8d8>

0008d0d0 <__fixdfsi>:
   8d0d0:	280cd53a 	srli	r6,r5,20
   8d0d4:	00c00434 	movhi	r3,16
   8d0d8:	18ffffc4 	addi	r3,r3,-1
   8d0dc:	3181ffcc 	andi	r6,r6,2047
   8d0e0:	01c0ff84 	movi	r7,1022
   8d0e4:	28c6703a 	and	r3,r5,r3
   8d0e8:	280ad7fa 	srli	r5,r5,31
   8d0ec:	3980120e 	bge	r7,r6,8d138 <__fixdfsi+0x68>
   8d0f0:	00810744 	movi	r2,1053
   8d0f4:	11800c16 	blt	r2,r6,8d128 <__fixdfsi+0x58>
   8d0f8:	00810cc4 	movi	r2,1075
   8d0fc:	1185c83a 	sub	r2,r2,r6
   8d100:	01c007c4 	movi	r7,31
   8d104:	18c00434 	orhi	r3,r3,16
   8d108:	38800d16 	blt	r7,r2,8d140 <__fixdfsi+0x70>
   8d10c:	31befb44 	addi	r6,r6,-1043
   8d110:	2084d83a 	srl	r2,r4,r2
   8d114:	1986983a 	sll	r3,r3,r6
   8d118:	1884b03a 	or	r2,r3,r2
   8d11c:	28000726 	beq	r5,zero,8d13c <__fixdfsi+0x6c>
   8d120:	0085c83a 	sub	r2,zero,r2
   8d124:	f800283a 	ret
   8d128:	00a00034 	movhi	r2,32768
   8d12c:	10bfffc4 	addi	r2,r2,-1
   8d130:	2885883a 	add	r2,r5,r2
   8d134:	f800283a 	ret
   8d138:	0005883a 	mov	r2,zero
   8d13c:	f800283a 	ret
   8d140:	008104c4 	movi	r2,1043
   8d144:	1185c83a 	sub	r2,r2,r6
   8d148:	1884d83a 	srl	r2,r3,r2
   8d14c:	003ff306 	br	8d11c <__fixdfsi+0x4c>

0008d150 <__floatsidf>:
   8d150:	defffd04 	addi	sp,sp,-12
   8d154:	dfc00215 	stw	ra,8(sp)
   8d158:	dc400115 	stw	r17,4(sp)
   8d15c:	dc000015 	stw	r16,0(sp)
   8d160:	20002b26 	beq	r4,zero,8d210 <__floatsidf+0xc0>
   8d164:	2023883a 	mov	r17,r4
   8d168:	2020d7fa 	srli	r16,r4,31
   8d16c:	20002d16 	blt	r4,zero,8d224 <__floatsidf+0xd4>
   8d170:	8809883a 	mov	r4,r17
   8d174:	008d2d40 	call	8d2d4 <__clzsi2>
   8d178:	01410784 	movi	r5,1054
   8d17c:	288bc83a 	sub	r5,r5,r2
   8d180:	01010cc4 	movi	r4,1075
   8d184:	2149c83a 	sub	r4,r4,r5
   8d188:	00c007c4 	movi	r3,31
   8d18c:	1900160e 	bge	r3,r4,8d1e8 <__floatsidf+0x98>
   8d190:	00c104c4 	movi	r3,1043
   8d194:	1947c83a 	sub	r3,r3,r5
   8d198:	88c6983a 	sll	r3,r17,r3
   8d19c:	00800434 	movhi	r2,16
   8d1a0:	10bfffc4 	addi	r2,r2,-1
   8d1a4:	1886703a 	and	r3,r3,r2
   8d1a8:	2941ffcc 	andi	r5,r5,2047
   8d1ac:	800d883a 	mov	r6,r16
   8d1b0:	0005883a 	mov	r2,zero
   8d1b4:	280a953a 	slli	r5,r5,20
   8d1b8:	31803fcc 	andi	r6,r6,255
   8d1bc:	01000434 	movhi	r4,16
   8d1c0:	300c97fa 	slli	r6,r6,31
   8d1c4:	213fffc4 	addi	r4,r4,-1
   8d1c8:	1906703a 	and	r3,r3,r4
   8d1cc:	1946b03a 	or	r3,r3,r5
   8d1d0:	1986b03a 	or	r3,r3,r6
   8d1d4:	dfc00217 	ldw	ra,8(sp)
   8d1d8:	dc400117 	ldw	r17,4(sp)
   8d1dc:	dc000017 	ldw	r16,0(sp)
   8d1e0:	dec00304 	addi	sp,sp,12
   8d1e4:	f800283a 	ret
   8d1e8:	00c002c4 	movi	r3,11
   8d1ec:	1887c83a 	sub	r3,r3,r2
   8d1f0:	88c6d83a 	srl	r3,r17,r3
   8d1f4:	8904983a 	sll	r2,r17,r4
   8d1f8:	01000434 	movhi	r4,16
   8d1fc:	213fffc4 	addi	r4,r4,-1
   8d200:	2941ffcc 	andi	r5,r5,2047
   8d204:	1906703a 	and	r3,r3,r4
   8d208:	800d883a 	mov	r6,r16
   8d20c:	003fe906 	br	8d1b4 <__floatsidf+0x64>
   8d210:	000d883a 	mov	r6,zero
   8d214:	000b883a 	mov	r5,zero
   8d218:	0007883a 	mov	r3,zero
   8d21c:	0005883a 	mov	r2,zero
   8d220:	003fe406 	br	8d1b4 <__floatsidf+0x64>
   8d224:	0123c83a 	sub	r17,zero,r4
   8d228:	003fd106 	br	8d170 <__floatsidf+0x20>

0008d22c <__floatunsidf>:
   8d22c:	defffe04 	addi	sp,sp,-8
   8d230:	dc000015 	stw	r16,0(sp)
   8d234:	dfc00115 	stw	ra,4(sp)
   8d238:	2021883a 	mov	r16,r4
   8d23c:	20002226 	beq	r4,zero,8d2c8 <__floatunsidf+0x9c>
   8d240:	008d2d40 	call	8d2d4 <__clzsi2>
   8d244:	01010784 	movi	r4,1054
   8d248:	2089c83a 	sub	r4,r4,r2
   8d24c:	01810cc4 	movi	r6,1075
   8d250:	310dc83a 	sub	r6,r6,r4
   8d254:	00c007c4 	movi	r3,31
   8d258:	1980120e 	bge	r3,r6,8d2a4 <__floatunsidf+0x78>
   8d25c:	00c104c4 	movi	r3,1043
   8d260:	1907c83a 	sub	r3,r3,r4
   8d264:	80ca983a 	sll	r5,r16,r3
   8d268:	00800434 	movhi	r2,16
   8d26c:	10bfffc4 	addi	r2,r2,-1
   8d270:	2101ffcc 	andi	r4,r4,2047
   8d274:	0021883a 	mov	r16,zero
   8d278:	288a703a 	and	r5,r5,r2
   8d27c:	2008953a 	slli	r4,r4,20
   8d280:	00c00434 	movhi	r3,16
   8d284:	18ffffc4 	addi	r3,r3,-1
   8d288:	28c6703a 	and	r3,r5,r3
   8d28c:	8005883a 	mov	r2,r16
   8d290:	1906b03a 	or	r3,r3,r4
   8d294:	dfc00117 	ldw	ra,4(sp)
   8d298:	dc000017 	ldw	r16,0(sp)
   8d29c:	dec00204 	addi	sp,sp,8
   8d2a0:	f800283a 	ret
   8d2a4:	00c002c4 	movi	r3,11
   8d2a8:	188bc83a 	sub	r5,r3,r2
   8d2ac:	814ad83a 	srl	r5,r16,r5
   8d2b0:	00c00434 	movhi	r3,16
   8d2b4:	18ffffc4 	addi	r3,r3,-1
   8d2b8:	81a0983a 	sll	r16,r16,r6
   8d2bc:	2101ffcc 	andi	r4,r4,2047
   8d2c0:	28ca703a 	and	r5,r5,r3
   8d2c4:	003fed06 	br	8d27c <__floatunsidf+0x50>
   8d2c8:	0009883a 	mov	r4,zero
   8d2cc:	000b883a 	mov	r5,zero
   8d2d0:	003fea06 	br	8d27c <__floatunsidf+0x50>

0008d2d4 <__clzsi2>:
   8d2d4:	00bfffd4 	movui	r2,65535
   8d2d8:	11000536 	bltu	r2,r4,8d2f0 <__clzsi2+0x1c>
   8d2dc:	00803fc4 	movi	r2,255
   8d2e0:	11000f36 	bltu	r2,r4,8d320 <__clzsi2+0x4c>
   8d2e4:	00800804 	movi	r2,32
   8d2e8:	0007883a 	mov	r3,zero
   8d2ec:	00000506 	br	8d304 <__clzsi2+0x30>
   8d2f0:	00804034 	movhi	r2,256
   8d2f4:	10bfffc4 	addi	r2,r2,-1
   8d2f8:	11000c2e 	bgeu	r2,r4,8d32c <__clzsi2+0x58>
   8d2fc:	00800204 	movi	r2,8
   8d300:	00c00604 	movi	r3,24
   8d304:	20c8d83a 	srl	r4,r4,r3
   8d308:	00c00134 	movhi	r3,4
   8d30c:	18c07f04 	addi	r3,r3,508
   8d310:	1909883a 	add	r4,r3,r4
   8d314:	20c00003 	ldbu	r3,0(r4)
   8d318:	10c5c83a 	sub	r2,r2,r3
   8d31c:	f800283a 	ret
   8d320:	00800604 	movi	r2,24
   8d324:	00c00204 	movi	r3,8
   8d328:	003ff606 	br	8d304 <__clzsi2+0x30>
   8d32c:	00800404 	movi	r2,16
   8d330:	1007883a 	mov	r3,r2
   8d334:	003ff306 	br	8d304 <__clzsi2+0x30>

0008d338 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d338:	defffe04 	addi	sp,sp,-8
   8d33c:	dfc00115 	stw	ra,4(sp)
   8d340:	df000015 	stw	fp,0(sp)
   8d344:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d348:	d0a00c17 	ldw	r2,-32720(gp)
   8d34c:	10000326 	beq	r2,zero,8d35c <alt_get_errno+0x24>
   8d350:	d0a00c17 	ldw	r2,-32720(gp)
   8d354:	103ee83a 	callr	r2
   8d358:	00000106 	br	8d360 <alt_get_errno+0x28>
   8d35c:	d0a01704 	addi	r2,gp,-32676
}
   8d360:	e037883a 	mov	sp,fp
   8d364:	dfc00117 	ldw	ra,4(sp)
   8d368:	df000017 	ldw	fp,0(sp)
   8d36c:	dec00204 	addi	sp,sp,8
   8d370:	f800283a 	ret

0008d374 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   8d374:	defffb04 	addi	sp,sp,-20
   8d378:	dfc00415 	stw	ra,16(sp)
   8d37c:	df000315 	stw	fp,12(sp)
   8d380:	df000304 	addi	fp,sp,12
   8d384:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   8d388:	e0bfff17 	ldw	r2,-4(fp)
   8d38c:	10000816 	blt	r2,zero,8d3b0 <close+0x3c>
   8d390:	01400304 	movi	r5,12
   8d394:	e13fff17 	ldw	r4,-4(fp)
   8d398:	008aa6c0 	call	8aa6c <__mulsi3>
   8d39c:	1007883a 	mov	r3,r2
   8d3a0:	00800134 	movhi	r2,4
   8d3a4:	1082ff04 	addi	r2,r2,3068
   8d3a8:	1885883a 	add	r2,r3,r2
   8d3ac:	00000106 	br	8d3b4 <close+0x40>
   8d3b0:	0005883a 	mov	r2,zero
   8d3b4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   8d3b8:	e0bffd17 	ldw	r2,-12(fp)
   8d3bc:	10001926 	beq	r2,zero,8d424 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   8d3c0:	e0bffd17 	ldw	r2,-12(fp)
   8d3c4:	10800017 	ldw	r2,0(r2)
   8d3c8:	10800417 	ldw	r2,16(r2)
   8d3cc:	10000626 	beq	r2,zero,8d3e8 <close+0x74>
   8d3d0:	e0bffd17 	ldw	r2,-12(fp)
   8d3d4:	10800017 	ldw	r2,0(r2)
   8d3d8:	10800417 	ldw	r2,16(r2)
   8d3dc:	e13ffd17 	ldw	r4,-12(fp)
   8d3e0:	103ee83a 	callr	r2
   8d3e4:	00000106 	br	8d3ec <close+0x78>
   8d3e8:	0005883a 	mov	r2,zero
   8d3ec:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   8d3f0:	e13fff17 	ldw	r4,-4(fp)
   8d3f4:	008da5c0 	call	8da5c <alt_release_fd>
    if (rval < 0)
   8d3f8:	e0bffe17 	ldw	r2,-8(fp)
   8d3fc:	1000070e 	bge	r2,zero,8d41c <close+0xa8>
    {
      ALT_ERRNO = -rval;
   8d400:	008d3380 	call	8d338 <alt_get_errno>
   8d404:	1007883a 	mov	r3,r2
   8d408:	e0bffe17 	ldw	r2,-8(fp)
   8d40c:	0085c83a 	sub	r2,zero,r2
   8d410:	18800015 	stw	r2,0(r3)
      return -1;
   8d414:	00bfffc4 	movi	r2,-1
   8d418:	00000706 	br	8d438 <close+0xc4>
    }
    return 0;
   8d41c:	0005883a 	mov	r2,zero
   8d420:	00000506 	br	8d438 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8d424:	008d3380 	call	8d338 <alt_get_errno>
   8d428:	1007883a 	mov	r3,r2
   8d42c:	00801444 	movi	r2,81
   8d430:	18800015 	stw	r2,0(r3)
    return -1;
   8d434:	00bfffc4 	movi	r2,-1
  }
}
   8d438:	e037883a 	mov	sp,fp
   8d43c:	dfc00117 	ldw	ra,4(sp)
   8d440:	df000017 	ldw	fp,0(sp)
   8d444:	dec00204 	addi	sp,sp,8
   8d448:	f800283a 	ret

0008d44c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   8d44c:	defffc04 	addi	sp,sp,-16
   8d450:	df000315 	stw	fp,12(sp)
   8d454:	df000304 	addi	fp,sp,12
   8d458:	e13ffd15 	stw	r4,-12(fp)
   8d45c:	e17ffe15 	stw	r5,-8(fp)
   8d460:	e1bfff15 	stw	r6,-4(fp)
  return len;
   8d464:	e0bfff17 	ldw	r2,-4(fp)
}
   8d468:	e037883a 	mov	sp,fp
   8d46c:	df000017 	ldw	fp,0(sp)
   8d470:	dec00104 	addi	sp,sp,4
   8d474:	f800283a 	ret

0008d478 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d478:	defffe04 	addi	sp,sp,-8
   8d47c:	dfc00115 	stw	ra,4(sp)
   8d480:	df000015 	stw	fp,0(sp)
   8d484:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d488:	d0a00c17 	ldw	r2,-32720(gp)
   8d48c:	10000326 	beq	r2,zero,8d49c <alt_get_errno+0x24>
   8d490:	d0a00c17 	ldw	r2,-32720(gp)
   8d494:	103ee83a 	callr	r2
   8d498:	00000106 	br	8d4a0 <alt_get_errno+0x28>
   8d49c:	d0a01704 	addi	r2,gp,-32676
}
   8d4a0:	e037883a 	mov	sp,fp
   8d4a4:	dfc00117 	ldw	ra,4(sp)
   8d4a8:	df000017 	ldw	fp,0(sp)
   8d4ac:	dec00204 	addi	sp,sp,8
   8d4b0:	f800283a 	ret

0008d4b4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   8d4b4:	defffb04 	addi	sp,sp,-20
   8d4b8:	dfc00415 	stw	ra,16(sp)
   8d4bc:	df000315 	stw	fp,12(sp)
   8d4c0:	df000304 	addi	fp,sp,12
   8d4c4:	e13ffe15 	stw	r4,-8(fp)
   8d4c8:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d4cc:	e0bffe17 	ldw	r2,-8(fp)
   8d4d0:	10000816 	blt	r2,zero,8d4f4 <fstat+0x40>
   8d4d4:	01400304 	movi	r5,12
   8d4d8:	e13ffe17 	ldw	r4,-8(fp)
   8d4dc:	008aa6c0 	call	8aa6c <__mulsi3>
   8d4e0:	1007883a 	mov	r3,r2
   8d4e4:	00800134 	movhi	r2,4
   8d4e8:	1082ff04 	addi	r2,r2,3068
   8d4ec:	1885883a 	add	r2,r3,r2
   8d4f0:	00000106 	br	8d4f8 <fstat+0x44>
   8d4f4:	0005883a 	mov	r2,zero
   8d4f8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   8d4fc:	e0bffd17 	ldw	r2,-12(fp)
   8d500:	10001026 	beq	r2,zero,8d544 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   8d504:	e0bffd17 	ldw	r2,-12(fp)
   8d508:	10800017 	ldw	r2,0(r2)
   8d50c:	10800817 	ldw	r2,32(r2)
   8d510:	10000726 	beq	r2,zero,8d530 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
   8d514:	e0bffd17 	ldw	r2,-12(fp)
   8d518:	10800017 	ldw	r2,0(r2)
   8d51c:	10800817 	ldw	r2,32(r2)
   8d520:	e17fff17 	ldw	r5,-4(fp)
   8d524:	e13ffd17 	ldw	r4,-12(fp)
   8d528:	103ee83a 	callr	r2
   8d52c:	00000a06 	br	8d558 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   8d530:	e0bfff17 	ldw	r2,-4(fp)
   8d534:	00c80004 	movi	r3,8192
   8d538:	10c00115 	stw	r3,4(r2)
      return 0;
   8d53c:	0005883a 	mov	r2,zero
   8d540:	00000506 	br	8d558 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8d544:	008d4780 	call	8d478 <alt_get_errno>
   8d548:	1007883a 	mov	r3,r2
   8d54c:	00801444 	movi	r2,81
   8d550:	18800015 	stw	r2,0(r3)
    return -1;
   8d554:	00bfffc4 	movi	r2,-1
  }
}
   8d558:	e037883a 	mov	sp,fp
   8d55c:	dfc00117 	ldw	ra,4(sp)
   8d560:	df000017 	ldw	fp,0(sp)
   8d564:	dec00204 	addi	sp,sp,8
   8d568:	f800283a 	ret

0008d56c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d56c:	defffe04 	addi	sp,sp,-8
   8d570:	dfc00115 	stw	ra,4(sp)
   8d574:	df000015 	stw	fp,0(sp)
   8d578:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d57c:	d0a00c17 	ldw	r2,-32720(gp)
   8d580:	10000326 	beq	r2,zero,8d590 <alt_get_errno+0x24>
   8d584:	d0a00c17 	ldw	r2,-32720(gp)
   8d588:	103ee83a 	callr	r2
   8d58c:	00000106 	br	8d594 <alt_get_errno+0x28>
   8d590:	d0a01704 	addi	r2,gp,-32676
}
   8d594:	e037883a 	mov	sp,fp
   8d598:	dfc00117 	ldw	ra,4(sp)
   8d59c:	df000017 	ldw	fp,0(sp)
   8d5a0:	dec00204 	addi	sp,sp,8
   8d5a4:	f800283a 	ret

0008d5a8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   8d5a8:	deffed04 	addi	sp,sp,-76
   8d5ac:	dfc01215 	stw	ra,72(sp)
   8d5b0:	df001115 	stw	fp,68(sp)
   8d5b4:	df001104 	addi	fp,sp,68
   8d5b8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d5bc:	e0bfff17 	ldw	r2,-4(fp)
   8d5c0:	10000816 	blt	r2,zero,8d5e4 <isatty+0x3c>
   8d5c4:	01400304 	movi	r5,12
   8d5c8:	e13fff17 	ldw	r4,-4(fp)
   8d5cc:	008aa6c0 	call	8aa6c <__mulsi3>
   8d5d0:	1007883a 	mov	r3,r2
   8d5d4:	00800134 	movhi	r2,4
   8d5d8:	1082ff04 	addi	r2,r2,3068
   8d5dc:	1885883a 	add	r2,r3,r2
   8d5e0:	00000106 	br	8d5e8 <isatty+0x40>
   8d5e4:	0005883a 	mov	r2,zero
   8d5e8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   8d5ec:	e0bfef17 	ldw	r2,-68(fp)
   8d5f0:	10000e26 	beq	r2,zero,8d62c <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   8d5f4:	e0bfef17 	ldw	r2,-68(fp)
   8d5f8:	10800017 	ldw	r2,0(r2)
   8d5fc:	10800817 	ldw	r2,32(r2)
   8d600:	1000021e 	bne	r2,zero,8d60c <isatty+0x64>
    {
      return 1;
   8d604:	00800044 	movi	r2,1
   8d608:	00000d06 	br	8d640 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   8d60c:	e0bff004 	addi	r2,fp,-64
   8d610:	100b883a 	mov	r5,r2
   8d614:	e13fff17 	ldw	r4,-4(fp)
   8d618:	008d4b40 	call	8d4b4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   8d61c:	e0bff117 	ldw	r2,-60(fp)
   8d620:	10880020 	cmpeqi	r2,r2,8192
   8d624:	10803fcc 	andi	r2,r2,255
   8d628:	00000506 	br	8d640 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8d62c:	008d56c0 	call	8d56c <alt_get_errno>
   8d630:	1007883a 	mov	r3,r2
   8d634:	00801444 	movi	r2,81
   8d638:	18800015 	stw	r2,0(r3)
    return 0;
   8d63c:	0005883a 	mov	r2,zero
  }
}
   8d640:	e037883a 	mov	sp,fp
   8d644:	dfc00117 	ldw	ra,4(sp)
   8d648:	df000017 	ldw	fp,0(sp)
   8d64c:	dec00204 	addi	sp,sp,8
   8d650:	f800283a 	ret

0008d654 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   8d654:	defffc04 	addi	sp,sp,-16
   8d658:	df000315 	stw	fp,12(sp)
   8d65c:	df000304 	addi	fp,sp,12
   8d660:	e13ffd15 	stw	r4,-12(fp)
   8d664:	e17ffe15 	stw	r5,-8(fp)
   8d668:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   8d66c:	e0fffe17 	ldw	r3,-8(fp)
   8d670:	e0bffd17 	ldw	r2,-12(fp)
   8d674:	18800c26 	beq	r3,r2,8d6a8 <alt_load_section+0x54>
  {
    while( to != end )
   8d678:	00000806 	br	8d69c <alt_load_section+0x48>
    {
      *to++ = *from++;
   8d67c:	e0bffe17 	ldw	r2,-8(fp)
   8d680:	10c00104 	addi	r3,r2,4
   8d684:	e0fffe15 	stw	r3,-8(fp)
   8d688:	e0fffd17 	ldw	r3,-12(fp)
   8d68c:	19000104 	addi	r4,r3,4
   8d690:	e13ffd15 	stw	r4,-12(fp)
   8d694:	18c00017 	ldw	r3,0(r3)
   8d698:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   8d69c:	e0fffe17 	ldw	r3,-8(fp)
   8d6a0:	e0bfff17 	ldw	r2,-4(fp)
   8d6a4:	18bff51e 	bne	r3,r2,8d67c <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
   8d6a8:	0001883a 	nop
   8d6ac:	e037883a 	mov	sp,fp
   8d6b0:	df000017 	ldw	fp,0(sp)
   8d6b4:	dec00104 	addi	sp,sp,4
   8d6b8:	f800283a 	ret

0008d6bc <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   8d6bc:	defffe04 	addi	sp,sp,-8
   8d6c0:	dfc00115 	stw	ra,4(sp)
   8d6c4:	df000015 	stw	fp,0(sp)
   8d6c8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   8d6cc:	01800134 	movhi	r6,4
   8d6d0:	31878804 	addi	r6,r6,7712
   8d6d4:	01400134 	movhi	r5,4
   8d6d8:	2940cc04 	addi	r5,r5,816
   8d6dc:	01000274 	movhi	r4,9
   8d6e0:	213fe404 	addi	r4,r4,-112
   8d6e4:	008d6540 	call	8d654 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   8d6e8:	01800234 	movhi	r6,8
   8d6ec:	31808c04 	addi	r6,r6,560
   8d6f0:	01400234 	movhi	r5,8
   8d6f4:	29400804 	addi	r5,r5,32
   8d6f8:	01000234 	movhi	r4,8
   8d6fc:	21000804 	addi	r4,r4,32
   8d700:	008d6540 	call	8d654 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   8d704:	01800134 	movhi	r6,4
   8d708:	3180cc04 	addi	r6,r6,816
   8d70c:	01400134 	movhi	r5,4
   8d710:	29400004 	addi	r5,r5,0
   8d714:	01000274 	movhi	r4,9
   8d718:	213f1804 	addi	r4,r4,-928
   8d71c:	008d6540 	call	8d654 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   8d720:	008eba80 	call	8eba8 <alt_dcache_flush_all>
  alt_icache_flush_all();
   8d724:	008ed680 	call	8ed68 <alt_icache_flush_all>
}
   8d728:	0001883a 	nop
   8d72c:	e037883a 	mov	sp,fp
   8d730:	dfc00117 	ldw	ra,4(sp)
   8d734:	df000017 	ldw	fp,0(sp)
   8d738:	dec00204 	addi	sp,sp,8
   8d73c:	f800283a 	ret

0008d740 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d740:	defffe04 	addi	sp,sp,-8
   8d744:	dfc00115 	stw	ra,4(sp)
   8d748:	df000015 	stw	fp,0(sp)
   8d74c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d750:	d0a00c17 	ldw	r2,-32720(gp)
   8d754:	10000326 	beq	r2,zero,8d764 <alt_get_errno+0x24>
   8d758:	d0a00c17 	ldw	r2,-32720(gp)
   8d75c:	103ee83a 	callr	r2
   8d760:	00000106 	br	8d768 <alt_get_errno+0x28>
   8d764:	d0a01704 	addi	r2,gp,-32676
}
   8d768:	e037883a 	mov	sp,fp
   8d76c:	dfc00117 	ldw	ra,4(sp)
   8d770:	df000017 	ldw	fp,0(sp)
   8d774:	dec00204 	addi	sp,sp,8
   8d778:	f800283a 	ret

0008d77c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   8d77c:	defff904 	addi	sp,sp,-28
   8d780:	dfc00615 	stw	ra,24(sp)
   8d784:	df000515 	stw	fp,20(sp)
   8d788:	df000504 	addi	fp,sp,20
   8d78c:	e13ffd15 	stw	r4,-12(fp)
   8d790:	e17ffe15 	stw	r5,-8(fp)
   8d794:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   8d798:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d79c:	e0bffd17 	ldw	r2,-12(fp)
   8d7a0:	10000816 	blt	r2,zero,8d7c4 <lseek+0x48>
   8d7a4:	01400304 	movi	r5,12
   8d7a8:	e13ffd17 	ldw	r4,-12(fp)
   8d7ac:	008aa6c0 	call	8aa6c <__mulsi3>
   8d7b0:	1007883a 	mov	r3,r2
   8d7b4:	00800134 	movhi	r2,4
   8d7b8:	1082ff04 	addi	r2,r2,3068
   8d7bc:	1885883a 	add	r2,r3,r2
   8d7c0:	00000106 	br	8d7c8 <lseek+0x4c>
   8d7c4:	0005883a 	mov	r2,zero
   8d7c8:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   8d7cc:	e0bffc17 	ldw	r2,-16(fp)
   8d7d0:	10001026 	beq	r2,zero,8d814 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   8d7d4:	e0bffc17 	ldw	r2,-16(fp)
   8d7d8:	10800017 	ldw	r2,0(r2)
   8d7dc:	10800717 	ldw	r2,28(r2)
   8d7e0:	10000926 	beq	r2,zero,8d808 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   8d7e4:	e0bffc17 	ldw	r2,-16(fp)
   8d7e8:	10800017 	ldw	r2,0(r2)
   8d7ec:	10800717 	ldw	r2,28(r2)
   8d7f0:	e1bfff17 	ldw	r6,-4(fp)
   8d7f4:	e17ffe17 	ldw	r5,-8(fp)
   8d7f8:	e13ffc17 	ldw	r4,-16(fp)
   8d7fc:	103ee83a 	callr	r2
   8d800:	e0bffb15 	stw	r2,-20(fp)
   8d804:	00000506 	br	8d81c <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   8d808:	00bfde84 	movi	r2,-134
   8d80c:	e0bffb15 	stw	r2,-20(fp)
   8d810:	00000206 	br	8d81c <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
   8d814:	00bfebc4 	movi	r2,-81
   8d818:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   8d81c:	e0bffb17 	ldw	r2,-20(fp)
   8d820:	1000070e 	bge	r2,zero,8d840 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
   8d824:	008d7400 	call	8d740 <alt_get_errno>
   8d828:	1007883a 	mov	r3,r2
   8d82c:	e0bffb17 	ldw	r2,-20(fp)
   8d830:	0085c83a 	sub	r2,zero,r2
   8d834:	18800015 	stw	r2,0(r3)
    rc = -1;
   8d838:	00bfffc4 	movi	r2,-1
   8d83c:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   8d840:	e0bffb17 	ldw	r2,-20(fp)
}
   8d844:	e037883a 	mov	sp,fp
   8d848:	dfc00117 	ldw	ra,4(sp)
   8d84c:	df000017 	ldw	fp,0(sp)
   8d850:	dec00204 	addi	sp,sp,8
   8d854:	f800283a 	ret

0008d858 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   8d858:	defffd04 	addi	sp,sp,-12
   8d85c:	dfc00215 	stw	ra,8(sp)
   8d860:	df000115 	stw	fp,4(sp)
   8d864:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   8d868:	0009883a 	mov	r4,zero
   8d86c:	008dd300 	call	8dd30 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   8d870:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   8d874:	008dd680 	call	8dd68 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   8d878:	01800134 	movhi	r6,4
   8d87c:	3180c204 	addi	r6,r6,776
   8d880:	01400134 	movhi	r5,4
   8d884:	2940c204 	addi	r5,r5,776
   8d888:	01000134 	movhi	r4,4
   8d88c:	2100c204 	addi	r4,r4,776
   8d890:	008f10c0 	call	8f10c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   8d894:	008eca80 	call	8eca8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   8d898:	01000274 	movhi	r4,9
   8d89c:	213b4204 	addi	r4,r4,-4856
   8d8a0:	008f8cc0 	call	8f8cc <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   8d8a4:	d0a01817 	ldw	r2,-32672(gp)
   8d8a8:	d0e01917 	ldw	r3,-32668(gp)
   8d8ac:	d1201a17 	ldw	r4,-32664(gp)
   8d8b0:	200d883a 	mov	r6,r4
   8d8b4:	180b883a 	mov	r5,r3
   8d8b8:	1009883a 	mov	r4,r2
   8d8bc:	00803940 	call	80394 <main>
   8d8c0:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   8d8c4:	01000044 	movi	r4,1
   8d8c8:	008d3740 	call	8d374 <close>
  exit (result);
   8d8cc:	e13fff17 	ldw	r4,-4(fp)
   8d8d0:	008f8e00 	call	8f8e0 <exit>

0008d8d4 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   8d8d4:	defffe04 	addi	sp,sp,-8
   8d8d8:	df000115 	stw	fp,4(sp)
   8d8dc:	df000104 	addi	fp,sp,4
   8d8e0:	e13fff15 	stw	r4,-4(fp)
}
   8d8e4:	0001883a 	nop
   8d8e8:	e037883a 	mov	sp,fp
   8d8ec:	df000017 	ldw	fp,0(sp)
   8d8f0:	dec00104 	addi	sp,sp,4
   8d8f4:	f800283a 	ret

0008d8f8 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   8d8f8:	defffe04 	addi	sp,sp,-8
   8d8fc:	df000115 	stw	fp,4(sp)
   8d900:	df000104 	addi	fp,sp,4
   8d904:	e13fff15 	stw	r4,-4(fp)
}
   8d908:	0001883a 	nop
   8d90c:	e037883a 	mov	sp,fp
   8d910:	df000017 	ldw	fp,0(sp)
   8d914:	dec00104 	addi	sp,sp,4
   8d918:	f800283a 	ret

0008d91c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d91c:	defffe04 	addi	sp,sp,-8
   8d920:	dfc00115 	stw	ra,4(sp)
   8d924:	df000015 	stw	fp,0(sp)
   8d928:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d92c:	d0a00c17 	ldw	r2,-32720(gp)
   8d930:	10000326 	beq	r2,zero,8d940 <alt_get_errno+0x24>
   8d934:	d0a00c17 	ldw	r2,-32720(gp)
   8d938:	103ee83a 	callr	r2
   8d93c:	00000106 	br	8d944 <alt_get_errno+0x28>
   8d940:	d0a01704 	addi	r2,gp,-32676
}
   8d944:	e037883a 	mov	sp,fp
   8d948:	dfc00117 	ldw	ra,4(sp)
   8d94c:	df000017 	ldw	fp,0(sp)
   8d950:	dec00204 	addi	sp,sp,8
   8d954:	f800283a 	ret

0008d958 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   8d958:	defff904 	addi	sp,sp,-28
   8d95c:	dfc00615 	stw	ra,24(sp)
   8d960:	df000515 	stw	fp,20(sp)
   8d964:	df000504 	addi	fp,sp,20
   8d968:	e13ffd15 	stw	r4,-12(fp)
   8d96c:	e17ffe15 	stw	r5,-8(fp)
   8d970:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d974:	e0bffd17 	ldw	r2,-12(fp)
   8d978:	10000816 	blt	r2,zero,8d99c <read+0x44>
   8d97c:	01400304 	movi	r5,12
   8d980:	e13ffd17 	ldw	r4,-12(fp)
   8d984:	008aa6c0 	call	8aa6c <__mulsi3>
   8d988:	1007883a 	mov	r3,r2
   8d98c:	00800134 	movhi	r2,4
   8d990:	1082ff04 	addi	r2,r2,3068
   8d994:	1885883a 	add	r2,r3,r2
   8d998:	00000106 	br	8d9a0 <read+0x48>
   8d99c:	0005883a 	mov	r2,zero
   8d9a0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   8d9a4:	e0bffb17 	ldw	r2,-20(fp)
   8d9a8:	10002226 	beq	r2,zero,8da34 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   8d9ac:	e0bffb17 	ldw	r2,-20(fp)
   8d9b0:	10800217 	ldw	r2,8(r2)
   8d9b4:	108000cc 	andi	r2,r2,3
   8d9b8:	10800060 	cmpeqi	r2,r2,1
   8d9bc:	1000181e 	bne	r2,zero,8da20 <read+0xc8>
        (fd->dev->read))
   8d9c0:	e0bffb17 	ldw	r2,-20(fp)
   8d9c4:	10800017 	ldw	r2,0(r2)
   8d9c8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   8d9cc:	10001426 	beq	r2,zero,8da20 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   8d9d0:	e0bffb17 	ldw	r2,-20(fp)
   8d9d4:	10800017 	ldw	r2,0(r2)
   8d9d8:	10800517 	ldw	r2,20(r2)
   8d9dc:	e0ffff17 	ldw	r3,-4(fp)
   8d9e0:	180d883a 	mov	r6,r3
   8d9e4:	e17ffe17 	ldw	r5,-8(fp)
   8d9e8:	e13ffb17 	ldw	r4,-20(fp)
   8d9ec:	103ee83a 	callr	r2
   8d9f0:	e0bffc15 	stw	r2,-16(fp)
   8d9f4:	e0bffc17 	ldw	r2,-16(fp)
   8d9f8:	1000070e 	bge	r2,zero,8da18 <read+0xc0>
        {
          ALT_ERRNO = -rval;
   8d9fc:	008d91c0 	call	8d91c <alt_get_errno>
   8da00:	1007883a 	mov	r3,r2
   8da04:	e0bffc17 	ldw	r2,-16(fp)
   8da08:	0085c83a 	sub	r2,zero,r2
   8da0c:	18800015 	stw	r2,0(r3)
          return -1;
   8da10:	00bfffc4 	movi	r2,-1
   8da14:	00000c06 	br	8da48 <read+0xf0>
        }
        return rval;
   8da18:	e0bffc17 	ldw	r2,-16(fp)
   8da1c:	00000a06 	br	8da48 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
   8da20:	008d91c0 	call	8d91c <alt_get_errno>
   8da24:	1007883a 	mov	r3,r2
   8da28:	00800344 	movi	r2,13
   8da2c:	18800015 	stw	r2,0(r3)
   8da30:	00000406 	br	8da44 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   8da34:	008d91c0 	call	8d91c <alt_get_errno>
   8da38:	1007883a 	mov	r3,r2
   8da3c:	00801444 	movi	r2,81
   8da40:	18800015 	stw	r2,0(r3)
  }
  return -1;
   8da44:	00bfffc4 	movi	r2,-1
}
   8da48:	e037883a 	mov	sp,fp
   8da4c:	dfc00117 	ldw	ra,4(sp)
   8da50:	df000017 	ldw	fp,0(sp)
   8da54:	dec00204 	addi	sp,sp,8
   8da58:	f800283a 	ret

0008da5c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   8da5c:	defffc04 	addi	sp,sp,-16
   8da60:	dfc00315 	stw	ra,12(sp)
   8da64:	df000215 	stw	fp,8(sp)
   8da68:	dc000115 	stw	r16,4(sp)
   8da6c:	df000204 	addi	fp,sp,8
   8da70:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
   8da74:	e0bffe17 	ldw	r2,-8(fp)
   8da78:	108000d0 	cmplti	r2,r2,3
   8da7c:	1000111e 	bne	r2,zero,8dac4 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
   8da80:	04000134 	movhi	r16,4
   8da84:	8402ff04 	addi	r16,r16,3068
   8da88:	e0bffe17 	ldw	r2,-8(fp)
   8da8c:	01400304 	movi	r5,12
   8da90:	1009883a 	mov	r4,r2
   8da94:	008aa6c0 	call	8aa6c <__mulsi3>
   8da98:	8085883a 	add	r2,r16,r2
   8da9c:	10800204 	addi	r2,r2,8
   8daa0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   8daa4:	04000134 	movhi	r16,4
   8daa8:	8402ff04 	addi	r16,r16,3068
   8daac:	e0bffe17 	ldw	r2,-8(fp)
   8dab0:	01400304 	movi	r5,12
   8dab4:	1009883a 	mov	r4,r2
   8dab8:	008aa6c0 	call	8aa6c <__mulsi3>
   8dabc:	8085883a 	add	r2,r16,r2
   8dac0:	10000015 	stw	zero,0(r2)
  }
}
   8dac4:	0001883a 	nop
   8dac8:	e6ffff04 	addi	sp,fp,-4
   8dacc:	dfc00217 	ldw	ra,8(sp)
   8dad0:	df000117 	ldw	fp,4(sp)
   8dad4:	dc000017 	ldw	r16,0(sp)
   8dad8:	dec00304 	addi	sp,sp,12
   8dadc:	f800283a 	ret

0008dae0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   8dae0:	defff904 	addi	sp,sp,-28
   8dae4:	df000615 	stw	fp,24(sp)
   8dae8:	df000604 	addi	fp,sp,24
   8daec:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8daf0:	0005303a 	rdctl	r2,status
   8daf4:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8daf8:	e0fffe17 	ldw	r3,-8(fp)
   8dafc:	00bfff84 	movi	r2,-2
   8db00:	1884703a 	and	r2,r3,r2
   8db04:	1001703a 	wrctl	status,r2
  
  return context;
   8db08:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   8db0c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   8db10:	d0a00d17 	ldw	r2,-32716(gp)
   8db14:	10c000c4 	addi	r3,r2,3
   8db18:	00bfff04 	movi	r2,-4
   8db1c:	1884703a 	and	r2,r3,r2
   8db20:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   8db24:	d0e00d17 	ldw	r3,-32716(gp)
   8db28:	e0bfff17 	ldw	r2,-4(fp)
   8db2c:	1887883a 	add	r3,r3,r2
   8db30:	008001f4 	movhi	r2,7
   8db34:	10a00004 	addi	r2,r2,-32768
   8db38:	10c0062e 	bgeu	r2,r3,8db54 <sbrk+0x74>
   8db3c:	e0bffb17 	ldw	r2,-20(fp)
   8db40:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8db44:	e0bffa17 	ldw	r2,-24(fp)
   8db48:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   8db4c:	00bfffc4 	movi	r2,-1
   8db50:	00000b06 	br	8db80 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   8db54:	d0a00d17 	ldw	r2,-32716(gp)
   8db58:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   8db5c:	d0e00d17 	ldw	r3,-32716(gp)
   8db60:	e0bfff17 	ldw	r2,-4(fp)
   8db64:	1885883a 	add	r2,r3,r2
   8db68:	d0a00d15 	stw	r2,-32716(gp)
   8db6c:	e0bffb17 	ldw	r2,-20(fp)
   8db70:	e0bffc15 	stw	r2,-16(fp)
   8db74:	e0bffc17 	ldw	r2,-16(fp)
   8db78:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   8db7c:	e0bffd17 	ldw	r2,-12(fp)
} 
   8db80:	e037883a 	mov	sp,fp
   8db84:	df000017 	ldw	fp,0(sp)
   8db88:	dec00104 	addi	sp,sp,4
   8db8c:	f800283a 	ret

0008db90 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   8db90:	defffd04 	addi	sp,sp,-12
   8db94:	dfc00215 	stw	ra,8(sp)
   8db98:	df000115 	stw	fp,4(sp)
   8db9c:	df000104 	addi	fp,sp,4
   8dba0:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   8dba4:	e13fff17 	ldw	r4,-4(fp)
   8dba8:	008ea500 	call	8ea50 <alt_busy_sleep>
}
   8dbac:	e037883a 	mov	sp,fp
   8dbb0:	dfc00117 	ldw	ra,4(sp)
   8dbb4:	df000017 	ldw	fp,0(sp)
   8dbb8:	dec00204 	addi	sp,sp,8
   8dbbc:	f800283a 	ret

0008dbc0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8dbc0:	defffe04 	addi	sp,sp,-8
   8dbc4:	dfc00115 	stw	ra,4(sp)
   8dbc8:	df000015 	stw	fp,0(sp)
   8dbcc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8dbd0:	d0a00c17 	ldw	r2,-32720(gp)
   8dbd4:	10000326 	beq	r2,zero,8dbe4 <alt_get_errno+0x24>
   8dbd8:	d0a00c17 	ldw	r2,-32720(gp)
   8dbdc:	103ee83a 	callr	r2
   8dbe0:	00000106 	br	8dbe8 <alt_get_errno+0x28>
   8dbe4:	d0a01704 	addi	r2,gp,-32676
}
   8dbe8:	e037883a 	mov	sp,fp
   8dbec:	dfc00117 	ldw	ra,4(sp)
   8dbf0:	df000017 	ldw	fp,0(sp)
   8dbf4:	dec00204 	addi	sp,sp,8
   8dbf8:	f800283a 	ret

0008dbfc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   8dbfc:	defff904 	addi	sp,sp,-28
   8dc00:	dfc00615 	stw	ra,24(sp)
   8dc04:	df000515 	stw	fp,20(sp)
   8dc08:	df000504 	addi	fp,sp,20
   8dc0c:	e13ffd15 	stw	r4,-12(fp)
   8dc10:	e17ffe15 	stw	r5,-8(fp)
   8dc14:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8dc18:	e0bffd17 	ldw	r2,-12(fp)
   8dc1c:	10000816 	blt	r2,zero,8dc40 <write+0x44>
   8dc20:	01400304 	movi	r5,12
   8dc24:	e13ffd17 	ldw	r4,-12(fp)
   8dc28:	008aa6c0 	call	8aa6c <__mulsi3>
   8dc2c:	1007883a 	mov	r3,r2
   8dc30:	00800134 	movhi	r2,4
   8dc34:	1082ff04 	addi	r2,r2,3068
   8dc38:	1885883a 	add	r2,r3,r2
   8dc3c:	00000106 	br	8dc44 <write+0x48>
   8dc40:	0005883a 	mov	r2,zero
   8dc44:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   8dc48:	e0bffb17 	ldw	r2,-20(fp)
   8dc4c:	10002126 	beq	r2,zero,8dcd4 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   8dc50:	e0bffb17 	ldw	r2,-20(fp)
   8dc54:	10800217 	ldw	r2,8(r2)
   8dc58:	108000cc 	andi	r2,r2,3
   8dc5c:	10001826 	beq	r2,zero,8dcc0 <write+0xc4>
   8dc60:	e0bffb17 	ldw	r2,-20(fp)
   8dc64:	10800017 	ldw	r2,0(r2)
   8dc68:	10800617 	ldw	r2,24(r2)
   8dc6c:	10001426 	beq	r2,zero,8dcc0 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   8dc70:	e0bffb17 	ldw	r2,-20(fp)
   8dc74:	10800017 	ldw	r2,0(r2)
   8dc78:	10800617 	ldw	r2,24(r2)
   8dc7c:	e0ffff17 	ldw	r3,-4(fp)
   8dc80:	180d883a 	mov	r6,r3
   8dc84:	e17ffe17 	ldw	r5,-8(fp)
   8dc88:	e13ffb17 	ldw	r4,-20(fp)
   8dc8c:	103ee83a 	callr	r2
   8dc90:	e0bffc15 	stw	r2,-16(fp)
   8dc94:	e0bffc17 	ldw	r2,-16(fp)
   8dc98:	1000070e 	bge	r2,zero,8dcb8 <write+0xbc>
      {
        ALT_ERRNO = -rval;
   8dc9c:	008dbc00 	call	8dbc0 <alt_get_errno>
   8dca0:	1007883a 	mov	r3,r2
   8dca4:	e0bffc17 	ldw	r2,-16(fp)
   8dca8:	0085c83a 	sub	r2,zero,r2
   8dcac:	18800015 	stw	r2,0(r3)
        return -1;
   8dcb0:	00bfffc4 	movi	r2,-1
   8dcb4:	00000c06 	br	8dce8 <write+0xec>
      }
      return rval;
   8dcb8:	e0bffc17 	ldw	r2,-16(fp)
   8dcbc:	00000a06 	br	8dce8 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
   8dcc0:	008dbc00 	call	8dbc0 <alt_get_errno>
   8dcc4:	1007883a 	mov	r3,r2
   8dcc8:	00800344 	movi	r2,13
   8dccc:	18800015 	stw	r2,0(r3)
   8dcd0:	00000406 	br	8dce4 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   8dcd4:	008dbc00 	call	8dbc0 <alt_get_errno>
   8dcd8:	1007883a 	mov	r3,r2
   8dcdc:	00801444 	movi	r2,81
   8dce0:	18800015 	stw	r2,0(r3)
  }
  return -1;
   8dce4:	00bfffc4 	movi	r2,-1
}
   8dce8:	e037883a 	mov	sp,fp
   8dcec:	dfc00117 	ldw	ra,4(sp)
   8dcf0:	df000017 	ldw	fp,0(sp)
   8dcf4:	dec00204 	addi	sp,sp,8
   8dcf8:	f800283a 	ret

0008dcfc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   8dcfc:	defffd04 	addi	sp,sp,-12
   8dd00:	dfc00215 	stw	ra,8(sp)
   8dd04:	df000115 	stw	fp,4(sp)
   8dd08:	df000104 	addi	fp,sp,4
   8dd0c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   8dd10:	d1600904 	addi	r5,gp,-32732
   8dd14:	e13fff17 	ldw	r4,-4(fp)
   8dd18:	008ec040 	call	8ec04 <alt_dev_llist_insert>
}
   8dd1c:	e037883a 	mov	sp,fp
   8dd20:	dfc00117 	ldw	ra,4(sp)
   8dd24:	df000017 	ldw	fp,0(sp)
   8dd28:	dec00204 	addi	sp,sp,8
   8dd2c:	f800283a 	ret

0008dd30 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   8dd30:	defffd04 	addi	sp,sp,-12
   8dd34:	dfc00215 	stw	ra,8(sp)
   8dd38:	df000115 	stw	fp,4(sp)
   8dd3c:	df000104 	addi	fp,sp,4
   8dd40:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   8dd44:	008f5b00 	call	8f5b0 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   8dd48:	00800044 	movi	r2,1
   8dd4c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   8dd50:	0001883a 	nop
   8dd54:	e037883a 	mov	sp,fp
   8dd58:	dfc00117 	ldw	ra,4(sp)
   8dd5c:	df000017 	ldw	fp,0(sp)
   8dd60:	dec00204 	addi	sp,sp,8
   8dd64:	f800283a 	ret

0008dd68 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   8dd68:	defffe04 	addi	sp,sp,-8
   8dd6c:	dfc00115 	stw	ra,4(sp)
   8dd70:	df000015 	stw	fp,0(sp)
   8dd74:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
   8dd78:	01c0fa04 	movi	r7,1000
   8dd7c:	01800084 	movi	r6,2
   8dd80:	000b883a 	mov	r5,zero
   8dd84:	01000334 	movhi	r4,12
   8dd88:	21041004 	addi	r4,r4,4160
   8dd8c:	008e8a80 	call	8e8a8 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   8dd90:	000d883a 	mov	r6,zero
   8dd94:	000b883a 	mov	r5,zero
   8dd98:	01000134 	movhi	r4,4
   8dd9c:	21036904 	addi	r4,r4,3492
   8dda0:	008df2c0 	call	8df2c <altera_avalon_jtag_uart_init>
   8dda4:	01000134 	movhi	r4,4
   8dda8:	21035f04 	addi	r4,r4,3452
   8ddac:	008dcfc0 	call	8dcfc <alt_dev_reg>
}
   8ddb0:	0001883a 	nop
   8ddb4:	e037883a 	mov	sp,fp
   8ddb8:	dfc00117 	ldw	ra,4(sp)
   8ddbc:	df000017 	ldw	fp,0(sp)
   8ddc0:	dec00204 	addi	sp,sp,8
   8ddc4:	f800283a 	ret

0008ddc8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   8ddc8:	defffa04 	addi	sp,sp,-24
   8ddcc:	dfc00515 	stw	ra,20(sp)
   8ddd0:	df000415 	stw	fp,16(sp)
   8ddd4:	df000404 	addi	fp,sp,16
   8ddd8:	e13ffd15 	stw	r4,-12(fp)
   8dddc:	e17ffe15 	stw	r5,-8(fp)
   8dde0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8dde4:	e0bffd17 	ldw	r2,-12(fp)
   8dde8:	10800017 	ldw	r2,0(r2)
   8ddec:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   8ddf0:	e0bffc17 	ldw	r2,-16(fp)
   8ddf4:	10c00a04 	addi	r3,r2,40
   8ddf8:	e0bffd17 	ldw	r2,-12(fp)
   8ddfc:	10800217 	ldw	r2,8(r2)
   8de00:	100f883a 	mov	r7,r2
   8de04:	e1bfff17 	ldw	r6,-4(fp)
   8de08:	e17ffe17 	ldw	r5,-8(fp)
   8de0c:	1809883a 	mov	r4,r3
   8de10:	008e3f00 	call	8e3f0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   8de14:	e037883a 	mov	sp,fp
   8de18:	dfc00117 	ldw	ra,4(sp)
   8de1c:	df000017 	ldw	fp,0(sp)
   8de20:	dec00204 	addi	sp,sp,8
   8de24:	f800283a 	ret

0008de28 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   8de28:	defffa04 	addi	sp,sp,-24
   8de2c:	dfc00515 	stw	ra,20(sp)
   8de30:	df000415 	stw	fp,16(sp)
   8de34:	df000404 	addi	fp,sp,16
   8de38:	e13ffd15 	stw	r4,-12(fp)
   8de3c:	e17ffe15 	stw	r5,-8(fp)
   8de40:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8de44:	e0bffd17 	ldw	r2,-12(fp)
   8de48:	10800017 	ldw	r2,0(r2)
   8de4c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   8de50:	e0bffc17 	ldw	r2,-16(fp)
   8de54:	10c00a04 	addi	r3,r2,40
   8de58:	e0bffd17 	ldw	r2,-12(fp)
   8de5c:	10800217 	ldw	r2,8(r2)
   8de60:	100f883a 	mov	r7,r2
   8de64:	e1bfff17 	ldw	r6,-4(fp)
   8de68:	e17ffe17 	ldw	r5,-8(fp)
   8de6c:	1809883a 	mov	r4,r3
   8de70:	008e60c0 	call	8e60c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   8de74:	e037883a 	mov	sp,fp
   8de78:	dfc00117 	ldw	ra,4(sp)
   8de7c:	df000017 	ldw	fp,0(sp)
   8de80:	dec00204 	addi	sp,sp,8
   8de84:	f800283a 	ret

0008de88 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   8de88:	defffc04 	addi	sp,sp,-16
   8de8c:	dfc00315 	stw	ra,12(sp)
   8de90:	df000215 	stw	fp,8(sp)
   8de94:	df000204 	addi	fp,sp,8
   8de98:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8de9c:	e0bfff17 	ldw	r2,-4(fp)
   8dea0:	10800017 	ldw	r2,0(r2)
   8dea4:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   8dea8:	e0bffe17 	ldw	r2,-8(fp)
   8deac:	10c00a04 	addi	r3,r2,40
   8deb0:	e0bfff17 	ldw	r2,-4(fp)
   8deb4:	10800217 	ldw	r2,8(r2)
   8deb8:	100b883a 	mov	r5,r2
   8debc:	1809883a 	mov	r4,r3
   8dec0:	008e2980 	call	8e298 <altera_avalon_jtag_uart_close>
}
   8dec4:	e037883a 	mov	sp,fp
   8dec8:	dfc00117 	ldw	ra,4(sp)
   8decc:	df000017 	ldw	fp,0(sp)
   8ded0:	dec00204 	addi	sp,sp,8
   8ded4:	f800283a 	ret

0008ded8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   8ded8:	defffa04 	addi	sp,sp,-24
   8dedc:	dfc00515 	stw	ra,20(sp)
   8dee0:	df000415 	stw	fp,16(sp)
   8dee4:	df000404 	addi	fp,sp,16
   8dee8:	e13ffd15 	stw	r4,-12(fp)
   8deec:	e17ffe15 	stw	r5,-8(fp)
   8def0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   8def4:	e0bffd17 	ldw	r2,-12(fp)
   8def8:	10800017 	ldw	r2,0(r2)
   8defc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   8df00:	e0bffc17 	ldw	r2,-16(fp)
   8df04:	10800a04 	addi	r2,r2,40
   8df08:	e1bfff17 	ldw	r6,-4(fp)
   8df0c:	e17ffe17 	ldw	r5,-8(fp)
   8df10:	1009883a 	mov	r4,r2
   8df14:	008e3000 	call	8e300 <altera_avalon_jtag_uart_ioctl>
}
   8df18:	e037883a 	mov	sp,fp
   8df1c:	dfc00117 	ldw	ra,4(sp)
   8df20:	df000017 	ldw	fp,0(sp)
   8df24:	dec00204 	addi	sp,sp,8
   8df28:	f800283a 	ret

0008df2c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   8df2c:	defffa04 	addi	sp,sp,-24
   8df30:	dfc00515 	stw	ra,20(sp)
   8df34:	df000415 	stw	fp,16(sp)
   8df38:	df000404 	addi	fp,sp,16
   8df3c:	e13ffd15 	stw	r4,-12(fp)
   8df40:	e17ffe15 	stw	r5,-8(fp)
   8df44:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8df48:	e0bffd17 	ldw	r2,-12(fp)
   8df4c:	00c00044 	movi	r3,1
   8df50:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   8df54:	e0bffd17 	ldw	r2,-12(fp)
   8df58:	10800017 	ldw	r2,0(r2)
   8df5c:	10800104 	addi	r2,r2,4
   8df60:	1007883a 	mov	r3,r2
   8df64:	e0bffd17 	ldw	r2,-12(fp)
   8df68:	10800817 	ldw	r2,32(r2)
   8df6c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   8df70:	e0bffe17 	ldw	r2,-8(fp)
   8df74:	e0ffff17 	ldw	r3,-4(fp)
   8df78:	d8000015 	stw	zero,0(sp)
   8df7c:	e1fffd17 	ldw	r7,-12(fp)
   8df80:	01800274 	movhi	r6,9
   8df84:	31b7fb04 	addi	r6,r6,-8212
   8df88:	180b883a 	mov	r5,r3
   8df8c:	1009883a 	mov	r4,r2
   8df90:	008ed880 	call	8ed88 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   8df94:	e0bffd17 	ldw	r2,-12(fp)
   8df98:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   8df9c:	e0bffd17 	ldw	r2,-12(fp)
   8dfa0:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   8dfa4:	d0e01c17 	ldw	r3,-32656(gp)
   8dfa8:	e1fffd17 	ldw	r7,-12(fp)
   8dfac:	01800274 	movhi	r6,9
   8dfb0:	31b87e04 	addi	r6,r6,-7688
   8dfb4:	180b883a 	mov	r5,r3
   8dfb8:	1009883a 	mov	r4,r2
   8dfbc:	008e9240 	call	8e924 <alt_alarm_start>
   8dfc0:	1000040e 	bge	r2,zero,8dfd4 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   8dfc4:	e0fffd17 	ldw	r3,-12(fp)
   8dfc8:	00a00034 	movhi	r2,32768
   8dfcc:	10bfffc4 	addi	r2,r2,-1
   8dfd0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   8dfd4:	0001883a 	nop
   8dfd8:	e037883a 	mov	sp,fp
   8dfdc:	dfc00117 	ldw	ra,4(sp)
   8dfe0:	df000017 	ldw	fp,0(sp)
   8dfe4:	dec00204 	addi	sp,sp,8
   8dfe8:	f800283a 	ret

0008dfec <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   8dfec:	defff804 	addi	sp,sp,-32
   8dff0:	df000715 	stw	fp,28(sp)
   8dff4:	df000704 	addi	fp,sp,28
   8dff8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   8dffc:	e0bfff17 	ldw	r2,-4(fp)
   8e000:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   8e004:	e0bffb17 	ldw	r2,-20(fp)
   8e008:	10800017 	ldw	r2,0(r2)
   8e00c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8e010:	e0bffc17 	ldw	r2,-16(fp)
   8e014:	10800104 	addi	r2,r2,4
   8e018:	10800037 	ldwio	r2,0(r2)
   8e01c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   8e020:	e0bffd17 	ldw	r2,-12(fp)
   8e024:	1080c00c 	andi	r2,r2,768
   8e028:	10006d26 	beq	r2,zero,8e1e0 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   8e02c:	e0bffd17 	ldw	r2,-12(fp)
   8e030:	1080400c 	andi	r2,r2,256
   8e034:	10003526 	beq	r2,zero,8e10c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   8e038:	00800074 	movhi	r2,1
   8e03c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8e040:	e0bffb17 	ldw	r2,-20(fp)
   8e044:	10800a17 	ldw	r2,40(r2)
   8e048:	10800044 	addi	r2,r2,1
   8e04c:	1081ffcc 	andi	r2,r2,2047
   8e050:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   8e054:	e0bffb17 	ldw	r2,-20(fp)
   8e058:	10c00b17 	ldw	r3,44(r2)
   8e05c:	e0bffe17 	ldw	r2,-8(fp)
   8e060:	18801526 	beq	r3,r2,8e0b8 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   8e064:	e0bffc17 	ldw	r2,-16(fp)
   8e068:	10800037 	ldwio	r2,0(r2)
   8e06c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   8e070:	e0bff917 	ldw	r2,-28(fp)
   8e074:	10a0000c 	andi	r2,r2,32768
   8e078:	10001126 	beq	r2,zero,8e0c0 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   8e07c:	e0bffb17 	ldw	r2,-20(fp)
   8e080:	10800a17 	ldw	r2,40(r2)
   8e084:	e0fff917 	ldw	r3,-28(fp)
   8e088:	1809883a 	mov	r4,r3
   8e08c:	e0fffb17 	ldw	r3,-20(fp)
   8e090:	1885883a 	add	r2,r3,r2
   8e094:	10800e04 	addi	r2,r2,56
   8e098:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8e09c:	e0bffb17 	ldw	r2,-20(fp)
   8e0a0:	10800a17 	ldw	r2,40(r2)
   8e0a4:	10800044 	addi	r2,r2,1
   8e0a8:	10c1ffcc 	andi	r3,r2,2047
   8e0ac:	e0bffb17 	ldw	r2,-20(fp)
   8e0b0:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   8e0b4:	003fe206 	br	8e040 <altera_avalon_jtag_uart_irq+0x54>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   8e0b8:	0001883a 	nop
   8e0bc:	00000106 	br	8e0c4 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   8e0c0:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   8e0c4:	e0bff917 	ldw	r2,-28(fp)
   8e0c8:	10bfffec 	andhi	r2,r2,65535
   8e0cc:	10000f26 	beq	r2,zero,8e10c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8e0d0:	e0bffb17 	ldw	r2,-20(fp)
   8e0d4:	10c00817 	ldw	r3,32(r2)
   8e0d8:	00bfff84 	movi	r2,-2
   8e0dc:	1886703a 	and	r3,r3,r2
   8e0e0:	e0bffb17 	ldw	r2,-20(fp)
   8e0e4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   8e0e8:	e0bffc17 	ldw	r2,-16(fp)
   8e0ec:	10800104 	addi	r2,r2,4
   8e0f0:	1007883a 	mov	r3,r2
   8e0f4:	e0bffb17 	ldw	r2,-20(fp)
   8e0f8:	10800817 	ldw	r2,32(r2)
   8e0fc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8e100:	e0bffc17 	ldw	r2,-16(fp)
   8e104:	10800104 	addi	r2,r2,4
   8e108:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   8e10c:	e0bffd17 	ldw	r2,-12(fp)
   8e110:	1080800c 	andi	r2,r2,512
   8e114:	103fbe26 	beq	r2,zero,8e010 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   8e118:	e0bffd17 	ldw	r2,-12(fp)
   8e11c:	1004d43a 	srli	r2,r2,16
   8e120:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   8e124:	00001406 	br	8e178 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   8e128:	e0bffc17 	ldw	r2,-16(fp)
   8e12c:	e0fffb17 	ldw	r3,-20(fp)
   8e130:	18c00d17 	ldw	r3,52(r3)
   8e134:	e13ffb17 	ldw	r4,-20(fp)
   8e138:	20c7883a 	add	r3,r4,r3
   8e13c:	18c20e04 	addi	r3,r3,2104
   8e140:	18c00003 	ldbu	r3,0(r3)
   8e144:	18c03fcc 	andi	r3,r3,255
   8e148:	18c0201c 	xori	r3,r3,128
   8e14c:	18ffe004 	addi	r3,r3,-128
   8e150:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8e154:	e0bffb17 	ldw	r2,-20(fp)
   8e158:	10800d17 	ldw	r2,52(r2)
   8e15c:	10800044 	addi	r2,r2,1
   8e160:	10c1ffcc 	andi	r3,r2,2047
   8e164:	e0bffb17 	ldw	r2,-20(fp)
   8e168:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   8e16c:	e0bffa17 	ldw	r2,-24(fp)
   8e170:	10bfffc4 	addi	r2,r2,-1
   8e174:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   8e178:	e0bffa17 	ldw	r2,-24(fp)
   8e17c:	10000526 	beq	r2,zero,8e194 <altera_avalon_jtag_uart_irq+0x1a8>
   8e180:	e0bffb17 	ldw	r2,-20(fp)
   8e184:	10c00d17 	ldw	r3,52(r2)
   8e188:	e0bffb17 	ldw	r2,-20(fp)
   8e18c:	10800c17 	ldw	r2,48(r2)
   8e190:	18bfe51e 	bne	r3,r2,8e128 <altera_avalon_jtag_uart_irq+0x13c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   8e194:	e0bffa17 	ldw	r2,-24(fp)
   8e198:	103f9d26 	beq	r2,zero,8e010 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   8e19c:	e0bffb17 	ldw	r2,-20(fp)
   8e1a0:	10c00817 	ldw	r3,32(r2)
   8e1a4:	00bfff44 	movi	r2,-3
   8e1a8:	1886703a 	and	r3,r3,r2
   8e1ac:	e0bffb17 	ldw	r2,-20(fp)
   8e1b0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8e1b4:	e0bffb17 	ldw	r2,-20(fp)
   8e1b8:	10800017 	ldw	r2,0(r2)
   8e1bc:	10800104 	addi	r2,r2,4
   8e1c0:	1007883a 	mov	r3,r2
   8e1c4:	e0bffb17 	ldw	r2,-20(fp)
   8e1c8:	10800817 	ldw	r2,32(r2)
   8e1cc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8e1d0:	e0bffc17 	ldw	r2,-16(fp)
   8e1d4:	10800104 	addi	r2,r2,4
   8e1d8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   8e1dc:	003f8c06 	br	8e010 <altera_avalon_jtag_uart_irq+0x24>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   8e1e0:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   8e1e4:	0001883a 	nop
   8e1e8:	e037883a 	mov	sp,fp
   8e1ec:	df000017 	ldw	fp,0(sp)
   8e1f0:	dec00104 	addi	sp,sp,4
   8e1f4:	f800283a 	ret

0008e1f8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   8e1f8:	defff804 	addi	sp,sp,-32
   8e1fc:	df000715 	stw	fp,28(sp)
   8e200:	df000704 	addi	fp,sp,28
   8e204:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   8e208:	e0bffb17 	ldw	r2,-20(fp)
   8e20c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   8e210:	e0bff917 	ldw	r2,-28(fp)
   8e214:	10800017 	ldw	r2,0(r2)
   8e218:	10800104 	addi	r2,r2,4
   8e21c:	10800037 	ldwio	r2,0(r2)
   8e220:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   8e224:	e0bffa17 	ldw	r2,-24(fp)
   8e228:	1081000c 	andi	r2,r2,1024
   8e22c:	10000b26 	beq	r2,zero,8e25c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   8e230:	e0bff917 	ldw	r2,-28(fp)
   8e234:	10800017 	ldw	r2,0(r2)
   8e238:	10800104 	addi	r2,r2,4
   8e23c:	1007883a 	mov	r3,r2
   8e240:	e0bff917 	ldw	r2,-28(fp)
   8e244:	10800817 	ldw	r2,32(r2)
   8e248:	10810014 	ori	r2,r2,1024
   8e24c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   8e250:	e0bff917 	ldw	r2,-28(fp)
   8e254:	10000915 	stw	zero,36(r2)
   8e258:	00000a06 	br	8e284 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   8e25c:	e0bff917 	ldw	r2,-28(fp)
   8e260:	10c00917 	ldw	r3,36(r2)
   8e264:	00a00034 	movhi	r2,32768
   8e268:	10bfff04 	addi	r2,r2,-4
   8e26c:	10c00536 	bltu	r2,r3,8e284 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   8e270:	e0bff917 	ldw	r2,-28(fp)
   8e274:	10800917 	ldw	r2,36(r2)
   8e278:	10c00044 	addi	r3,r2,1
   8e27c:	e0bff917 	ldw	r2,-28(fp)
   8e280:	10c00915 	stw	r3,36(r2)
   8e284:	d0a01c17 	ldw	r2,-32656(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   8e288:	e037883a 	mov	sp,fp
   8e28c:	df000017 	ldw	fp,0(sp)
   8e290:	dec00104 	addi	sp,sp,4
   8e294:	f800283a 	ret

0008e298 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   8e298:	defffd04 	addi	sp,sp,-12
   8e29c:	df000215 	stw	fp,8(sp)
   8e2a0:	df000204 	addi	fp,sp,8
   8e2a4:	e13ffe15 	stw	r4,-8(fp)
   8e2a8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   8e2ac:	00000506 	br	8e2c4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   8e2b0:	e0bfff17 	ldw	r2,-4(fp)
   8e2b4:	1090000c 	andi	r2,r2,16384
   8e2b8:	10000226 	beq	r2,zero,8e2c4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   8e2bc:	00bffd44 	movi	r2,-11
   8e2c0:	00000b06 	br	8e2f0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   8e2c4:	e0bffe17 	ldw	r2,-8(fp)
   8e2c8:	10c00d17 	ldw	r3,52(r2)
   8e2cc:	e0bffe17 	ldw	r2,-8(fp)
   8e2d0:	10800c17 	ldw	r2,48(r2)
   8e2d4:	18800526 	beq	r3,r2,8e2ec <altera_avalon_jtag_uart_close+0x54>
   8e2d8:	e0bffe17 	ldw	r2,-8(fp)
   8e2dc:	10c00917 	ldw	r3,36(r2)
   8e2e0:	e0bffe17 	ldw	r2,-8(fp)
   8e2e4:	10800117 	ldw	r2,4(r2)
   8e2e8:	18bff136 	bltu	r3,r2,8e2b0 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   8e2ec:	0005883a 	mov	r2,zero
}
   8e2f0:	e037883a 	mov	sp,fp
   8e2f4:	df000017 	ldw	fp,0(sp)
   8e2f8:	dec00104 	addi	sp,sp,4
   8e2fc:	f800283a 	ret

0008e300 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   8e300:	defffa04 	addi	sp,sp,-24
   8e304:	df000515 	stw	fp,20(sp)
   8e308:	df000504 	addi	fp,sp,20
   8e30c:	e13ffd15 	stw	r4,-12(fp)
   8e310:	e17ffe15 	stw	r5,-8(fp)
   8e314:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   8e318:	00bff9c4 	movi	r2,-25
   8e31c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   8e320:	e0bffe17 	ldw	r2,-8(fp)
   8e324:	10da8060 	cmpeqi	r3,r2,27137
   8e328:	1800031e 	bne	r3,zero,8e338 <altera_avalon_jtag_uart_ioctl+0x38>
   8e32c:	109a80a0 	cmpeqi	r2,r2,27138
   8e330:	1000181e 	bne	r2,zero,8e394 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   8e334:	00002906 	br	8e3dc <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   8e338:	e0bffd17 	ldw	r2,-12(fp)
   8e33c:	10c00117 	ldw	r3,4(r2)
   8e340:	00a00034 	movhi	r2,32768
   8e344:	10bfffc4 	addi	r2,r2,-1
   8e348:	18802126 	beq	r3,r2,8e3d0 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   8e34c:	e0bfff17 	ldw	r2,-4(fp)
   8e350:	10800017 	ldw	r2,0(r2)
   8e354:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   8e358:	e0bffc17 	ldw	r2,-16(fp)
   8e35c:	10800090 	cmplti	r2,r2,2
   8e360:	1000061e 	bne	r2,zero,8e37c <altera_avalon_jtag_uart_ioctl+0x7c>
   8e364:	e0fffc17 	ldw	r3,-16(fp)
   8e368:	00a00034 	movhi	r2,32768
   8e36c:	10bfffc4 	addi	r2,r2,-1
   8e370:	18800226 	beq	r3,r2,8e37c <altera_avalon_jtag_uart_ioctl+0x7c>
   8e374:	e0bffc17 	ldw	r2,-16(fp)
   8e378:	00000206 	br	8e384 <altera_avalon_jtag_uart_ioctl+0x84>
   8e37c:	00a00034 	movhi	r2,32768
   8e380:	10bfff84 	addi	r2,r2,-2
   8e384:	e0fffd17 	ldw	r3,-12(fp)
   8e388:	18800115 	stw	r2,4(r3)
      rc = 0;
   8e38c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   8e390:	00000f06 	br	8e3d0 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   8e394:	e0bffd17 	ldw	r2,-12(fp)
   8e398:	10c00117 	ldw	r3,4(r2)
   8e39c:	00a00034 	movhi	r2,32768
   8e3a0:	10bfffc4 	addi	r2,r2,-1
   8e3a4:	18800c26 	beq	r3,r2,8e3d8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   8e3a8:	e0bffd17 	ldw	r2,-12(fp)
   8e3ac:	10c00917 	ldw	r3,36(r2)
   8e3b0:	e0bffd17 	ldw	r2,-12(fp)
   8e3b4:	10800117 	ldw	r2,4(r2)
   8e3b8:	1885803a 	cmpltu	r2,r3,r2
   8e3bc:	10c03fcc 	andi	r3,r2,255
   8e3c0:	e0bfff17 	ldw	r2,-4(fp)
   8e3c4:	10c00015 	stw	r3,0(r2)
      rc = 0;
   8e3c8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   8e3cc:	00000206 	br	8e3d8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   8e3d0:	0001883a 	nop
   8e3d4:	00000106 	br	8e3dc <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   8e3d8:	0001883a 	nop

  default:
    break;
  }

  return rc;
   8e3dc:	e0bffb17 	ldw	r2,-20(fp)
}
   8e3e0:	e037883a 	mov	sp,fp
   8e3e4:	df000017 	ldw	fp,0(sp)
   8e3e8:	dec00104 	addi	sp,sp,4
   8e3ec:	f800283a 	ret

0008e3f0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   8e3f0:	defff304 	addi	sp,sp,-52
   8e3f4:	dfc00c15 	stw	ra,48(sp)
   8e3f8:	df000b15 	stw	fp,44(sp)
   8e3fc:	df000b04 	addi	fp,sp,44
   8e400:	e13ffc15 	stw	r4,-16(fp)
   8e404:	e17ffd15 	stw	r5,-12(fp)
   8e408:	e1bffe15 	stw	r6,-8(fp)
   8e40c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   8e410:	e0bffd17 	ldw	r2,-12(fp)
   8e414:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   8e418:	00004706 	br	8e538 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   8e41c:	e0bffc17 	ldw	r2,-16(fp)
   8e420:	10800a17 	ldw	r2,40(r2)
   8e424:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   8e428:	e0bffc17 	ldw	r2,-16(fp)
   8e42c:	10800b17 	ldw	r2,44(r2)
   8e430:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   8e434:	e0fff717 	ldw	r3,-36(fp)
   8e438:	e0bff817 	ldw	r2,-32(fp)
   8e43c:	18800536 	bltu	r3,r2,8e454 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   8e440:	e0fff717 	ldw	r3,-36(fp)
   8e444:	e0bff817 	ldw	r2,-32(fp)
   8e448:	1885c83a 	sub	r2,r3,r2
   8e44c:	e0bff615 	stw	r2,-40(fp)
   8e450:	00000406 	br	8e464 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   8e454:	00c20004 	movi	r3,2048
   8e458:	e0bff817 	ldw	r2,-32(fp)
   8e45c:	1885c83a 	sub	r2,r3,r2
   8e460:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   8e464:	e0bff617 	ldw	r2,-40(fp)
   8e468:	10001e26 	beq	r2,zero,8e4e4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   8e46c:	e0fffe17 	ldw	r3,-8(fp)
   8e470:	e0bff617 	ldw	r2,-40(fp)
   8e474:	1880022e 	bgeu	r3,r2,8e480 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   8e478:	e0bffe17 	ldw	r2,-8(fp)
   8e47c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   8e480:	e0bffc17 	ldw	r2,-16(fp)
   8e484:	10c00e04 	addi	r3,r2,56
   8e488:	e0bff817 	ldw	r2,-32(fp)
   8e48c:	1885883a 	add	r2,r3,r2
   8e490:	e1bff617 	ldw	r6,-40(fp)
   8e494:	100b883a 	mov	r5,r2
   8e498:	e13ff517 	ldw	r4,-44(fp)
   8e49c:	0085fec0 	call	85fec <memcpy>
      ptr   += n;
   8e4a0:	e0fff517 	ldw	r3,-44(fp)
   8e4a4:	e0bff617 	ldw	r2,-40(fp)
   8e4a8:	1885883a 	add	r2,r3,r2
   8e4ac:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   8e4b0:	e0fffe17 	ldw	r3,-8(fp)
   8e4b4:	e0bff617 	ldw	r2,-40(fp)
   8e4b8:	1885c83a 	sub	r2,r3,r2
   8e4bc:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8e4c0:	e0fff817 	ldw	r3,-32(fp)
   8e4c4:	e0bff617 	ldw	r2,-40(fp)
   8e4c8:	1885883a 	add	r2,r3,r2
   8e4cc:	10c1ffcc 	andi	r3,r2,2047
   8e4d0:	e0bffc17 	ldw	r2,-16(fp)
   8e4d4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   8e4d8:	e0bffe17 	ldw	r2,-8(fp)
   8e4dc:	00bfcf16 	blt	zero,r2,8e41c <altera_avalon_jtag_uart_read+0x2c>
   8e4e0:	00000106 	br	8e4e8 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   8e4e4:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   8e4e8:	e0fff517 	ldw	r3,-44(fp)
   8e4ec:	e0bffd17 	ldw	r2,-12(fp)
   8e4f0:	1880141e 	bne	r3,r2,8e544 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   8e4f4:	e0bfff17 	ldw	r2,-4(fp)
   8e4f8:	1090000c 	andi	r2,r2,16384
   8e4fc:	1000131e 	bne	r2,zero,8e54c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   8e500:	0001883a 	nop
   8e504:	e0bffc17 	ldw	r2,-16(fp)
   8e508:	10c00a17 	ldw	r3,40(r2)
   8e50c:	e0bff717 	ldw	r2,-36(fp)
   8e510:	1880051e 	bne	r3,r2,8e528 <altera_avalon_jtag_uart_read+0x138>
   8e514:	e0bffc17 	ldw	r2,-16(fp)
   8e518:	10c00917 	ldw	r3,36(r2)
   8e51c:	e0bffc17 	ldw	r2,-16(fp)
   8e520:	10800117 	ldw	r2,4(r2)
   8e524:	18bff736 	bltu	r3,r2,8e504 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   8e528:	e0bffc17 	ldw	r2,-16(fp)
   8e52c:	10c00a17 	ldw	r3,40(r2)
   8e530:	e0bff717 	ldw	r2,-36(fp)
   8e534:	18800726 	beq	r3,r2,8e554 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   8e538:	e0bffe17 	ldw	r2,-8(fp)
   8e53c:	00bfb716 	blt	zero,r2,8e41c <altera_avalon_jtag_uart_read+0x2c>
   8e540:	00000506 	br	8e558 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   8e544:	0001883a 	nop
   8e548:	00000306 	br	8e558 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   8e54c:	0001883a 	nop
   8e550:	00000106 	br	8e558 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   8e554:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   8e558:	e0fff517 	ldw	r3,-44(fp)
   8e55c:	e0bffd17 	ldw	r2,-12(fp)
   8e560:	18801826 	beq	r3,r2,8e5c4 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e564:	0005303a 	rdctl	r2,status
   8e568:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e56c:	e0fffb17 	ldw	r3,-20(fp)
   8e570:	00bfff84 	movi	r2,-2
   8e574:	1884703a 	and	r2,r3,r2
   8e578:	1001703a 	wrctl	status,r2
  
  return context;
   8e57c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   8e580:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8e584:	e0bffc17 	ldw	r2,-16(fp)
   8e588:	10800817 	ldw	r2,32(r2)
   8e58c:	10c00054 	ori	r3,r2,1
   8e590:	e0bffc17 	ldw	r2,-16(fp)
   8e594:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8e598:	e0bffc17 	ldw	r2,-16(fp)
   8e59c:	10800017 	ldw	r2,0(r2)
   8e5a0:	10800104 	addi	r2,r2,4
   8e5a4:	1007883a 	mov	r3,r2
   8e5a8:	e0bffc17 	ldw	r2,-16(fp)
   8e5ac:	10800817 	ldw	r2,32(r2)
   8e5b0:	18800035 	stwio	r2,0(r3)
   8e5b4:	e0bffa17 	ldw	r2,-24(fp)
   8e5b8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e5bc:	e0bff917 	ldw	r2,-28(fp)
   8e5c0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   8e5c4:	e0fff517 	ldw	r3,-44(fp)
   8e5c8:	e0bffd17 	ldw	r2,-12(fp)
   8e5cc:	18800426 	beq	r3,r2,8e5e0 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   8e5d0:	e0fff517 	ldw	r3,-44(fp)
   8e5d4:	e0bffd17 	ldw	r2,-12(fp)
   8e5d8:	1885c83a 	sub	r2,r3,r2
   8e5dc:	00000606 	br	8e5f8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   8e5e0:	e0bfff17 	ldw	r2,-4(fp)
   8e5e4:	1090000c 	andi	r2,r2,16384
   8e5e8:	10000226 	beq	r2,zero,8e5f4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   8e5ec:	00bffd44 	movi	r2,-11
   8e5f0:	00000106 	br	8e5f8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   8e5f4:	00bffec4 	movi	r2,-5
}
   8e5f8:	e037883a 	mov	sp,fp
   8e5fc:	dfc00117 	ldw	ra,4(sp)
   8e600:	df000017 	ldw	fp,0(sp)
   8e604:	dec00204 	addi	sp,sp,8
   8e608:	f800283a 	ret

0008e60c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   8e60c:	defff304 	addi	sp,sp,-52
   8e610:	dfc00c15 	stw	ra,48(sp)
   8e614:	df000b15 	stw	fp,44(sp)
   8e618:	df000b04 	addi	fp,sp,44
   8e61c:	e13ffc15 	stw	r4,-16(fp)
   8e620:	e17ffd15 	stw	r5,-12(fp)
   8e624:	e1bffe15 	stw	r6,-8(fp)
   8e628:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   8e62c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   8e630:	e0bffd17 	ldw	r2,-12(fp)
   8e634:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   8e638:	00003706 	br	8e718 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   8e63c:	e0bffc17 	ldw	r2,-16(fp)
   8e640:	10800c17 	ldw	r2,48(r2)
   8e644:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   8e648:	e0bffc17 	ldw	r2,-16(fp)
   8e64c:	10800d17 	ldw	r2,52(r2)
   8e650:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   8e654:	e0fff917 	ldw	r3,-28(fp)
   8e658:	e0bff517 	ldw	r2,-44(fp)
   8e65c:	1880062e 	bgeu	r3,r2,8e678 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   8e660:	e0fff517 	ldw	r3,-44(fp)
   8e664:	e0bff917 	ldw	r2,-28(fp)
   8e668:	1885c83a 	sub	r2,r3,r2
   8e66c:	10bfffc4 	addi	r2,r2,-1
   8e670:	e0bff615 	stw	r2,-40(fp)
   8e674:	00000b06 	br	8e6a4 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   8e678:	e0bff517 	ldw	r2,-44(fp)
   8e67c:	10000526 	beq	r2,zero,8e694 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   8e680:	00c20004 	movi	r3,2048
   8e684:	e0bff917 	ldw	r2,-28(fp)
   8e688:	1885c83a 	sub	r2,r3,r2
   8e68c:	e0bff615 	stw	r2,-40(fp)
   8e690:	00000406 	br	8e6a4 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   8e694:	00c1ffc4 	movi	r3,2047
   8e698:	e0bff917 	ldw	r2,-28(fp)
   8e69c:	1885c83a 	sub	r2,r3,r2
   8e6a0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   8e6a4:	e0bff617 	ldw	r2,-40(fp)
   8e6a8:	10001e26 	beq	r2,zero,8e724 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   8e6ac:	e0fffe17 	ldw	r3,-8(fp)
   8e6b0:	e0bff617 	ldw	r2,-40(fp)
   8e6b4:	1880022e 	bgeu	r3,r2,8e6c0 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   8e6b8:	e0bffe17 	ldw	r2,-8(fp)
   8e6bc:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   8e6c0:	e0bffc17 	ldw	r2,-16(fp)
   8e6c4:	10c20e04 	addi	r3,r2,2104
   8e6c8:	e0bff917 	ldw	r2,-28(fp)
   8e6cc:	1885883a 	add	r2,r3,r2
   8e6d0:	e1bff617 	ldw	r6,-40(fp)
   8e6d4:	e17ffd17 	ldw	r5,-12(fp)
   8e6d8:	1009883a 	mov	r4,r2
   8e6dc:	0085fec0 	call	85fec <memcpy>
      ptr   += n;
   8e6e0:	e0fffd17 	ldw	r3,-12(fp)
   8e6e4:	e0bff617 	ldw	r2,-40(fp)
   8e6e8:	1885883a 	add	r2,r3,r2
   8e6ec:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   8e6f0:	e0fffe17 	ldw	r3,-8(fp)
   8e6f4:	e0bff617 	ldw	r2,-40(fp)
   8e6f8:	1885c83a 	sub	r2,r3,r2
   8e6fc:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8e700:	e0fff917 	ldw	r3,-28(fp)
   8e704:	e0bff617 	ldw	r2,-40(fp)
   8e708:	1885883a 	add	r2,r3,r2
   8e70c:	10c1ffcc 	andi	r3,r2,2047
   8e710:	e0bffc17 	ldw	r2,-16(fp)
   8e714:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   8e718:	e0bffe17 	ldw	r2,-8(fp)
   8e71c:	00bfc716 	blt	zero,r2,8e63c <altera_avalon_jtag_uart_write+0x30>
   8e720:	00000106 	br	8e728 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   8e724:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e728:	0005303a 	rdctl	r2,status
   8e72c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e730:	e0fffb17 	ldw	r3,-20(fp)
   8e734:	00bfff84 	movi	r2,-2
   8e738:	1884703a 	and	r2,r3,r2
   8e73c:	1001703a 	wrctl	status,r2
  
  return context;
   8e740:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   8e744:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   8e748:	e0bffc17 	ldw	r2,-16(fp)
   8e74c:	10800817 	ldw	r2,32(r2)
   8e750:	10c00094 	ori	r3,r2,2
   8e754:	e0bffc17 	ldw	r2,-16(fp)
   8e758:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8e75c:	e0bffc17 	ldw	r2,-16(fp)
   8e760:	10800017 	ldw	r2,0(r2)
   8e764:	10800104 	addi	r2,r2,4
   8e768:	1007883a 	mov	r3,r2
   8e76c:	e0bffc17 	ldw	r2,-16(fp)
   8e770:	10800817 	ldw	r2,32(r2)
   8e774:	18800035 	stwio	r2,0(r3)
   8e778:	e0bffa17 	ldw	r2,-24(fp)
   8e77c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e780:	e0bff817 	ldw	r2,-32(fp)
   8e784:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   8e788:	e0bffe17 	ldw	r2,-8(fp)
   8e78c:	0080100e 	bge	zero,r2,8e7d0 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   8e790:	e0bfff17 	ldw	r2,-4(fp)
   8e794:	1090000c 	andi	r2,r2,16384
   8e798:	1000101e 	bne	r2,zero,8e7dc <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   8e79c:	0001883a 	nop
   8e7a0:	e0bffc17 	ldw	r2,-16(fp)
   8e7a4:	10c00d17 	ldw	r3,52(r2)
   8e7a8:	e0bff517 	ldw	r2,-44(fp)
   8e7ac:	1880051e 	bne	r3,r2,8e7c4 <altera_avalon_jtag_uart_write+0x1b8>
   8e7b0:	e0bffc17 	ldw	r2,-16(fp)
   8e7b4:	10c00917 	ldw	r3,36(r2)
   8e7b8:	e0bffc17 	ldw	r2,-16(fp)
   8e7bc:	10800117 	ldw	r2,4(r2)
   8e7c0:	18bff736 	bltu	r3,r2,8e7a0 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   8e7c4:	e0bffc17 	ldw	r2,-16(fp)
   8e7c8:	10800917 	ldw	r2,36(r2)
   8e7cc:	1000051e 	bne	r2,zero,8e7e4 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   8e7d0:	e0bffe17 	ldw	r2,-8(fp)
   8e7d4:	00bfd016 	blt	zero,r2,8e718 <altera_avalon_jtag_uart_write+0x10c>
   8e7d8:	00000306 	br	8e7e8 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   8e7dc:	0001883a 	nop
   8e7e0:	00000106 	br	8e7e8 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   8e7e4:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   8e7e8:	e0fffd17 	ldw	r3,-12(fp)
   8e7ec:	e0bff717 	ldw	r2,-36(fp)
   8e7f0:	18800426 	beq	r3,r2,8e804 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   8e7f4:	e0fffd17 	ldw	r3,-12(fp)
   8e7f8:	e0bff717 	ldw	r2,-36(fp)
   8e7fc:	1885c83a 	sub	r2,r3,r2
   8e800:	00000606 	br	8e81c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   8e804:	e0bfff17 	ldw	r2,-4(fp)
   8e808:	1090000c 	andi	r2,r2,16384
   8e80c:	10000226 	beq	r2,zero,8e818 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   8e810:	00bffd44 	movi	r2,-11
   8e814:	00000106 	br	8e81c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   8e818:	00bffec4 	movi	r2,-5
}
   8e81c:	e037883a 	mov	sp,fp
   8e820:	dfc00117 	ldw	ra,4(sp)
   8e824:	df000017 	ldw	fp,0(sp)
   8e828:	dec00204 	addi	sp,sp,8
   8e82c:	f800283a 	ret

0008e830 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   8e830:	defffa04 	addi	sp,sp,-24
   8e834:	dfc00515 	stw	ra,20(sp)
   8e838:	df000415 	stw	fp,16(sp)
   8e83c:	df000404 	addi	fp,sp,16
   8e840:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   8e844:	0007883a 	mov	r3,zero
   8e848:	e0bfff17 	ldw	r2,-4(fp)
   8e84c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   8e850:	e0bfff17 	ldw	r2,-4(fp)
   8e854:	10800104 	addi	r2,r2,4
   8e858:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e85c:	0005303a 	rdctl	r2,status
   8e860:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e864:	e0fffd17 	ldw	r3,-12(fp)
   8e868:	00bfff84 	movi	r2,-2
   8e86c:	1884703a 	and	r2,r3,r2
   8e870:	1001703a 	wrctl	status,r2
  
  return context;
   8e874:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   8e878:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   8e87c:	008f4a80 	call	8f4a8 <alt_tick>
   8e880:	e0bffc17 	ldw	r2,-16(fp)
   8e884:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e888:	e0bffe17 	ldw	r2,-8(fp)
   8e88c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   8e890:	0001883a 	nop
   8e894:	e037883a 	mov	sp,fp
   8e898:	dfc00117 	ldw	ra,4(sp)
   8e89c:	df000017 	ldw	fp,0(sp)
   8e8a0:	dec00204 	addi	sp,sp,8
   8e8a4:	f800283a 	ret

0008e8a8 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   8e8a8:	defff804 	addi	sp,sp,-32
   8e8ac:	dfc00715 	stw	ra,28(sp)
   8e8b0:	df000615 	stw	fp,24(sp)
   8e8b4:	df000604 	addi	fp,sp,24
   8e8b8:	e13ffc15 	stw	r4,-16(fp)
   8e8bc:	e17ffd15 	stw	r5,-12(fp)
   8e8c0:	e1bffe15 	stw	r6,-8(fp)
   8e8c4:	e1ffff15 	stw	r7,-4(fp)
   8e8c8:	e0bfff17 	ldw	r2,-4(fp)
   8e8cc:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   8e8d0:	d0a01c17 	ldw	r2,-32656(gp)
   8e8d4:	1000021e 	bne	r2,zero,8e8e0 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   8e8d8:	e0bffb17 	ldw	r2,-20(fp)
   8e8dc:	d0a01c15 	stw	r2,-32656(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   8e8e0:	e0bffc17 	ldw	r2,-16(fp)
   8e8e4:	10800104 	addi	r2,r2,4
   8e8e8:	00c001c4 	movi	r3,7
   8e8ec:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   8e8f0:	d8000015 	stw	zero,0(sp)
   8e8f4:	e1fffc17 	ldw	r7,-16(fp)
   8e8f8:	01800274 	movhi	r6,9
   8e8fc:	31ba0c04 	addi	r6,r6,-6096
   8e900:	e17ffe17 	ldw	r5,-8(fp)
   8e904:	e13ffd17 	ldw	r4,-12(fp)
   8e908:	008ed880 	call	8ed88 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   8e90c:	0001883a 	nop
   8e910:	e037883a 	mov	sp,fp
   8e914:	dfc00117 	ldw	ra,4(sp)
   8e918:	df000017 	ldw	fp,0(sp)
   8e91c:	dec00204 	addi	sp,sp,8
   8e920:	f800283a 	ret

0008e924 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   8e924:	defff504 	addi	sp,sp,-44
   8e928:	df000a15 	stw	fp,40(sp)
   8e92c:	df000a04 	addi	fp,sp,40
   8e930:	e13ffc15 	stw	r4,-16(fp)
   8e934:	e17ffd15 	stw	r5,-12(fp)
   8e938:	e1bffe15 	stw	r6,-8(fp)
   8e93c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   8e940:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   8e944:	d0a01c17 	ldw	r2,-32656(gp)
  
  if (alt_ticks_per_second ())
   8e948:	10003c26 	beq	r2,zero,8ea3c <alt_alarm_start+0x118>
  {
    if (alarm)
   8e94c:	e0bffc17 	ldw	r2,-16(fp)
   8e950:	10003826 	beq	r2,zero,8ea34 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   8e954:	e0bffc17 	ldw	r2,-16(fp)
   8e958:	e0fffe17 	ldw	r3,-8(fp)
   8e95c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   8e960:	e0bffc17 	ldw	r2,-16(fp)
   8e964:	e0ffff17 	ldw	r3,-4(fp)
   8e968:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e96c:	0005303a 	rdctl	r2,status
   8e970:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e974:	e0fff917 	ldw	r3,-28(fp)
   8e978:	00bfff84 	movi	r2,-2
   8e97c:	1884703a 	and	r2,r3,r2
   8e980:	1001703a 	wrctl	status,r2
  
  return context;
   8e984:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   8e988:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   8e98c:	d0a01d17 	ldw	r2,-32652(gp)
      
      current_nticks = alt_nticks();
   8e990:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   8e994:	e0fffd17 	ldw	r3,-12(fp)
   8e998:	e0bff617 	ldw	r2,-40(fp)
   8e99c:	1885883a 	add	r2,r3,r2
   8e9a0:	10c00044 	addi	r3,r2,1
   8e9a4:	e0bffc17 	ldw	r2,-16(fp)
   8e9a8:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   8e9ac:	e0bffc17 	ldw	r2,-16(fp)
   8e9b0:	10c00217 	ldw	r3,8(r2)
   8e9b4:	e0bff617 	ldw	r2,-40(fp)
   8e9b8:	1880042e 	bgeu	r3,r2,8e9cc <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   8e9bc:	e0bffc17 	ldw	r2,-16(fp)
   8e9c0:	00c00044 	movi	r3,1
   8e9c4:	10c00405 	stb	r3,16(r2)
   8e9c8:	00000206 	br	8e9d4 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   8e9cc:	e0bffc17 	ldw	r2,-16(fp)
   8e9d0:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   8e9d4:	e0bffc17 	ldw	r2,-16(fp)
   8e9d8:	d0e00f04 	addi	r3,gp,-32708
   8e9dc:	e0fffa15 	stw	r3,-24(fp)
   8e9e0:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   8e9e4:	e0bffb17 	ldw	r2,-20(fp)
   8e9e8:	e0fffa17 	ldw	r3,-24(fp)
   8e9ec:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   8e9f0:	e0bffa17 	ldw	r2,-24(fp)
   8e9f4:	10c00017 	ldw	r3,0(r2)
   8e9f8:	e0bffb17 	ldw	r2,-20(fp)
   8e9fc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   8ea00:	e0bffa17 	ldw	r2,-24(fp)
   8ea04:	10800017 	ldw	r2,0(r2)
   8ea08:	e0fffb17 	ldw	r3,-20(fp)
   8ea0c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   8ea10:	e0bffa17 	ldw	r2,-24(fp)
   8ea14:	e0fffb17 	ldw	r3,-20(fp)
   8ea18:	10c00015 	stw	r3,0(r2)
   8ea1c:	e0bff817 	ldw	r2,-32(fp)
   8ea20:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8ea24:	e0bff717 	ldw	r2,-36(fp)
   8ea28:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   8ea2c:	0005883a 	mov	r2,zero
   8ea30:	00000306 	br	8ea40 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   8ea34:	00bffa84 	movi	r2,-22
   8ea38:	00000106 	br	8ea40 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   8ea3c:	00bfde84 	movi	r2,-134
  }
}
   8ea40:	e037883a 	mov	sp,fp
   8ea44:	df000017 	ldw	fp,0(sp)
   8ea48:	dec00104 	addi	sp,sp,4
   8ea4c:	f800283a 	ret

0008ea50 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   8ea50:	defffa04 	addi	sp,sp,-24
   8ea54:	dfc00515 	stw	ra,20(sp)
   8ea58:	df000415 	stw	fp,16(sp)
   8ea5c:	df000404 	addi	fp,sp,16
   8ea60:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
   8ea64:	00800244 	movi	r2,9
   8ea68:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   8ea6c:	014003f4 	movhi	r5,15
   8ea70:	29509004 	addi	r5,r5,16960
   8ea74:	e13ffd17 	ldw	r4,-12(fp)
   8ea78:	008aa6c0 	call	8aa6c <__mulsi3>
   8ea7c:	100b883a 	mov	r5,r2
   8ea80:	0100bef4 	movhi	r4,763
   8ea84:	213c2004 	addi	r4,r4,-3968
   8ea88:	008a9b00 	call	8a9b0 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   8ea8c:	100b883a 	mov	r5,r2
   8ea90:	01200034 	movhi	r4,32768
   8ea94:	213fffc4 	addi	r4,r4,-1
   8ea98:	008a9b00 	call	8a9b0 <__udivsi3>
   8ea9c:	100b883a 	mov	r5,r2
   8eaa0:	e13fff17 	ldw	r4,-4(fp)
   8eaa4:	008a9b00 	call	8a9b0 <__udivsi3>
   8eaa8:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   8eaac:	e0bffe17 	ldw	r2,-8(fp)
   8eab0:	10002a26 	beq	r2,zero,8eb5c <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   8eab4:	e03ffc15 	stw	zero,-16(fp)
   8eab8:	00001706 	br	8eb18 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   8eabc:	00a00034 	movhi	r2,32768
   8eac0:	10bfffc4 	addi	r2,r2,-1
   8eac4:	10bfffc4 	addi	r2,r2,-1
   8eac8:	103ffe1e 	bne	r2,zero,8eac4 <alt_busy_sleep+0x74>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   8eacc:	014003f4 	movhi	r5,15
   8ead0:	29509004 	addi	r5,r5,16960
   8ead4:	e13ffd17 	ldw	r4,-12(fp)
   8ead8:	008aa6c0 	call	8aa6c <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   8eadc:	100b883a 	mov	r5,r2
   8eae0:	0100bef4 	movhi	r4,763
   8eae4:	213c2004 	addi	r4,r4,-3968
   8eae8:	008a9b00 	call	8a9b0 <__udivsi3>
   8eaec:	100b883a 	mov	r5,r2
   8eaf0:	01200034 	movhi	r4,32768
   8eaf4:	213fffc4 	addi	r4,r4,-1
   8eaf8:	008a9b00 	call	8a9b0 <__udivsi3>
   8eafc:	1007883a 	mov	r3,r2
   8eb00:	e0bfff17 	ldw	r2,-4(fp)
   8eb04:	10c5c83a 	sub	r2,r2,r3
   8eb08:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   8eb0c:	e0bffc17 	ldw	r2,-16(fp)
   8eb10:	10800044 	addi	r2,r2,1
   8eb14:	e0bffc15 	stw	r2,-16(fp)
   8eb18:	e0fffc17 	ldw	r3,-16(fp)
   8eb1c:	e0bffe17 	ldw	r2,-8(fp)
   8eb20:	18bfe616 	blt	r3,r2,8eabc <alt_busy_sleep+0x6c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   8eb24:	014003f4 	movhi	r5,15
   8eb28:	29509004 	addi	r5,r5,16960
   8eb2c:	e13ffd17 	ldw	r4,-12(fp)
   8eb30:	008aa6c0 	call	8aa6c <__mulsi3>
   8eb34:	100b883a 	mov	r5,r2
   8eb38:	0100bef4 	movhi	r4,763
   8eb3c:	213c2004 	addi	r4,r4,-3968
   8eb40:	008a9b00 	call	8a9b0 <__udivsi3>
   8eb44:	e17fff17 	ldw	r5,-4(fp)
   8eb48:	1009883a 	mov	r4,r2
   8eb4c:	008aa6c0 	call	8aa6c <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   8eb50:	10bfffc4 	addi	r2,r2,-1
   8eb54:	103ffe1e 	bne	r2,zero,8eb50 <alt_busy_sleep+0x100>
   8eb58:	00000d06 	br	8eb90 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   8eb5c:	014003f4 	movhi	r5,15
   8eb60:	29509004 	addi	r5,r5,16960
   8eb64:	e13ffd17 	ldw	r4,-12(fp)
   8eb68:	008aa6c0 	call	8aa6c <__mulsi3>
   8eb6c:	100b883a 	mov	r5,r2
   8eb70:	0100bef4 	movhi	r4,763
   8eb74:	213c2004 	addi	r4,r4,-3968
   8eb78:	008a9b00 	call	8a9b0 <__udivsi3>
   8eb7c:	e17fff17 	ldw	r5,-4(fp)
   8eb80:	1009883a 	mov	r4,r2
   8eb84:	008aa6c0 	call	8aa6c <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   8eb88:	10bfffc4 	addi	r2,r2,-1
   8eb8c:	00bffe16 	blt	zero,r2,8eb88 <alt_busy_sleep+0x138>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   8eb90:	0005883a 	mov	r2,zero
}
   8eb94:	e037883a 	mov	sp,fp
   8eb98:	dfc00117 	ldw	ra,4(sp)
   8eb9c:	df000017 	ldw	fp,0(sp)
   8eba0:	dec00204 	addi	sp,sp,8
   8eba4:	f800283a 	ret

0008eba8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   8eba8:	deffff04 	addi	sp,sp,-4
   8ebac:	df000015 	stw	fp,0(sp)
   8ebb0:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   8ebb4:	0001883a 	nop
   8ebb8:	e037883a 	mov	sp,fp
   8ebbc:	df000017 	ldw	fp,0(sp)
   8ebc0:	dec00104 	addi	sp,sp,4
   8ebc4:	f800283a 	ret

0008ebc8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8ebc8:	defffe04 	addi	sp,sp,-8
   8ebcc:	dfc00115 	stw	ra,4(sp)
   8ebd0:	df000015 	stw	fp,0(sp)
   8ebd4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8ebd8:	d0a00c17 	ldw	r2,-32720(gp)
   8ebdc:	10000326 	beq	r2,zero,8ebec <alt_get_errno+0x24>
   8ebe0:	d0a00c17 	ldw	r2,-32720(gp)
   8ebe4:	103ee83a 	callr	r2
   8ebe8:	00000106 	br	8ebf0 <alt_get_errno+0x28>
   8ebec:	d0a01704 	addi	r2,gp,-32676
}
   8ebf0:	e037883a 	mov	sp,fp
   8ebf4:	dfc00117 	ldw	ra,4(sp)
   8ebf8:	df000017 	ldw	fp,0(sp)
   8ebfc:	dec00204 	addi	sp,sp,8
   8ec00:	f800283a 	ret

0008ec04 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   8ec04:	defffa04 	addi	sp,sp,-24
   8ec08:	dfc00515 	stw	ra,20(sp)
   8ec0c:	df000415 	stw	fp,16(sp)
   8ec10:	df000404 	addi	fp,sp,16
   8ec14:	e13ffe15 	stw	r4,-8(fp)
   8ec18:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   8ec1c:	e0bffe17 	ldw	r2,-8(fp)
   8ec20:	10000326 	beq	r2,zero,8ec30 <alt_dev_llist_insert+0x2c>
   8ec24:	e0bffe17 	ldw	r2,-8(fp)
   8ec28:	10800217 	ldw	r2,8(r2)
   8ec2c:	1000061e 	bne	r2,zero,8ec48 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   8ec30:	008ebc80 	call	8ebc8 <alt_get_errno>
   8ec34:	1007883a 	mov	r3,r2
   8ec38:	00800584 	movi	r2,22
   8ec3c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   8ec40:	00bffa84 	movi	r2,-22
   8ec44:	00001306 	br	8ec94 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   8ec48:	e0bffe17 	ldw	r2,-8(fp)
   8ec4c:	e0ffff17 	ldw	r3,-4(fp)
   8ec50:	e0fffc15 	stw	r3,-16(fp)
   8ec54:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   8ec58:	e0bffd17 	ldw	r2,-12(fp)
   8ec5c:	e0fffc17 	ldw	r3,-16(fp)
   8ec60:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   8ec64:	e0bffc17 	ldw	r2,-16(fp)
   8ec68:	10c00017 	ldw	r3,0(r2)
   8ec6c:	e0bffd17 	ldw	r2,-12(fp)
   8ec70:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   8ec74:	e0bffc17 	ldw	r2,-16(fp)
   8ec78:	10800017 	ldw	r2,0(r2)
   8ec7c:	e0fffd17 	ldw	r3,-12(fp)
   8ec80:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   8ec84:	e0bffc17 	ldw	r2,-16(fp)
   8ec88:	e0fffd17 	ldw	r3,-12(fp)
   8ec8c:	10c00015 	stw	r3,0(r2)

  return 0;  
   8ec90:	0005883a 	mov	r2,zero
}
   8ec94:	e037883a 	mov	sp,fp
   8ec98:	dfc00117 	ldw	ra,4(sp)
   8ec9c:	df000017 	ldw	fp,0(sp)
   8eca0:	dec00204 	addi	sp,sp,8
   8eca4:	f800283a 	ret

0008eca8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   8eca8:	defffd04 	addi	sp,sp,-12
   8ecac:	dfc00215 	stw	ra,8(sp)
   8ecb0:	df000115 	stw	fp,4(sp)
   8ecb4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   8ecb8:	00800274 	movhi	r2,9
   8ecbc:	10bf1704 	addi	r2,r2,-932
   8ecc0:	e0bfff15 	stw	r2,-4(fp)
   8ecc4:	00000606 	br	8ece0 <_do_ctors+0x38>
        (*ctor) (); 
   8ecc8:	e0bfff17 	ldw	r2,-4(fp)
   8eccc:	10800017 	ldw	r2,0(r2)
   8ecd0:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   8ecd4:	e0bfff17 	ldw	r2,-4(fp)
   8ecd8:	10bfff04 	addi	r2,r2,-4
   8ecdc:	e0bfff15 	stw	r2,-4(fp)
   8ece0:	e0ffff17 	ldw	r3,-4(fp)
   8ece4:	00800274 	movhi	r2,9
   8ece8:	10bf1804 	addi	r2,r2,-928
   8ecec:	18bff62e 	bgeu	r3,r2,8ecc8 <_do_ctors+0x20>
        (*ctor) (); 
}
   8ecf0:	0001883a 	nop
   8ecf4:	e037883a 	mov	sp,fp
   8ecf8:	dfc00117 	ldw	ra,4(sp)
   8ecfc:	df000017 	ldw	fp,0(sp)
   8ed00:	dec00204 	addi	sp,sp,8
   8ed04:	f800283a 	ret

0008ed08 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   8ed08:	defffd04 	addi	sp,sp,-12
   8ed0c:	dfc00215 	stw	ra,8(sp)
   8ed10:	df000115 	stw	fp,4(sp)
   8ed14:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   8ed18:	00800274 	movhi	r2,9
   8ed1c:	10bf1704 	addi	r2,r2,-932
   8ed20:	e0bfff15 	stw	r2,-4(fp)
   8ed24:	00000606 	br	8ed40 <_do_dtors+0x38>
        (*dtor) (); 
   8ed28:	e0bfff17 	ldw	r2,-4(fp)
   8ed2c:	10800017 	ldw	r2,0(r2)
   8ed30:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   8ed34:	e0bfff17 	ldw	r2,-4(fp)
   8ed38:	10bfff04 	addi	r2,r2,-4
   8ed3c:	e0bfff15 	stw	r2,-4(fp)
   8ed40:	e0ffff17 	ldw	r3,-4(fp)
   8ed44:	00800274 	movhi	r2,9
   8ed48:	10bf1804 	addi	r2,r2,-928
   8ed4c:	18bff62e 	bgeu	r3,r2,8ed28 <_do_dtors+0x20>
        (*dtor) (); 
}
   8ed50:	0001883a 	nop
   8ed54:	e037883a 	mov	sp,fp
   8ed58:	dfc00117 	ldw	ra,4(sp)
   8ed5c:	df000017 	ldw	fp,0(sp)
   8ed60:	dec00204 	addi	sp,sp,8
   8ed64:	f800283a 	ret

0008ed68 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   8ed68:	deffff04 	addi	sp,sp,-4
   8ed6c:	df000015 	stw	fp,0(sp)
   8ed70:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   8ed74:	0001883a 	nop
   8ed78:	e037883a 	mov	sp,fp
   8ed7c:	df000017 	ldw	fp,0(sp)
   8ed80:	dec00104 	addi	sp,sp,4
   8ed84:	f800283a 	ret

0008ed88 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   8ed88:	defff904 	addi	sp,sp,-28
   8ed8c:	dfc00615 	stw	ra,24(sp)
   8ed90:	df000515 	stw	fp,20(sp)
   8ed94:	df000504 	addi	fp,sp,20
   8ed98:	e13ffc15 	stw	r4,-16(fp)
   8ed9c:	e17ffd15 	stw	r5,-12(fp)
   8eda0:	e1bffe15 	stw	r6,-8(fp)
   8eda4:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   8eda8:	e0800217 	ldw	r2,8(fp)
   8edac:	d8800015 	stw	r2,0(sp)
   8edb0:	e1ffff17 	ldw	r7,-4(fp)
   8edb4:	e1bffe17 	ldw	r6,-8(fp)
   8edb8:	e17ffd17 	ldw	r5,-12(fp)
   8edbc:	e13ffc17 	ldw	r4,-16(fp)
   8edc0:	008ef380 	call	8ef38 <alt_iic_isr_register>
}  
   8edc4:	e037883a 	mov	sp,fp
   8edc8:	dfc00117 	ldw	ra,4(sp)
   8edcc:	df000017 	ldw	fp,0(sp)
   8edd0:	dec00204 	addi	sp,sp,8
   8edd4:	f800283a 	ret

0008edd8 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   8edd8:	defff904 	addi	sp,sp,-28
   8eddc:	df000615 	stw	fp,24(sp)
   8ede0:	df000604 	addi	fp,sp,24
   8ede4:	e13ffe15 	stw	r4,-8(fp)
   8ede8:	e17fff15 	stw	r5,-4(fp)
   8edec:	e0bfff17 	ldw	r2,-4(fp)
   8edf0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8edf4:	0005303a 	rdctl	r2,status
   8edf8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8edfc:	e0fffb17 	ldw	r3,-20(fp)
   8ee00:	00bfff84 	movi	r2,-2
   8ee04:	1884703a 	and	r2,r3,r2
   8ee08:	1001703a 	wrctl	status,r2
  
  return context;
   8ee0c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   8ee10:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   8ee14:	00c00044 	movi	r3,1
   8ee18:	e0bffa17 	ldw	r2,-24(fp)
   8ee1c:	1884983a 	sll	r2,r3,r2
   8ee20:	1007883a 	mov	r3,r2
   8ee24:	d0a01b17 	ldw	r2,-32660(gp)
   8ee28:	1884b03a 	or	r2,r3,r2
   8ee2c:	d0a01b15 	stw	r2,-32660(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   8ee30:	d0a01b17 	ldw	r2,-32660(gp)
   8ee34:	100170fa 	wrctl	ienable,r2
   8ee38:	e0bffc17 	ldw	r2,-16(fp)
   8ee3c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8ee40:	e0bffd17 	ldw	r2,-12(fp)
   8ee44:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   8ee48:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   8ee4c:	0001883a 	nop
}
   8ee50:	e037883a 	mov	sp,fp
   8ee54:	df000017 	ldw	fp,0(sp)
   8ee58:	dec00104 	addi	sp,sp,4
   8ee5c:	f800283a 	ret

0008ee60 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   8ee60:	defff904 	addi	sp,sp,-28
   8ee64:	df000615 	stw	fp,24(sp)
   8ee68:	df000604 	addi	fp,sp,24
   8ee6c:	e13ffe15 	stw	r4,-8(fp)
   8ee70:	e17fff15 	stw	r5,-4(fp)
   8ee74:	e0bfff17 	ldw	r2,-4(fp)
   8ee78:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8ee7c:	0005303a 	rdctl	r2,status
   8ee80:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8ee84:	e0fffb17 	ldw	r3,-20(fp)
   8ee88:	00bfff84 	movi	r2,-2
   8ee8c:	1884703a 	and	r2,r3,r2
   8ee90:	1001703a 	wrctl	status,r2
  
  return context;
   8ee94:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   8ee98:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   8ee9c:	00c00044 	movi	r3,1
   8eea0:	e0bffa17 	ldw	r2,-24(fp)
   8eea4:	1884983a 	sll	r2,r3,r2
   8eea8:	0084303a 	nor	r2,zero,r2
   8eeac:	1007883a 	mov	r3,r2
   8eeb0:	d0a01b17 	ldw	r2,-32660(gp)
   8eeb4:	1884703a 	and	r2,r3,r2
   8eeb8:	d0a01b15 	stw	r2,-32660(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   8eebc:	d0a01b17 	ldw	r2,-32660(gp)
   8eec0:	100170fa 	wrctl	ienable,r2
   8eec4:	e0bffc17 	ldw	r2,-16(fp)
   8eec8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8eecc:	e0bffd17 	ldw	r2,-12(fp)
   8eed0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   8eed4:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   8eed8:	0001883a 	nop
}
   8eedc:	e037883a 	mov	sp,fp
   8eee0:	df000017 	ldw	fp,0(sp)
   8eee4:	dec00104 	addi	sp,sp,4
   8eee8:	f800283a 	ret

0008eeec <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   8eeec:	defffc04 	addi	sp,sp,-16
   8eef0:	df000315 	stw	fp,12(sp)
   8eef4:	df000304 	addi	fp,sp,12
   8eef8:	e13ffe15 	stw	r4,-8(fp)
   8eefc:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   8ef00:	000530fa 	rdctl	r2,ienable
   8ef04:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   8ef08:	00c00044 	movi	r3,1
   8ef0c:	e0bfff17 	ldw	r2,-4(fp)
   8ef10:	1884983a 	sll	r2,r3,r2
   8ef14:	1007883a 	mov	r3,r2
   8ef18:	e0bffd17 	ldw	r2,-12(fp)
   8ef1c:	1884703a 	and	r2,r3,r2
   8ef20:	1004c03a 	cmpne	r2,r2,zero
   8ef24:	10803fcc 	andi	r2,r2,255
}
   8ef28:	e037883a 	mov	sp,fp
   8ef2c:	df000017 	ldw	fp,0(sp)
   8ef30:	dec00104 	addi	sp,sp,4
   8ef34:	f800283a 	ret

0008ef38 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   8ef38:	defff504 	addi	sp,sp,-44
   8ef3c:	dfc00a15 	stw	ra,40(sp)
   8ef40:	df000915 	stw	fp,36(sp)
   8ef44:	df000904 	addi	fp,sp,36
   8ef48:	e13ffc15 	stw	r4,-16(fp)
   8ef4c:	e17ffd15 	stw	r5,-12(fp)
   8ef50:	e1bffe15 	stw	r6,-8(fp)
   8ef54:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   8ef58:	00bffa84 	movi	r2,-22
   8ef5c:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   8ef60:	e0bffd17 	ldw	r2,-12(fp)
   8ef64:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   8ef68:	e0bff817 	ldw	r2,-32(fp)
   8ef6c:	10800808 	cmpgei	r2,r2,32
   8ef70:	1000271e 	bne	r2,zero,8f010 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8ef74:	0005303a 	rdctl	r2,status
   8ef78:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8ef7c:	e0fffb17 	ldw	r3,-20(fp)
   8ef80:	00bfff84 	movi	r2,-2
   8ef84:	1884703a 	and	r2,r3,r2
   8ef88:	1001703a 	wrctl	status,r2
  
  return context;
   8ef8c:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   8ef90:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   8ef94:	00800134 	movhi	r2,4
   8ef98:	1087a004 	addi	r2,r2,7808
   8ef9c:	e0fff817 	ldw	r3,-32(fp)
   8efa0:	180690fa 	slli	r3,r3,3
   8efa4:	10c5883a 	add	r2,r2,r3
   8efa8:	e0fffe17 	ldw	r3,-8(fp)
   8efac:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   8efb0:	00800134 	movhi	r2,4
   8efb4:	1087a004 	addi	r2,r2,7808
   8efb8:	e0fff817 	ldw	r3,-32(fp)
   8efbc:	180690fa 	slli	r3,r3,3
   8efc0:	10c5883a 	add	r2,r2,r3
   8efc4:	10800104 	addi	r2,r2,4
   8efc8:	e0ffff17 	ldw	r3,-4(fp)
   8efcc:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   8efd0:	e0bffe17 	ldw	r2,-8(fp)
   8efd4:	10000526 	beq	r2,zero,8efec <alt_iic_isr_register+0xb4>
   8efd8:	e0bff817 	ldw	r2,-32(fp)
   8efdc:	100b883a 	mov	r5,r2
   8efe0:	e13ffc17 	ldw	r4,-16(fp)
   8efe4:	008edd80 	call	8edd8 <alt_ic_irq_enable>
   8efe8:	00000406 	br	8effc <alt_iic_isr_register+0xc4>
   8efec:	e0bff817 	ldw	r2,-32(fp)
   8eff0:	100b883a 	mov	r5,r2
   8eff4:	e13ffc17 	ldw	r4,-16(fp)
   8eff8:	008ee600 	call	8ee60 <alt_ic_irq_disable>
   8effc:	e0bff715 	stw	r2,-36(fp)
   8f000:	e0bffa17 	ldw	r2,-24(fp)
   8f004:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8f008:	e0bff917 	ldw	r2,-28(fp)
   8f00c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   8f010:	e0bff717 	ldw	r2,-36(fp)
}
   8f014:	e037883a 	mov	sp,fp
   8f018:	dfc00117 	ldw	ra,4(sp)
   8f01c:	df000017 	ldw	fp,0(sp)
   8f020:	dec00204 	addi	sp,sp,8
   8f024:	f800283a 	ret

0008f028 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   8f028:	defff804 	addi	sp,sp,-32
   8f02c:	dfc00715 	stw	ra,28(sp)
   8f030:	df000615 	stw	fp,24(sp)
   8f034:	dc000515 	stw	r16,20(sp)
   8f038:	df000604 	addi	fp,sp,24
   8f03c:	e13ffb15 	stw	r4,-20(fp)
   8f040:	e17ffc15 	stw	r5,-16(fp)
   8f044:	e1bffd15 	stw	r6,-12(fp)
   8f048:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
   8f04c:	e1bffe17 	ldw	r6,-8(fp)
   8f050:	e17ffd17 	ldw	r5,-12(fp)
   8f054:	e13ffc17 	ldw	r4,-16(fp)
   8f058:	008f2b00 	call	8f2b0 <open>
   8f05c:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
   8f060:	e0bffa17 	ldw	r2,-24(fp)
   8f064:	10002216 	blt	r2,zero,8f0f0 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
   8f068:	04000134 	movhi	r16,4
   8f06c:	8402ff04 	addi	r16,r16,3068
   8f070:	e0bffa17 	ldw	r2,-24(fp)
   8f074:	01400304 	movi	r5,12
   8f078:	1009883a 	mov	r4,r2
   8f07c:	008aa6c0 	call	8aa6c <__mulsi3>
   8f080:	8085883a 	add	r2,r16,r2
   8f084:	10c00017 	ldw	r3,0(r2)
   8f088:	e0bffb17 	ldw	r2,-20(fp)
   8f08c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   8f090:	04000134 	movhi	r16,4
   8f094:	8402ff04 	addi	r16,r16,3068
   8f098:	e0bffa17 	ldw	r2,-24(fp)
   8f09c:	01400304 	movi	r5,12
   8f0a0:	1009883a 	mov	r4,r2
   8f0a4:	008aa6c0 	call	8aa6c <__mulsi3>
   8f0a8:	8085883a 	add	r2,r16,r2
   8f0ac:	10800104 	addi	r2,r2,4
   8f0b0:	10c00017 	ldw	r3,0(r2)
   8f0b4:	e0bffb17 	ldw	r2,-20(fp)
   8f0b8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   8f0bc:	04000134 	movhi	r16,4
   8f0c0:	8402ff04 	addi	r16,r16,3068
   8f0c4:	e0bffa17 	ldw	r2,-24(fp)
   8f0c8:	01400304 	movi	r5,12
   8f0cc:	1009883a 	mov	r4,r2
   8f0d0:	008aa6c0 	call	8aa6c <__mulsi3>
   8f0d4:	8085883a 	add	r2,r16,r2
   8f0d8:	10800204 	addi	r2,r2,8
   8f0dc:	10c00017 	ldw	r3,0(r2)
   8f0e0:	e0bffb17 	ldw	r2,-20(fp)
   8f0e4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   8f0e8:	e13ffa17 	ldw	r4,-24(fp)
   8f0ec:	008da5c0 	call	8da5c <alt_release_fd>
  }
} 
   8f0f0:	0001883a 	nop
   8f0f4:	e6ffff04 	addi	sp,fp,-4
   8f0f8:	dfc00217 	ldw	ra,8(sp)
   8f0fc:	df000117 	ldw	fp,4(sp)
   8f100:	dc000017 	ldw	r16,0(sp)
   8f104:	dec00304 	addi	sp,sp,12
   8f108:	f800283a 	ret

0008f10c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   8f10c:	defffb04 	addi	sp,sp,-20
   8f110:	dfc00415 	stw	ra,16(sp)
   8f114:	df000315 	stw	fp,12(sp)
   8f118:	df000304 	addi	fp,sp,12
   8f11c:	e13ffd15 	stw	r4,-12(fp)
   8f120:	e17ffe15 	stw	r5,-8(fp)
   8f124:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   8f128:	01c07fc4 	movi	r7,511
   8f12c:	01800044 	movi	r6,1
   8f130:	e17ffd17 	ldw	r5,-12(fp)
   8f134:	01000134 	movhi	r4,4
   8f138:	21030204 	addi	r4,r4,3080
   8f13c:	008f0280 	call	8f028 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   8f140:	01c07fc4 	movi	r7,511
   8f144:	000d883a 	mov	r6,zero
   8f148:	e17ffe17 	ldw	r5,-8(fp)
   8f14c:	01000134 	movhi	r4,4
   8f150:	2102ff04 	addi	r4,r4,3068
   8f154:	008f0280 	call	8f028 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   8f158:	01c07fc4 	movi	r7,511
   8f15c:	01800044 	movi	r6,1
   8f160:	e17fff17 	ldw	r5,-4(fp)
   8f164:	01000134 	movhi	r4,4
   8f168:	21030504 	addi	r4,r4,3092
   8f16c:	008f0280 	call	8f028 <alt_open_fd>
}  
   8f170:	0001883a 	nop
   8f174:	e037883a 	mov	sp,fp
   8f178:	dfc00117 	ldw	ra,4(sp)
   8f17c:	df000017 	ldw	fp,0(sp)
   8f180:	dec00204 	addi	sp,sp,8
   8f184:	f800283a 	ret

0008f188 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8f188:	defffe04 	addi	sp,sp,-8
   8f18c:	dfc00115 	stw	ra,4(sp)
   8f190:	df000015 	stw	fp,0(sp)
   8f194:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8f198:	d0a00c17 	ldw	r2,-32720(gp)
   8f19c:	10000326 	beq	r2,zero,8f1ac <alt_get_errno+0x24>
   8f1a0:	d0a00c17 	ldw	r2,-32720(gp)
   8f1a4:	103ee83a 	callr	r2
   8f1a8:	00000106 	br	8f1b0 <alt_get_errno+0x28>
   8f1ac:	d0a01704 	addi	r2,gp,-32676
}
   8f1b0:	e037883a 	mov	sp,fp
   8f1b4:	dfc00117 	ldw	ra,4(sp)
   8f1b8:	df000017 	ldw	fp,0(sp)
   8f1bc:	dec00204 	addi	sp,sp,8
   8f1c0:	f800283a 	ret

0008f1c4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   8f1c4:	defffb04 	addi	sp,sp,-20
   8f1c8:	dfc00415 	stw	ra,16(sp)
   8f1cc:	df000315 	stw	fp,12(sp)
   8f1d0:	dc000215 	stw	r16,8(sp)
   8f1d4:	df000304 	addi	fp,sp,12
   8f1d8:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   8f1dc:	e0bffe17 	ldw	r2,-8(fp)
   8f1e0:	10800217 	ldw	r2,8(r2)
   8f1e4:	10d00034 	orhi	r3,r2,16384
   8f1e8:	e0bffe17 	ldw	r2,-8(fp)
   8f1ec:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   8f1f0:	e03ffd15 	stw	zero,-12(fp)
   8f1f4:	00002306 	br	8f284 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   8f1f8:	04000134 	movhi	r16,4
   8f1fc:	8402ff04 	addi	r16,r16,3068
   8f200:	e0bffd17 	ldw	r2,-12(fp)
   8f204:	01400304 	movi	r5,12
   8f208:	1009883a 	mov	r4,r2
   8f20c:	008aa6c0 	call	8aa6c <__mulsi3>
   8f210:	8085883a 	add	r2,r16,r2
   8f214:	10c00017 	ldw	r3,0(r2)
   8f218:	e0bffe17 	ldw	r2,-8(fp)
   8f21c:	10800017 	ldw	r2,0(r2)
   8f220:	1880151e 	bne	r3,r2,8f278 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   8f224:	04000134 	movhi	r16,4
   8f228:	8402ff04 	addi	r16,r16,3068
   8f22c:	e0bffd17 	ldw	r2,-12(fp)
   8f230:	01400304 	movi	r5,12
   8f234:	1009883a 	mov	r4,r2
   8f238:	008aa6c0 	call	8aa6c <__mulsi3>
   8f23c:	8085883a 	add	r2,r16,r2
   8f240:	10800204 	addi	r2,r2,8
   8f244:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   8f248:	10000b0e 	bge	r2,zero,8f278 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   8f24c:	01400304 	movi	r5,12
   8f250:	e13ffd17 	ldw	r4,-12(fp)
   8f254:	008aa6c0 	call	8aa6c <__mulsi3>
   8f258:	1007883a 	mov	r3,r2
   8f25c:	00800134 	movhi	r2,4
   8f260:	1082ff04 	addi	r2,r2,3068
   8f264:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   8f268:	e0bffe17 	ldw	r2,-8(fp)
   8f26c:	18800226 	beq	r3,r2,8f278 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   8f270:	00bffcc4 	movi	r2,-13
   8f274:	00000806 	br	8f298 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   8f278:	e0bffd17 	ldw	r2,-12(fp)
   8f27c:	10800044 	addi	r2,r2,1
   8f280:	e0bffd15 	stw	r2,-12(fp)
   8f284:	d0a00b17 	ldw	r2,-32724(gp)
   8f288:	1007883a 	mov	r3,r2
   8f28c:	e0bffd17 	ldw	r2,-12(fp)
   8f290:	18bfd92e 	bgeu	r3,r2,8f1f8 <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   8f294:	0005883a 	mov	r2,zero
}
   8f298:	e6ffff04 	addi	sp,fp,-4
   8f29c:	dfc00217 	ldw	ra,8(sp)
   8f2a0:	df000117 	ldw	fp,4(sp)
   8f2a4:	dc000017 	ldw	r16,0(sp)
   8f2a8:	dec00304 	addi	sp,sp,12
   8f2ac:	f800283a 	ret

0008f2b0 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   8f2b0:	defff604 	addi	sp,sp,-40
   8f2b4:	dfc00915 	stw	ra,36(sp)
   8f2b8:	df000815 	stw	fp,32(sp)
   8f2bc:	df000804 	addi	fp,sp,32
   8f2c0:	e13ffd15 	stw	r4,-12(fp)
   8f2c4:	e17ffe15 	stw	r5,-8(fp)
   8f2c8:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   8f2cc:	00bfffc4 	movi	r2,-1
   8f2d0:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   8f2d4:	00bffb44 	movi	r2,-19
   8f2d8:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   8f2dc:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   8f2e0:	d1600904 	addi	r5,gp,-32732
   8f2e4:	e13ffd17 	ldw	r4,-12(fp)
   8f2e8:	008f5d40 	call	8f5d4 <alt_find_dev>
   8f2ec:	e0bff815 	stw	r2,-32(fp)
   8f2f0:	e0bff817 	ldw	r2,-32(fp)
   8f2f4:	1000051e 	bne	r2,zero,8f30c <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   8f2f8:	e13ffd17 	ldw	r4,-12(fp)
   8f2fc:	008f6640 	call	8f664 <alt_find_file>
   8f300:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   8f304:	00800044 	movi	r2,1
   8f308:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   8f30c:	e0bff817 	ldw	r2,-32(fp)
   8f310:	10002b26 	beq	r2,zero,8f3c0 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
   8f314:	e13ff817 	ldw	r4,-32(fp)
   8f318:	008f76c0 	call	8f76c <alt_get_fd>
   8f31c:	e0bff915 	stw	r2,-28(fp)
   8f320:	e0bff917 	ldw	r2,-28(fp)
   8f324:	1000030e 	bge	r2,zero,8f334 <open+0x84>
    {
      status = index;
   8f328:	e0bff917 	ldw	r2,-28(fp)
   8f32c:	e0bffa15 	stw	r2,-24(fp)
   8f330:	00002506 	br	8f3c8 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
   8f334:	01400304 	movi	r5,12
   8f338:	e13ff917 	ldw	r4,-28(fp)
   8f33c:	008aa6c0 	call	8aa6c <__mulsi3>
   8f340:	1007883a 	mov	r3,r2
   8f344:	00800134 	movhi	r2,4
   8f348:	1082ff04 	addi	r2,r2,3068
   8f34c:	1885883a 	add	r2,r3,r2
   8f350:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   8f354:	e0fffe17 	ldw	r3,-8(fp)
   8f358:	00900034 	movhi	r2,16384
   8f35c:	10bfffc4 	addi	r2,r2,-1
   8f360:	1886703a 	and	r3,r3,r2
   8f364:	e0bffc17 	ldw	r2,-16(fp)
   8f368:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   8f36c:	e0bffb17 	ldw	r2,-20(fp)
   8f370:	1000051e 	bne	r2,zero,8f388 <open+0xd8>
   8f374:	e13ffc17 	ldw	r4,-16(fp)
   8f378:	008f1c40 	call	8f1c4 <alt_file_locked>
   8f37c:	e0bffa15 	stw	r2,-24(fp)
   8f380:	e0bffa17 	ldw	r2,-24(fp)
   8f384:	10001016 	blt	r2,zero,8f3c8 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   8f388:	e0bff817 	ldw	r2,-32(fp)
   8f38c:	10800317 	ldw	r2,12(r2)
   8f390:	10000826 	beq	r2,zero,8f3b4 <open+0x104>
   8f394:	e0bff817 	ldw	r2,-32(fp)
   8f398:	10800317 	ldw	r2,12(r2)
   8f39c:	e1ffff17 	ldw	r7,-4(fp)
   8f3a0:	e1bffe17 	ldw	r6,-8(fp)
   8f3a4:	e17ffd17 	ldw	r5,-12(fp)
   8f3a8:	e13ffc17 	ldw	r4,-16(fp)
   8f3ac:	103ee83a 	callr	r2
   8f3b0:	00000106 	br	8f3b8 <open+0x108>
   8f3b4:	0005883a 	mov	r2,zero
   8f3b8:	e0bffa15 	stw	r2,-24(fp)
   8f3bc:	00000206 	br	8f3c8 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
   8f3c0:	00bffb44 	movi	r2,-19
   8f3c4:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   8f3c8:	e0bffa17 	ldw	r2,-24(fp)
   8f3cc:	1000090e 	bge	r2,zero,8f3f4 <open+0x144>
  {
    alt_release_fd (index);  
   8f3d0:	e13ff917 	ldw	r4,-28(fp)
   8f3d4:	008da5c0 	call	8da5c <alt_release_fd>
    ALT_ERRNO = -status;
   8f3d8:	008f1880 	call	8f188 <alt_get_errno>
   8f3dc:	1007883a 	mov	r3,r2
   8f3e0:	e0bffa17 	ldw	r2,-24(fp)
   8f3e4:	0085c83a 	sub	r2,zero,r2
   8f3e8:	18800015 	stw	r2,0(r3)
    return -1;
   8f3ec:	00bfffc4 	movi	r2,-1
   8f3f0:	00000106 	br	8f3f8 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
   8f3f4:	e0bff917 	ldw	r2,-28(fp)
}
   8f3f8:	e037883a 	mov	sp,fp
   8f3fc:	dfc00117 	ldw	ra,4(sp)
   8f400:	df000017 	ldw	fp,0(sp)
   8f404:	dec00204 	addi	sp,sp,8
   8f408:	f800283a 	ret

0008f40c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   8f40c:	defffa04 	addi	sp,sp,-24
   8f410:	df000515 	stw	fp,20(sp)
   8f414:	df000504 	addi	fp,sp,20
   8f418:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8f41c:	0005303a 	rdctl	r2,status
   8f420:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8f424:	e0fffc17 	ldw	r3,-16(fp)
   8f428:	00bfff84 	movi	r2,-2
   8f42c:	1884703a 	and	r2,r3,r2
   8f430:	1001703a 	wrctl	status,r2
  
  return context;
   8f434:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   8f438:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   8f43c:	e0bfff17 	ldw	r2,-4(fp)
   8f440:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   8f444:	e0bffd17 	ldw	r2,-12(fp)
   8f448:	10800017 	ldw	r2,0(r2)
   8f44c:	e0fffd17 	ldw	r3,-12(fp)
   8f450:	18c00117 	ldw	r3,4(r3)
   8f454:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   8f458:	e0bffd17 	ldw	r2,-12(fp)
   8f45c:	10800117 	ldw	r2,4(r2)
   8f460:	e0fffd17 	ldw	r3,-12(fp)
   8f464:	18c00017 	ldw	r3,0(r3)
   8f468:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   8f46c:	e0bffd17 	ldw	r2,-12(fp)
   8f470:	e0fffd17 	ldw	r3,-12(fp)
   8f474:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   8f478:	e0bffd17 	ldw	r2,-12(fp)
   8f47c:	e0fffd17 	ldw	r3,-12(fp)
   8f480:	10c00015 	stw	r3,0(r2)
   8f484:	e0bffb17 	ldw	r2,-20(fp)
   8f488:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8f48c:	e0bffe17 	ldw	r2,-8(fp)
   8f490:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   8f494:	0001883a 	nop
   8f498:	e037883a 	mov	sp,fp
   8f49c:	df000017 	ldw	fp,0(sp)
   8f4a0:	dec00104 	addi	sp,sp,4
   8f4a4:	f800283a 	ret

0008f4a8 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   8f4a8:	defffb04 	addi	sp,sp,-20
   8f4ac:	dfc00415 	stw	ra,16(sp)
   8f4b0:	df000315 	stw	fp,12(sp)
   8f4b4:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   8f4b8:	d0a00f17 	ldw	r2,-32708(gp)
   8f4bc:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   8f4c0:	d0a01d17 	ldw	r2,-32652(gp)
   8f4c4:	10800044 	addi	r2,r2,1
   8f4c8:	d0a01d15 	stw	r2,-32652(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   8f4cc:	00002e06 	br	8f588 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   8f4d0:	e0bffd17 	ldw	r2,-12(fp)
   8f4d4:	10800017 	ldw	r2,0(r2)
   8f4d8:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   8f4dc:	e0bffd17 	ldw	r2,-12(fp)
   8f4e0:	10800403 	ldbu	r2,16(r2)
   8f4e4:	10803fcc 	andi	r2,r2,255
   8f4e8:	10000426 	beq	r2,zero,8f4fc <alt_tick+0x54>
   8f4ec:	d0a01d17 	ldw	r2,-32652(gp)
   8f4f0:	1000021e 	bne	r2,zero,8f4fc <alt_tick+0x54>
    {
      alarm->rollover = 0;
   8f4f4:	e0bffd17 	ldw	r2,-12(fp)
   8f4f8:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   8f4fc:	e0bffd17 	ldw	r2,-12(fp)
   8f500:	10800217 	ldw	r2,8(r2)
   8f504:	d0e01d17 	ldw	r3,-32652(gp)
   8f508:	18801d36 	bltu	r3,r2,8f580 <alt_tick+0xd8>
   8f50c:	e0bffd17 	ldw	r2,-12(fp)
   8f510:	10800403 	ldbu	r2,16(r2)
   8f514:	10803fcc 	andi	r2,r2,255
   8f518:	1000191e 	bne	r2,zero,8f580 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   8f51c:	e0bffd17 	ldw	r2,-12(fp)
   8f520:	10800317 	ldw	r2,12(r2)
   8f524:	e0fffd17 	ldw	r3,-12(fp)
   8f528:	18c00517 	ldw	r3,20(r3)
   8f52c:	1809883a 	mov	r4,r3
   8f530:	103ee83a 	callr	r2
   8f534:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   8f538:	e0bfff17 	ldw	r2,-4(fp)
   8f53c:	1000031e 	bne	r2,zero,8f54c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   8f540:	e13ffd17 	ldw	r4,-12(fp)
   8f544:	008f40c0 	call	8f40c <alt_alarm_stop>
   8f548:	00000d06 	br	8f580 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   8f54c:	e0bffd17 	ldw	r2,-12(fp)
   8f550:	10c00217 	ldw	r3,8(r2)
   8f554:	e0bfff17 	ldw	r2,-4(fp)
   8f558:	1887883a 	add	r3,r3,r2
   8f55c:	e0bffd17 	ldw	r2,-12(fp)
   8f560:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   8f564:	e0bffd17 	ldw	r2,-12(fp)
   8f568:	10c00217 	ldw	r3,8(r2)
   8f56c:	d0a01d17 	ldw	r2,-32652(gp)
   8f570:	1880032e 	bgeu	r3,r2,8f580 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   8f574:	e0bffd17 	ldw	r2,-12(fp)
   8f578:	00c00044 	movi	r3,1
   8f57c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   8f580:	e0bffe17 	ldw	r2,-8(fp)
   8f584:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   8f588:	e0fffd17 	ldw	r3,-12(fp)
   8f58c:	d0a00f04 	addi	r2,gp,-32708
   8f590:	18bfcf1e 	bne	r3,r2,8f4d0 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   8f594:	0001883a 	nop
}
   8f598:	0001883a 	nop
   8f59c:	e037883a 	mov	sp,fp
   8f5a0:	dfc00117 	ldw	ra,4(sp)
   8f5a4:	df000017 	ldw	fp,0(sp)
   8f5a8:	dec00204 	addi	sp,sp,8
   8f5ac:	f800283a 	ret

0008f5b0 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   8f5b0:	deffff04 	addi	sp,sp,-4
   8f5b4:	df000015 	stw	fp,0(sp)
   8f5b8:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   8f5bc:	000170fa 	wrctl	ienable,zero
}
   8f5c0:	0001883a 	nop
   8f5c4:	e037883a 	mov	sp,fp
   8f5c8:	df000017 	ldw	fp,0(sp)
   8f5cc:	dec00104 	addi	sp,sp,4
   8f5d0:	f800283a 	ret

0008f5d4 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   8f5d4:	defffa04 	addi	sp,sp,-24
   8f5d8:	dfc00515 	stw	ra,20(sp)
   8f5dc:	df000415 	stw	fp,16(sp)
   8f5e0:	df000404 	addi	fp,sp,16
   8f5e4:	e13ffe15 	stw	r4,-8(fp)
   8f5e8:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   8f5ec:	e0bfff17 	ldw	r2,-4(fp)
   8f5f0:	10800017 	ldw	r2,0(r2)
   8f5f4:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   8f5f8:	e13ffe17 	ldw	r4,-8(fp)
   8f5fc:	00805380 	call	80538 <strlen>
   8f600:	10800044 	addi	r2,r2,1
   8f604:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   8f608:	00000d06 	br	8f640 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   8f60c:	e0bffc17 	ldw	r2,-16(fp)
   8f610:	10800217 	ldw	r2,8(r2)
   8f614:	e0fffd17 	ldw	r3,-12(fp)
   8f618:	180d883a 	mov	r6,r3
   8f61c:	e17ffe17 	ldw	r5,-8(fp)
   8f620:	1009883a 	mov	r4,r2
   8f624:	008f9180 	call	8f918 <memcmp>
   8f628:	1000021e 	bne	r2,zero,8f634 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   8f62c:	e0bffc17 	ldw	r2,-16(fp)
   8f630:	00000706 	br	8f650 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   8f634:	e0bffc17 	ldw	r2,-16(fp)
   8f638:	10800017 	ldw	r2,0(r2)
   8f63c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   8f640:	e0fffc17 	ldw	r3,-16(fp)
   8f644:	e0bfff17 	ldw	r2,-4(fp)
   8f648:	18bff01e 	bne	r3,r2,8f60c <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   8f64c:	0005883a 	mov	r2,zero
}
   8f650:	e037883a 	mov	sp,fp
   8f654:	dfc00117 	ldw	ra,4(sp)
   8f658:	df000017 	ldw	fp,0(sp)
   8f65c:	dec00204 	addi	sp,sp,8
   8f660:	f800283a 	ret

0008f664 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   8f664:	defffb04 	addi	sp,sp,-20
   8f668:	dfc00415 	stw	ra,16(sp)
   8f66c:	df000315 	stw	fp,12(sp)
   8f670:	df000304 	addi	fp,sp,12
   8f674:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   8f678:	d0a00717 	ldw	r2,-32740(gp)
   8f67c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   8f680:	00003106 	br	8f748 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   8f684:	e0bffd17 	ldw	r2,-12(fp)
   8f688:	10800217 	ldw	r2,8(r2)
   8f68c:	1009883a 	mov	r4,r2
   8f690:	00805380 	call	80538 <strlen>
   8f694:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   8f698:	e0bffd17 	ldw	r2,-12(fp)
   8f69c:	10c00217 	ldw	r3,8(r2)
   8f6a0:	e0bffe17 	ldw	r2,-8(fp)
   8f6a4:	10bfffc4 	addi	r2,r2,-1
   8f6a8:	1885883a 	add	r2,r3,r2
   8f6ac:	10800003 	ldbu	r2,0(r2)
   8f6b0:	10803fcc 	andi	r2,r2,255
   8f6b4:	1080201c 	xori	r2,r2,128
   8f6b8:	10bfe004 	addi	r2,r2,-128
   8f6bc:	10800bd8 	cmpnei	r2,r2,47
   8f6c0:	1000031e 	bne	r2,zero,8f6d0 <alt_find_file+0x6c>
    {
      len -= 1;
   8f6c4:	e0bffe17 	ldw	r2,-8(fp)
   8f6c8:	10bfffc4 	addi	r2,r2,-1
   8f6cc:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   8f6d0:	e0bffe17 	ldw	r2,-8(fp)
   8f6d4:	e0ffff17 	ldw	r3,-4(fp)
   8f6d8:	1885883a 	add	r2,r3,r2
   8f6dc:	10800003 	ldbu	r2,0(r2)
   8f6e0:	10803fcc 	andi	r2,r2,255
   8f6e4:	1080201c 	xori	r2,r2,128
   8f6e8:	10bfe004 	addi	r2,r2,-128
   8f6ec:	10800be0 	cmpeqi	r2,r2,47
   8f6f0:	1000081e 	bne	r2,zero,8f714 <alt_find_file+0xb0>
   8f6f4:	e0bffe17 	ldw	r2,-8(fp)
   8f6f8:	e0ffff17 	ldw	r3,-4(fp)
   8f6fc:	1885883a 	add	r2,r3,r2
   8f700:	10800003 	ldbu	r2,0(r2)
   8f704:	10803fcc 	andi	r2,r2,255
   8f708:	1080201c 	xori	r2,r2,128
   8f70c:	10bfe004 	addi	r2,r2,-128
   8f710:	10000a1e 	bne	r2,zero,8f73c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   8f714:	e0bffd17 	ldw	r2,-12(fp)
   8f718:	10800217 	ldw	r2,8(r2)
   8f71c:	e0fffe17 	ldw	r3,-8(fp)
   8f720:	180d883a 	mov	r6,r3
   8f724:	e17fff17 	ldw	r5,-4(fp)
   8f728:	1009883a 	mov	r4,r2
   8f72c:	008f9180 	call	8f918 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   8f730:	1000021e 	bne	r2,zero,8f73c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   8f734:	e0bffd17 	ldw	r2,-12(fp)
   8f738:	00000706 	br	8f758 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   8f73c:	e0bffd17 	ldw	r2,-12(fp)
   8f740:	10800017 	ldw	r2,0(r2)
   8f744:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   8f748:	e0fffd17 	ldw	r3,-12(fp)
   8f74c:	d0a00704 	addi	r2,gp,-32740
   8f750:	18bfcc1e 	bne	r3,r2,8f684 <alt_find_file+0x20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   8f754:	0005883a 	mov	r2,zero
}
   8f758:	e037883a 	mov	sp,fp
   8f75c:	dfc00117 	ldw	ra,4(sp)
   8f760:	df000017 	ldw	fp,0(sp)
   8f764:	dec00204 	addi	sp,sp,8
   8f768:	f800283a 	ret

0008f76c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   8f76c:	defffa04 	addi	sp,sp,-24
   8f770:	dfc00515 	stw	ra,20(sp)
   8f774:	df000415 	stw	fp,16(sp)
   8f778:	dc000315 	stw	r16,12(sp)
   8f77c:	df000404 	addi	fp,sp,16
   8f780:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
   8f784:	00bffa04 	movi	r2,-24
   8f788:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   8f78c:	e03ffc15 	stw	zero,-16(fp)
   8f790:	00001d06 	br	8f808 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
   8f794:	04000134 	movhi	r16,4
   8f798:	8402ff04 	addi	r16,r16,3068
   8f79c:	e0bffc17 	ldw	r2,-16(fp)
   8f7a0:	01400304 	movi	r5,12
   8f7a4:	1009883a 	mov	r4,r2
   8f7a8:	008aa6c0 	call	8aa6c <__mulsi3>
   8f7ac:	8085883a 	add	r2,r16,r2
   8f7b0:	10800017 	ldw	r2,0(r2)
   8f7b4:	1000111e 	bne	r2,zero,8f7fc <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
   8f7b8:	04000134 	movhi	r16,4
   8f7bc:	8402ff04 	addi	r16,r16,3068
   8f7c0:	e0bffc17 	ldw	r2,-16(fp)
   8f7c4:	01400304 	movi	r5,12
   8f7c8:	1009883a 	mov	r4,r2
   8f7cc:	008aa6c0 	call	8aa6c <__mulsi3>
   8f7d0:	8085883a 	add	r2,r16,r2
   8f7d4:	e0fffe17 	ldw	r3,-8(fp)
   8f7d8:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   8f7dc:	d0e00b17 	ldw	r3,-32724(gp)
   8f7e0:	e0bffc17 	ldw	r2,-16(fp)
   8f7e4:	1880020e 	bge	r3,r2,8f7f0 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
   8f7e8:	e0bffc17 	ldw	r2,-16(fp)
   8f7ec:	d0a00b15 	stw	r2,-32724(gp)
      }
      rc = i;
   8f7f0:	e0bffc17 	ldw	r2,-16(fp)
   8f7f4:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   8f7f8:	00000606 	br	8f814 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   8f7fc:	e0bffc17 	ldw	r2,-16(fp)
   8f800:	10800044 	addi	r2,r2,1
   8f804:	e0bffc15 	stw	r2,-16(fp)
   8f808:	e0bffc17 	ldw	r2,-16(fp)
   8f80c:	10800810 	cmplti	r2,r2,32
   8f810:	103fe01e 	bne	r2,zero,8f794 <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   8f814:	e0bffd17 	ldw	r2,-12(fp)
}
   8f818:	e6ffff04 	addi	sp,fp,-4
   8f81c:	dfc00217 	ldw	ra,8(sp)
   8f820:	df000117 	ldw	fp,4(sp)
   8f824:	dc000017 	ldw	r16,0(sp)
   8f828:	dec00304 	addi	sp,sp,12
   8f82c:	f800283a 	ret

0008f830 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   8f830:	defffe04 	addi	sp,sp,-8
   8f834:	df000115 	stw	fp,4(sp)
   8f838:	df000104 	addi	fp,sp,4
   8f83c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   8f840:	e0bfff17 	ldw	r2,-4(fp)
   8f844:	10bffe84 	addi	r2,r2,-6
   8f848:	10c00428 	cmpgeui	r3,r2,16
   8f84c:	18001a1e 	bne	r3,zero,8f8b8 <alt_exception_cause_generated_bad_addr+0x88>
   8f850:	100690ba 	slli	r3,r2,2
   8f854:	00800274 	movhi	r2,9
   8f858:	10be1a04 	addi	r2,r2,-1944
   8f85c:	1885883a 	add	r2,r3,r2
   8f860:	10800017 	ldw	r2,0(r2)
   8f864:	1000683a 	jmp	r2
   8f868:	0008f8a8 	cmpgeui	zero,zero,9186
   8f86c:	0008f8a8 	cmpgeui	zero,zero,9186
   8f870:	0008f8b8 	rdprs	zero,zero,9186
   8f874:	0008f8b8 	rdprs	zero,zero,9186
   8f878:	0008f8b8 	rdprs	zero,zero,9186
   8f87c:	0008f8a8 	cmpgeui	zero,zero,9186
   8f880:	0008f8b0 	cmpltui	zero,zero,9186
   8f884:	0008f8b8 	rdprs	zero,zero,9186
   8f888:	0008f8a8 	cmpgeui	zero,zero,9186
   8f88c:	0008f8a8 	cmpgeui	zero,zero,9186
   8f890:	0008f8b8 	rdprs	zero,zero,9186
   8f894:	0008f8a8 	cmpgeui	zero,zero,9186
   8f898:	0008f8b0 	cmpltui	zero,zero,9186
   8f89c:	0008f8b8 	rdprs	zero,zero,9186
   8f8a0:	0008f8b8 	rdprs	zero,zero,9186
   8f8a4:	0008f8a8 	cmpgeui	zero,zero,9186
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   8f8a8:	00800044 	movi	r2,1
   8f8ac:	00000306 	br	8f8bc <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   8f8b0:	0005883a 	mov	r2,zero
   8f8b4:	00000106 	br	8f8bc <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   8f8b8:	0005883a 	mov	r2,zero
  }
}
   8f8bc:	e037883a 	mov	sp,fp
   8f8c0:	df000017 	ldw	fp,0(sp)
   8f8c4:	dec00104 	addi	sp,sp,4
   8f8c8:	f800283a 	ret

0008f8cc <atexit>:
   8f8cc:	200b883a 	mov	r5,r4
   8f8d0:	000f883a 	mov	r7,zero
   8f8d4:	000d883a 	mov	r6,zero
   8f8d8:	0009883a 	mov	r4,zero
   8f8dc:	008f9941 	jmpi	8f994 <__register_exitproc>

0008f8e0 <exit>:
   8f8e0:	defffe04 	addi	sp,sp,-8
   8f8e4:	000b883a 	mov	r5,zero
   8f8e8:	dc000015 	stw	r16,0(sp)
   8f8ec:	dfc00115 	stw	ra,4(sp)
   8f8f0:	2021883a 	mov	r16,r4
   8f8f4:	008faac0 	call	8faac <__call_exitprocs>
   8f8f8:	00800134 	movhi	r2,4
   8f8fc:	10877804 	addi	r2,r2,7648
   8f900:	11000017 	ldw	r4,0(r2)
   8f904:	20800f17 	ldw	r2,60(r4)
   8f908:	10000126 	beq	r2,zero,8f910 <exit+0x30>
   8f90c:	103ee83a 	callr	r2
   8f910:	8009883a 	mov	r4,r16
   8f914:	008fc2c0 	call	8fc2c <_exit>

0008f918 <memcmp>:
   8f918:	01c000c4 	movi	r7,3
   8f91c:	3980192e 	bgeu	r7,r6,8f984 <memcmp+0x6c>
   8f920:	2144b03a 	or	r2,r4,r5
   8f924:	11c4703a 	and	r2,r2,r7
   8f928:	10000f26 	beq	r2,zero,8f968 <memcmp+0x50>
   8f92c:	20800003 	ldbu	r2,0(r4)
   8f930:	28c00003 	ldbu	r3,0(r5)
   8f934:	10c0151e 	bne	r2,r3,8f98c <memcmp+0x74>
   8f938:	31bfff84 	addi	r6,r6,-2
   8f93c:	01ffffc4 	movi	r7,-1
   8f940:	00000406 	br	8f954 <memcmp+0x3c>
   8f944:	20800003 	ldbu	r2,0(r4)
   8f948:	28c00003 	ldbu	r3,0(r5)
   8f94c:	31bfffc4 	addi	r6,r6,-1
   8f950:	10c00e1e 	bne	r2,r3,8f98c <memcmp+0x74>
   8f954:	21000044 	addi	r4,r4,1
   8f958:	29400044 	addi	r5,r5,1
   8f95c:	31fff91e 	bne	r6,r7,8f944 <memcmp+0x2c>
   8f960:	0005883a 	mov	r2,zero
   8f964:	f800283a 	ret
   8f968:	20c00017 	ldw	r3,0(r4)
   8f96c:	28800017 	ldw	r2,0(r5)
   8f970:	18bfee1e 	bne	r3,r2,8f92c <memcmp+0x14>
   8f974:	31bfff04 	addi	r6,r6,-4
   8f978:	21000104 	addi	r4,r4,4
   8f97c:	29400104 	addi	r5,r5,4
   8f980:	39bff936 	bltu	r7,r6,8f968 <memcmp+0x50>
   8f984:	303fe91e 	bne	r6,zero,8f92c <memcmp+0x14>
   8f988:	003ff506 	br	8f960 <memcmp+0x48>
   8f98c:	10c5c83a 	sub	r2,r2,r3
   8f990:	f800283a 	ret

0008f994 <__register_exitproc>:
   8f994:	defffa04 	addi	sp,sp,-24
   8f998:	dc000315 	stw	r16,12(sp)
   8f99c:	04000134 	movhi	r16,4
   8f9a0:	84077804 	addi	r16,r16,7648
   8f9a4:	80c00017 	ldw	r3,0(r16)
   8f9a8:	dc400415 	stw	r17,16(sp)
   8f9ac:	dfc00515 	stw	ra,20(sp)
   8f9b0:	18805217 	ldw	r2,328(r3)
   8f9b4:	2023883a 	mov	r17,r4
   8f9b8:	10003726 	beq	r2,zero,8fa98 <__register_exitproc+0x104>
   8f9bc:	10c00117 	ldw	r3,4(r2)
   8f9c0:	010007c4 	movi	r4,31
   8f9c4:	20c00e16 	blt	r4,r3,8fa00 <__register_exitproc+0x6c>
   8f9c8:	1a000044 	addi	r8,r3,1
   8f9cc:	8800221e 	bne	r17,zero,8fa58 <__register_exitproc+0xc4>
   8f9d0:	18c00084 	addi	r3,r3,2
   8f9d4:	18c7883a 	add	r3,r3,r3
   8f9d8:	18c7883a 	add	r3,r3,r3
   8f9dc:	12000115 	stw	r8,4(r2)
   8f9e0:	10c7883a 	add	r3,r2,r3
   8f9e4:	19400015 	stw	r5,0(r3)
   8f9e8:	0005883a 	mov	r2,zero
   8f9ec:	dfc00517 	ldw	ra,20(sp)
   8f9f0:	dc400417 	ldw	r17,16(sp)
   8f9f4:	dc000317 	ldw	r16,12(sp)
   8f9f8:	dec00604 	addi	sp,sp,24
   8f9fc:	f800283a 	ret
   8fa00:	00800034 	movhi	r2,0
   8fa04:	10800004 	addi	r2,r2,0
   8fa08:	10002626 	beq	r2,zero,8faa4 <__register_exitproc+0x110>
   8fa0c:	01006404 	movi	r4,400
   8fa10:	d9400015 	stw	r5,0(sp)
   8fa14:	d9800115 	stw	r6,4(sp)
   8fa18:	d9c00215 	stw	r7,8(sp)
   8fa1c:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x40000>
   8fa20:	d9400017 	ldw	r5,0(sp)
   8fa24:	d9800117 	ldw	r6,4(sp)
   8fa28:	d9c00217 	ldw	r7,8(sp)
   8fa2c:	10001d26 	beq	r2,zero,8faa4 <__register_exitproc+0x110>
   8fa30:	81000017 	ldw	r4,0(r16)
   8fa34:	10000115 	stw	zero,4(r2)
   8fa38:	02000044 	movi	r8,1
   8fa3c:	22405217 	ldw	r9,328(r4)
   8fa40:	0007883a 	mov	r3,zero
   8fa44:	12400015 	stw	r9,0(r2)
   8fa48:	20805215 	stw	r2,328(r4)
   8fa4c:	10006215 	stw	zero,392(r2)
   8fa50:	10006315 	stw	zero,396(r2)
   8fa54:	883fde26 	beq	r17,zero,8f9d0 <__register_exitproc+0x3c>
   8fa58:	18c9883a 	add	r4,r3,r3
   8fa5c:	2109883a 	add	r4,r4,r4
   8fa60:	1109883a 	add	r4,r2,r4
   8fa64:	21802215 	stw	r6,136(r4)
   8fa68:	01800044 	movi	r6,1
   8fa6c:	12406217 	ldw	r9,392(r2)
   8fa70:	30cc983a 	sll	r6,r6,r3
   8fa74:	4992b03a 	or	r9,r9,r6
   8fa78:	12406215 	stw	r9,392(r2)
   8fa7c:	21c04215 	stw	r7,264(r4)
   8fa80:	01000084 	movi	r4,2
   8fa84:	893fd21e 	bne	r17,r4,8f9d0 <__register_exitproc+0x3c>
   8fa88:	11006317 	ldw	r4,396(r2)
   8fa8c:	218cb03a 	or	r6,r4,r6
   8fa90:	11806315 	stw	r6,396(r2)
   8fa94:	003fce06 	br	8f9d0 <__register_exitproc+0x3c>
   8fa98:	18805304 	addi	r2,r3,332
   8fa9c:	18805215 	stw	r2,328(r3)
   8faa0:	003fc606 	br	8f9bc <__register_exitproc+0x28>
   8faa4:	00bfffc4 	movi	r2,-1
   8faa8:	003fd006 	br	8f9ec <__register_exitproc+0x58>

0008faac <__call_exitprocs>:
   8faac:	defff504 	addi	sp,sp,-44
   8fab0:	df000915 	stw	fp,36(sp)
   8fab4:	dd400615 	stw	r21,24(sp)
   8fab8:	dc800315 	stw	r18,12(sp)
   8fabc:	dfc00a15 	stw	ra,40(sp)
   8fac0:	ddc00815 	stw	r23,32(sp)
   8fac4:	dd800715 	stw	r22,28(sp)
   8fac8:	dd000515 	stw	r20,20(sp)
   8facc:	dcc00415 	stw	r19,16(sp)
   8fad0:	dc400215 	stw	r17,8(sp)
   8fad4:	dc000115 	stw	r16,4(sp)
   8fad8:	d9000015 	stw	r4,0(sp)
   8fadc:	2839883a 	mov	fp,r5
   8fae0:	04800044 	movi	r18,1
   8fae4:	057fffc4 	movi	r21,-1
   8fae8:	00800134 	movhi	r2,4
   8faec:	10877804 	addi	r2,r2,7648
   8faf0:	12000017 	ldw	r8,0(r2)
   8faf4:	45005217 	ldw	r20,328(r8)
   8faf8:	44c05204 	addi	r19,r8,328
   8fafc:	a0001c26 	beq	r20,zero,8fb70 <__call_exitprocs+0xc4>
   8fb00:	a0800117 	ldw	r2,4(r20)
   8fb04:	15ffffc4 	addi	r23,r2,-1
   8fb08:	b8000d16 	blt	r23,zero,8fb40 <__call_exitprocs+0x94>
   8fb0c:	14000044 	addi	r16,r2,1
   8fb10:	8421883a 	add	r16,r16,r16
   8fb14:	8421883a 	add	r16,r16,r16
   8fb18:	84402004 	addi	r17,r16,128
   8fb1c:	a463883a 	add	r17,r20,r17
   8fb20:	a421883a 	add	r16,r20,r16
   8fb24:	e0001e26 	beq	fp,zero,8fba0 <__call_exitprocs+0xf4>
   8fb28:	80804017 	ldw	r2,256(r16)
   8fb2c:	e0801c26 	beq	fp,r2,8fba0 <__call_exitprocs+0xf4>
   8fb30:	bdffffc4 	addi	r23,r23,-1
   8fb34:	843fff04 	addi	r16,r16,-4
   8fb38:	8c7fff04 	addi	r17,r17,-4
   8fb3c:	bd7ff91e 	bne	r23,r21,8fb24 <__call_exitprocs+0x78>
   8fb40:	00800034 	movhi	r2,0
   8fb44:	10800004 	addi	r2,r2,0
   8fb48:	10000926 	beq	r2,zero,8fb70 <__call_exitprocs+0xc4>
   8fb4c:	a0800117 	ldw	r2,4(r20)
   8fb50:	1000301e 	bne	r2,zero,8fc14 <__call_exitprocs+0x168>
   8fb54:	a0800017 	ldw	r2,0(r20)
   8fb58:	10003226 	beq	r2,zero,8fc24 <__call_exitprocs+0x178>
   8fb5c:	a009883a 	mov	r4,r20
   8fb60:	98800015 	stw	r2,0(r19)
   8fb64:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x40000>
   8fb68:	9d000017 	ldw	r20,0(r19)
   8fb6c:	a03fe41e 	bne	r20,zero,8fb00 <__call_exitprocs+0x54>
   8fb70:	dfc00a17 	ldw	ra,40(sp)
   8fb74:	df000917 	ldw	fp,36(sp)
   8fb78:	ddc00817 	ldw	r23,32(sp)
   8fb7c:	dd800717 	ldw	r22,28(sp)
   8fb80:	dd400617 	ldw	r21,24(sp)
   8fb84:	dd000517 	ldw	r20,20(sp)
   8fb88:	dcc00417 	ldw	r19,16(sp)
   8fb8c:	dc800317 	ldw	r18,12(sp)
   8fb90:	dc400217 	ldw	r17,8(sp)
   8fb94:	dc000117 	ldw	r16,4(sp)
   8fb98:	dec00b04 	addi	sp,sp,44
   8fb9c:	f800283a 	ret
   8fba0:	a0800117 	ldw	r2,4(r20)
   8fba4:	80c00017 	ldw	r3,0(r16)
   8fba8:	10bfffc4 	addi	r2,r2,-1
   8fbac:	15c01426 	beq	r2,r23,8fc00 <__call_exitprocs+0x154>
   8fbb0:	80000015 	stw	zero,0(r16)
   8fbb4:	183fde26 	beq	r3,zero,8fb30 <__call_exitprocs+0x84>
   8fbb8:	95c8983a 	sll	r4,r18,r23
   8fbbc:	a0806217 	ldw	r2,392(r20)
   8fbc0:	a5800117 	ldw	r22,4(r20)
   8fbc4:	2084703a 	and	r2,r4,r2
   8fbc8:	10000b26 	beq	r2,zero,8fbf8 <__call_exitprocs+0x14c>
   8fbcc:	a0806317 	ldw	r2,396(r20)
   8fbd0:	2088703a 	and	r4,r4,r2
   8fbd4:	20000c1e 	bne	r4,zero,8fc08 <__call_exitprocs+0x15c>
   8fbd8:	89400017 	ldw	r5,0(r17)
   8fbdc:	d9000017 	ldw	r4,0(sp)
   8fbe0:	183ee83a 	callr	r3
   8fbe4:	a0800117 	ldw	r2,4(r20)
   8fbe8:	15bfbf1e 	bne	r2,r22,8fae8 <__call_exitprocs+0x3c>
   8fbec:	98800017 	ldw	r2,0(r19)
   8fbf0:	153fcf26 	beq	r2,r20,8fb30 <__call_exitprocs+0x84>
   8fbf4:	003fbc06 	br	8fae8 <__call_exitprocs+0x3c>
   8fbf8:	183ee83a 	callr	r3
   8fbfc:	003ff906 	br	8fbe4 <__call_exitprocs+0x138>
   8fc00:	a5c00115 	stw	r23,4(r20)
   8fc04:	003feb06 	br	8fbb4 <__call_exitprocs+0x108>
   8fc08:	89000017 	ldw	r4,0(r17)
   8fc0c:	183ee83a 	callr	r3
   8fc10:	003ff406 	br	8fbe4 <__call_exitprocs+0x138>
   8fc14:	a0800017 	ldw	r2,0(r20)
   8fc18:	a027883a 	mov	r19,r20
   8fc1c:	1029883a 	mov	r20,r2
   8fc20:	003fb606 	br	8fafc <__call_exitprocs+0x50>
   8fc24:	0005883a 	mov	r2,zero
   8fc28:	003ffb06 	br	8fc18 <__call_exitprocs+0x16c>

0008fc2c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   8fc2c:	defffd04 	addi	sp,sp,-12
   8fc30:	df000215 	stw	fp,8(sp)
   8fc34:	df000204 	addi	fp,sp,8
   8fc38:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   8fc3c:	0001883a 	nop
   8fc40:	e0bfff17 	ldw	r2,-4(fp)
   8fc44:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   8fc48:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   8fc4c:	10000226 	beq	r2,zero,8fc58 <_exit+0x2c>
    ALT_SIM_FAIL();
   8fc50:	002af070 	cmpltui	zero,zero,43969
   8fc54:	00000106 	br	8fc5c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   8fc58:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   8fc5c:	003fff06 	br	8fc5c <_exit+0x30>
